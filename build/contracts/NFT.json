{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_initBaseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_royalityFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_artist",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_transferable",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Sale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "transferable",
          "type": "bool"
        }
      ],
      "name": "ToggleTransferable",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "artist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseExtension",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "royalityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_royalityFee",
          "type": "uint256"
        }
      ],
      "name": "setRoyalityFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleTransferable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferable_",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
    "10": "contracts/IERC721Enumerable.sol",
    "11": "contracts/IERC721Metadata.sol",
    "13": "contracts/NFT.sol",
    "3": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "4": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Strings.sol",
    "5": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/introspection/ERC165.sol",
    "6": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/introspection/IERC165.sol",
    "7": "contracts/ERC721.sol",
    "8": "contracts/ERC721Enumerable.sol",
    "9": "contracts/IERC721.sol"
  },
  "ast": {
    "absolutePath": "contracts/NFT.sol",
    "exportedSymbols": {
      "Address": [
        2200
      ],
      "Context": [
        2222
      ],
      "ERC165": [
        2449
      ],
      "ERC721": [
        830
      ],
      "ERC721Enumerable": [
        1168
      ],
      "IERC165": [
        2461
      ],
      "IERC721": [
        1284
      ],
      "IERC721Enumerable": [
        1315
      ],
      "IERC721Metadata": [
        1342
      ],
      "IERC721Receiver": [
        1903
      ],
      "NFT": [
        1885
      ],
      "Ownable": [
        2566
      ],
      "Strings": [
        2425
      ]
    },
    "id": 1886,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1377,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1886,
        "sourceUnit": 831,
        "src": "33:22:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1886,
        "sourceUnit": 1169,
        "src": "56:32:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1379,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1886,
        "sourceUnit": 2567,
        "src": "89:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1380,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "143:31:13"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1381,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1168,
              "src": "192:16:13"
            },
            "id": 1382,
            "nodeType": "InheritanceSpecifier",
            "src": "192:16:13"
          },
          {
            "baseName": {
              "id": 1383,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2566,
              "src": "210:7:13"
            },
            "id": 1384,
            "nodeType": "InheritanceSpecifier",
            "src": "210:7:13"
          }
        ],
        "canonicalName": "NFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1885,
        "linearizedBaseContracts": [
          1885,
          2566,
          1168,
          1315,
          830,
          1342,
          1284,
          2449,
          2461,
          2222
        ],
        "name": "NFT",
        "nameLocation": "185:3:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1387,
            "libraryName": {
              "id": 1385,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2425,
              "src": "231:7:13"
            },
            "nodeType": "UsingForDirective",
            "src": "225:26:13",
            "typeName": {
              "id": 1386,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "13faede6",
            "id": 1390,
            "mutability": "mutable",
            "name": "cost",
            "nameLocation": "272:4:13",
            "nodeType": "VariableDeclaration",
            "scope": 1885,
            "src": "257:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1388,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1389,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "279:7:13",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5abeb01",
            "id": 1393,
            "mutability": "mutable",
            "name": "maxSupply",
            "nameLocation": "307:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 1885,
            "src": "292:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1391,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "292:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 1392,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "319:2:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1395,
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "335:7:13",
            "nodeType": "VariableDeclaration",
            "scope": 1885,
            "src": "328:14:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1394,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "328:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c6682862",
            "id": 1398,
            "mutability": "mutable",
            "name": "baseExtension",
            "nameLocation": "362:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 1885,
            "src": "348:37:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1396,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "348:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 1397,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "378:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "43bc1612",
            "id": 1400,
            "mutability": "mutable",
            "name": "artist",
            "nameLocation": "407:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 1885,
            "src": "392:21:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1399,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "392:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "326bb4ad",
            "id": 1402,
            "mutability": "mutable",
            "name": "royalityFee",
            "nameLocation": "434:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 1885,
            "src": "419:26:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1401,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9395b728",
            "id": 1404,
            "mutability": "mutable",
            "name": "transferable_",
            "nameLocation": "465:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 1885,
            "src": "453:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1403,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "453:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1412,
            "name": "Sale",
            "nameLocation": "505:4:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "518:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "510:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1408,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "532:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "524:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1410,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "544:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1412,
                  "src": "536:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:41:13"
            },
            "src": "499:52:13"
          },
          {
            "anonymous": false,
            "id": 1416,
            "name": "ToggleTransferable",
            "nameLocation": "563:18:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1414,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "transferable",
                  "nameLocation": "587:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "582:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:19:13"
            },
            "src": "557:44:13"
          },
          {
            "body": {
              "id": 1451,
              "nodeType": "Block",
              "src": "827:142:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1436,
                        "name": "_initBaseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1422,
                        "src": "848:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1435,
                      "name": "setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1860,
                      "src": "837:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1438,
                  "nodeType": "ExpressionStatement",
                  "src": "837:24:13"
                },
                {
                  "expression": {
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1439,
                      "name": "royalityFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "871:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1440,
                      "name": "_royalityFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1424,
                      "src": "885:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "871:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1442,
                  "nodeType": "ExpressionStatement",
                  "src": "871:26:13"
                },
                {
                  "expression": {
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1443,
                      "name": "artist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "907:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1444,
                      "name": "_artist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1426,
                      "src": "916:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "907:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1446,
                  "nodeType": "ExpressionStatement",
                  "src": "907:16:13"
                },
                {
                  "expression": {
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1447,
                      "name": "transferable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "933:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1448,
                      "name": "_transferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "949:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "933:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1450,
                  "nodeType": "ExpressionStatement",
                  "src": "933:29:13"
                }
              ]
            },
            "id": 1452,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1431,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1418,
                    "src": "811:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1432,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1420,
                    "src": "818:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1433,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1430,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 830,
                  "src": "804:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "804:22:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1418,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "642:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1452,
                  "src": "628:19:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1417,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1420,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "671:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1452,
                  "src": "657:21:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1419,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1422,
                  "mutability": "mutable",
                  "name": "_initBaseURI",
                  "nameLocation": "702:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1452,
                  "src": "688:26:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1424,
                  "mutability": "mutable",
                  "name": "_royalityFee",
                  "nameLocation": "732:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1452,
                  "src": "724:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1426,
                  "mutability": "mutable",
                  "name": "_artist",
                  "nameLocation": "762:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1452,
                  "src": "754:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1428,
                  "mutability": "mutable",
                  "name": "_transferable",
                  "nameLocation": "784:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1452,
                  "src": "779:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1427,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:185:13"
            },
            "returnParameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:0:13"
            },
            "scope": 1885,
            "src": "607:362:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "1067:210:13",
              "statements": [
                {
                  "condition": {
                    "id": 1459,
                    "name": "transferable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1404,
                    "src": "1081:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1469,
                    "nodeType": "Block",
                    "src": "1148:45:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1465,
                            "name": "transferable_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1404,
                            "src": "1162:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1178:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1162:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "1162:20:13"
                      }
                    ]
                  },
                  "id": 1470,
                  "nodeType": "IfStatement",
                  "src": "1077:116:13",
                  "trueBody": {
                    "id": 1464,
                    "nodeType": "Block",
                    "src": "1096:46:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1460,
                            "name": "transferable_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1404,
                            "src": "1110:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1126:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1110:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1463,
                        "nodeType": "ExpressionStatement",
                        "src": "1110:21:13"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1472,
                        "name": "transferable_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1404,
                        "src": "1226:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1471,
                      "name": "ToggleTransferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1416,
                      "src": "1207:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1207:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1474,
                  "nodeType": "EmitStatement",
                  "src": "1202:38:13"
                },
                {
                  "expression": {
                    "id": 1475,
                    "name": "transferable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1404,
                    "src": "1257:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1458,
                  "id": 1476,
                  "nodeType": "Return",
                  "src": "1250:20:13"
                }
              ]
            },
            "functionSelector": "d6bfc22f",
            "id": 1478,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1455,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1454,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2508,
                  "src": "1042:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:9:13"
              }
            ],
            "name": "toggleTransferable",
            "nameLocation": "1012:18:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:2:13"
            },
            "returnParameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1061:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1060:6:13"
            },
            "scope": 1885,
            "src": "1003:274:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1485,
              "nodeType": "Block",
              "src": "1359:37:13",
              "statements": [
                {
                  "expression": {
                    "id": 1483,
                    "name": "transferable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1404,
                    "src": "1376:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1482,
                  "id": 1484,
                  "nodeType": "Return",
                  "src": "1369:20:13"
                }
              ]
            },
            "functionSelector": "92ff0d31",
            "id": 1486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferable",
            "nameLocation": "1317:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1329:2:13"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1486,
                  "src": "1353:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1352:6:13"
            },
            "scope": 1885,
            "src": "1308:88:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1557,
              "nodeType": "Block",
              "src": "1433:548:13",
              "statements": [
                {
                  "assignments": [
                    1490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1490,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "1451:6:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1557,
                      "src": "1443:14:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1489,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1443:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1493,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1491,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "1460:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:13:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1443:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1495,
                          "name": "supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1490,
                          "src": "1491:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1496,
                          "name": "maxSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1393,
                          "src": "1501:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1491:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1483:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1499,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:28:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1500,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1526:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1526:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1502,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2494,
                        "src": "1540:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1540:7:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1526:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1548,
                  "nodeType": "IfStatement",
                  "src": "1522:409:13",
                  "trueBody": {
                    "id": 1547,
                    "nodeType": "Block",
                    "src": "1549:382:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1506,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1571:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1571:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1508,
                                "name": "cost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1390,
                                "src": "1584:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1571:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1505,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1563:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1563:26:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1511,
                        "nodeType": "ExpressionStatement",
                        "src": "1563:26:13"
                      },
                      {
                        "assignments": [
                          1513
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1513,
                            "mutability": "mutable",
                            "name": "royality",
                            "nameLocation": "1690:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1547,
                            "src": "1682:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1512,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1682:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1521,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1514,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1702:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "1702:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1516,
                                  "name": "royalityFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1402,
                                  "src": "1714:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1702:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1518,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1701:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1729:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1701:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1682:50:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1523,
                              "name": "royality",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "1759:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1522,
                            "name": "_payRoyality",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1848,
                            "src": "1746:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1746:22:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1525,
                        "nodeType": "ExpressionStatement",
                        "src": "1746:22:13"
                      },
                      {
                        "assignments": [
                          1527,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1527,
                            "mutability": "mutable",
                            "name": "success2",
                            "nameLocation": "1789:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1547,
                            "src": "1784:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1526,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1784:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1542,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1886:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1530,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2494,
                                      "src": "1811:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 1531,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1811:7:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1803:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1528,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1803:8:13",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1803:16:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1803:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1537,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1534,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "1850:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1535,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "1850:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 1536,
                                      "name": "royality",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1513,
                                      "src": "1862:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1850:20:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1538,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1849:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1803:82:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1803:86:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1783:106:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1544,
                              "name": "success2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1527,
                              "src": "1911:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1543,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1903:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1903:17:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1546,
                        "nodeType": "ExpressionStatement",
                        "src": "1903:17:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1951:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1951:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1552,
                          "name": "supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1490,
                          "src": "1963:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1972:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1963:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1549,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        494,
                        523
                      ],
                      "referencedDeclaration": 494,
                      "src": "1941:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:33:13"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 1558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1411:4:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1415:2:13"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:0:13"
            },
            "scope": 1885,
            "src": "1402:579:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              207
            ],
            "body": {
              "id": 1599,
              "nodeType": "Block",
              "src": "2119:487:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1568,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1560,
                            "src": "2158:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1567,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "2150:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2150:16:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2180:49:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 1566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2129:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:110:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:110:13"
                },
                {
                  "assignments": [
                    1574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1574,
                      "mutability": "mutable",
                      "name": "currentBaseURI",
                      "nameLocation": "2264:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1599,
                      "src": "2250:28:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1573,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2250:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1577,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1575,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1826
                      ],
                      "referencedDeclaration": 1826,
                      "src": "2281:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2281:10:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2250:41:13"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1580,
                              "name": "currentBaseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "2326:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2320:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1578,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2320:5:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2320:21:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2320:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2351:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2320:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2597:2:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2320:279:13",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1589,
                              "name": "currentBaseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "2441:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1590,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1560,
                                  "src": "2481:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2307,
                                "src": "2481:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 1592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2481:18:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1593,
                              "name": "baseExtension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1398,
                              "src": "2525:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "id": 1587,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2399:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2399:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2399:161:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2371:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1585,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2371:6:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2371:207:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1565,
                  "id": 1598,
                  "nodeType": "Return",
                  "src": "2301:298:13"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 1600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1996:8:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2074:8:13"
            },
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2013:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "2005:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:17:13"
            },
            "returnParameters": {
              "id": 1565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "2100:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1563,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2099:15:13"
            },
            "scope": 1885,
            "src": "1987:619:13",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              342
            ],
            "body": {
              "id": 1673,
              "nodeType": "Block",
              "src": "2778:525:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1614,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2212,
                              "src": "2828:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2828:12:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1616,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1606,
                            "src": "2842:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1613,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "2809:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2809:41:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2864:51:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2788:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:137:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:137:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1621,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2940:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2940:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2952:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2940:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1666,
                  "nodeType": "IfStatement",
                  "src": "2936:322:13",
                  "trueBody": {
                    "id": 1665,
                    "nodeType": "Block",
                    "src": "2955:303:13",
                    "statements": [
                      {
                        "assignments": [
                          1626
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1626,
                            "mutability": "mutable",
                            "name": "royality",
                            "nameLocation": "2977:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1665,
                            "src": "2969:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1625,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2969:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1634,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1627,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2989:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "2989:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1629,
                                  "name": "royalityFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1402,
                                  "src": "3001:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2989:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1631,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2988:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3016:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "2988:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2969:50:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1636,
                              "name": "royality",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1626,
                              "src": "3046:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1635,
                            "name": "_payRoyality",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1848,
                            "src": "3033:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3033:22:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1638,
                        "nodeType": "ExpressionStatement",
                        "src": "3033:22:13"
                      },
                      {
                        "assignments": [
                          1640,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1640,
                            "mutability": "mutable",
                            "name": "success2",
                            "nameLocation": "3076:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1665,
                            "src": "3071:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1639,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3071:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1653,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3155:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1643,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1602,
                                    "src": "3098:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3090:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1641,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3090:8:13",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3090:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3090:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1646,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3116:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3116:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1648,
                                  "name": "royality",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1626,
                                  "src": "3128:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3116:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3090:47:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3090:81:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3070:101:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1655,
                              "name": "success2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1640,
                              "src": "3193:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1654,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3185:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3185:17:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1657,
                        "nodeType": "ExpressionStatement",
                        "src": "3185:17:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1659,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1602,
                              "src": "3227:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1660,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1604,
                              "src": "3233:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1661,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3237:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "3237:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1658,
                            "name": "Sale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "3222:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3222:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1664,
                        "nodeType": "EmitStatement",
                        "src": "3217:30:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1668,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1602,
                        "src": "3278:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1669,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "3284:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1670,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1606,
                        "src": "3288:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1667,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "3268:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3268:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1672,
                  "nodeType": "ExpressionStatement",
                  "src": "3268:28:13"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 1674,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1610,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1609,
                  "name": "isTransferable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1884,
                  "src": "2764:14:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2764:14:13"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "2654:12:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2755:8:13"
            },
            "parameters": {
              "id": 1607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1602,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2684:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "2676:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1604,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2706:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "2698:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2698:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2726:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "2718:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2718:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2666:73:13"
            },
            "returnParameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2778:0:13"
            },
            "scope": 1885,
            "src": "2645:658:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              361
            ],
            "body": {
              "id": 1739,
              "nodeType": "Block",
              "src": "3479:388:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1686,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3493:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3493:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3505:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3493:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1731,
                  "nodeType": "IfStatement",
                  "src": "3489:322:13",
                  "trueBody": {
                    "id": 1730,
                    "nodeType": "Block",
                    "src": "3508:303:13",
                    "statements": [
                      {
                        "assignments": [
                          1691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1691,
                            "mutability": "mutable",
                            "name": "royality",
                            "nameLocation": "3530:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1730,
                            "src": "3522:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1690,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3522:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1699,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1692,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3542:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1693,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3542:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1694,
                                  "name": "royalityFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1402,
                                  "src": "3554:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3542:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1696,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3541:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3569:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "3541:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3522:50:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1701,
                              "name": "royality",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "3599:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1700,
                            "name": "_payRoyality",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1848,
                            "src": "3586:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3586:22:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1703,
                        "nodeType": "ExpressionStatement",
                        "src": "3586:22:13"
                      },
                      {
                        "assignments": [
                          1705,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1705,
                            "mutability": "mutable",
                            "name": "success2",
                            "nameLocation": "3629:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1730,
                            "src": "3624:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1704,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3624:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1718,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3708:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1708,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1676,
                                    "src": "3651:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1707,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3643:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1706,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3643:8:13",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3643:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3643:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1711,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3669:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3669:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1713,
                                  "name": "royality",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1691,
                                  "src": "3681:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3669:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3643:47:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3643:81:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3623:101:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1720,
                              "name": "success2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1705,
                              "src": "3746:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1719,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3738:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3738:17:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1722,
                        "nodeType": "ExpressionStatement",
                        "src": "3738:17:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1724,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "3780:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1725,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1678,
                              "src": "3786:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1726,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3790:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "3790:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1723,
                            "name": "Sale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "3775:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3775:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1729,
                        "nodeType": "EmitStatement",
                        "src": "3770:30:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1733,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "3838:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1734,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1678,
                        "src": "3844:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1735,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1680,
                        "src": "3848:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3857:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1732,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1740,
                        1817
                      ],
                      "referencedDeclaration": 1817,
                      "src": "3821:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1738,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:39:13"
                }
              ]
            },
            "functionSelector": "42842e0e",
            "id": 1740,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1683,
                  "name": "isTransferable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1884,
                  "src": "3465:14:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3465:14:13"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "3351:16:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1682,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3456:8:13"
            },
            "parameters": {
              "id": 1681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1676,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3385:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "3377:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3407:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "3399:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3399:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1680,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3427:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "3419:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3367:73:13"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3479:0:13"
            },
            "scope": 1885,
            "src": "3342:525:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              391
            ],
            "body": {
              "id": 1816,
              "nodeType": "Block",
              "src": "4072:536:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1756,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2212,
                              "src": "4122:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4122:12:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1758,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1746,
                            "src": "4136:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1755,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "4103:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:41:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4158:51:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4082:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4082:137:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1762,
                  "nodeType": "ExpressionStatement",
                  "src": "4082:137:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1763,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4234:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4234:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4246:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4234:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1808,
                  "nodeType": "IfStatement",
                  "src": "4230:322:13",
                  "trueBody": {
                    "id": 1807,
                    "nodeType": "Block",
                    "src": "4249:303:13",
                    "statements": [
                      {
                        "assignments": [
                          1768
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1768,
                            "mutability": "mutable",
                            "name": "royality",
                            "nameLocation": "4271:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1807,
                            "src": "4263:16:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1767,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4263:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1776,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1769,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4283:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4283:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1771,
                                  "name": "royalityFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1402,
                                  "src": "4295:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4283:23:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1773,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4282:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4310:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "4282:31:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4263:50:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1778,
                              "name": "royality",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1768,
                              "src": "4340:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1777,
                            "name": "_payRoyality",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1848,
                            "src": "4327:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4327:22:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1780,
                        "nodeType": "ExpressionStatement",
                        "src": "4327:22:13"
                      },
                      {
                        "assignments": [
                          1782,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1782,
                            "mutability": "mutable",
                            "name": "success2",
                            "nameLocation": "4370:8:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1807,
                            "src": "4365:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1781,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4365:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1795,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4449:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1785,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1742,
                                    "src": "4392:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4384:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1783,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4384:8:13",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4384:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "4384:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1788,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4410:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4410:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1790,
                                  "name": "royality",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1768,
                                  "src": "4422:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4410:20:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "4384:47:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4384:81:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4364:101:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1797,
                              "name": "success2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1782,
                              "src": "4487:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1796,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4479:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4479:17:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1799,
                        "nodeType": "ExpressionStatement",
                        "src": "4479:17:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1801,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1742,
                              "src": "4521:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1802,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1744,
                              "src": "4527:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1803,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4531:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4531:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1800,
                            "name": "Sale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "4516:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4516:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1806,
                        "nodeType": "EmitStatement",
                        "src": "4511:30:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1810,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "4576:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1811,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1744,
                        "src": "4582:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1812,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1746,
                        "src": "4586:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1813,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1748,
                        "src": "4595:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1809,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "4562:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4562:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1815,
                  "nodeType": "ExpressionStatement",
                  "src": "4562:39:13"
                }
              ]
            },
            "functionSelector": "b88d4fde",
            "id": 1817,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1751,
                  "name": "isTransferable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1884,
                  "src": "4057:14:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "4057:14:13"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "3915:16:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1750,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4048:8:13"
            },
            "parameters": {
              "id": 1749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3949:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "3941:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3941:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1744,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3971:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "3963:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3963:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1746,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3991:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "3983:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1748,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4021:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "4008:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1747,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3931:101:13"
            },
            "returnParameters": {
              "id": 1753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4072:0:13"
            },
            "scope": 1885,
            "src": "3906:702:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              216
            ],
            "body": {
              "id": 1825,
              "nodeType": "Block",
              "src": "4715:31:13",
              "statements": [
                {
                  "expression": {
                    "id": 1823,
                    "name": "baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1395,
                    "src": "4732:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1822,
                  "id": 1824,
                  "nodeType": "Return",
                  "src": "4725:14:13"
                }
              ]
            },
            "id": 1826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "4649:8:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1819,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4682:8:13"
            },
            "parameters": {
              "id": 1818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4657:2:13"
            },
            "returnParameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "4700:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4699:15:13"
            },
            "scope": 1885,
            "src": "4640:106:13",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1847,
              "nodeType": "Block",
              "src": "4805:109:13",
              "statements": [
                {
                  "assignments": [
                    1832,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1832,
                      "mutability": "mutable",
                      "name": "success1",
                      "nameLocation": "4821:8:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1847,
                      "src": "4816:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1831,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4816:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1842,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4877:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1835,
                              "name": "artist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1400,
                              "src": "4843:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4835:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1833,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4835:8:13",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4835:15:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4835:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1838,
                          "name": "_royalityFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1828,
                          "src": "4863:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4835:41:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4835:45:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4815:65:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1844,
                        "name": "success1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1832,
                        "src": "4898:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4890:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4890:17:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "4890:17:13"
                }
              ]
            },
            "id": 1848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payRoyality",
            "nameLocation": "4761:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1828,
                  "mutability": "mutable",
                  "name": "_royalityFee",
                  "nameLocation": "4782:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "4774:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4774:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4773:22:13"
            },
            "returnParameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4805:0:13"
            },
            "scope": 1885,
            "src": "4752:162:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1859,
              "nodeType": "Block",
              "src": "5007:38:13",
              "statements": [
                {
                  "expression": {
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1855,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "5017:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1856,
                      "name": "_newBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1850,
                      "src": "5027:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5017:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1858,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:21:13"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 1860,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1853,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1852,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2508,
                  "src": "4997:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "4997:9:13"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "4952:10:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1850,
                  "mutability": "mutable",
                  "name": "_newBaseURI",
                  "nameLocation": "4977:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1860,
                  "src": "4963:25:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1849,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4963:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4962:27:13"
            },
            "returnParameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5007:0:13"
            },
            "scope": 1885,
            "src": "4943:102:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1871,
              "nodeType": "Block",
              "src": "5114:43:13",
              "statements": [
                {
                  "expression": {
                    "id": 1869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1867,
                      "name": "royalityFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "5124:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1868,
                      "name": "_royalityFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "5138:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5124:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1870,
                  "nodeType": "ExpressionStatement",
                  "src": "5124:26:13"
                }
              ]
            },
            "functionSelector": "98f24682",
            "id": 1872,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1865,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1864,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2508,
                  "src": "5104:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "5104:9:13"
              }
            ],
            "name": "setRoyalityFee",
            "nameLocation": "5060:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "_royalityFee",
                  "nameLocation": "5083:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "5075:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5074:22:13"
            },
            "returnParameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5114:0:13"
            },
            "scope": 1885,
            "src": "5051:106:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1883,
              "nodeType": "Block",
              "src": "5206:92:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1875,
                            "name": "transferable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "5224:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5224:14:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5242:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5224:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656d62657273686970733a206e6f74207472616e7366657261626c65",
                        "id": 1879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5248:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b0d29386ed8625189733d3d904b64163445c6712385e6b8aedc2f847232d7a0",
                          "typeString": "literal_string \"Memberships: not transferable\""
                        },
                        "value": "Memberships: not transferable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b0d29386ed8625189733d3d904b64163445c6712385e6b8aedc2f847232d7a0",
                          "typeString": "literal_string \"Memberships: not transferable\""
                        }
                      ],
                      "id": 1874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5216:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5216:64:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1881,
                  "nodeType": "ExpressionStatement",
                  "src": "5216:64:13"
                },
                {
                  "id": 1882,
                  "nodeType": "PlaceholderStatement",
                  "src": "5290:1:13"
                }
              ]
            },
            "id": 1884,
            "name": "isTransferable",
            "nameLocation": "5189:14:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5203:2:13"
            },
            "src": "5180:118:13",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1886,
        "src": "176:5124:13",
        "usedErrors": []
      }
    ],
    "src": "33:5268:13"
  },
  "bytecode": "670de0b6b3a7640000600b556014600c5560c06040526005608081905264173539b7b760d91b60a09081526200003991600e9190620001d0565b503480156200004757600080fd5b506040516200287a3803806200287a8339810160408190526200006a9162000359565b85518690869062000083906000906020850190620001d0565b50805162000099906001906020840190620001d0565b505050620000b6620000b06200010260201b60201c565b62000106565b620000c18462000158565b601092909255600f80546001600160a01b0319166001600160a01b03929092169190911790556011805460ff19169115159190911790555062000464915050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a546001600160a01b03163314620001b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b8051620001cc90600d906020840190620001d0565b5050565b828054620001de9062000427565b90600052602060002090601f0160209004810192826200020257600085556200024d565b82601f106200021d57805160ff19168380011785556200024d565b828001600101855582156200024d579182015b828111156200024d57825182559160200191906001019062000230565b506200025b9291506200025f565b5090565b5b808211156200025b576000815560010162000260565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029e57600080fd5b81516001600160401b0380821115620002bb57620002bb62000276565b604051601f8301601f19908116603f01168101908282118183101715620002e657620002e662000276565b816040528381526020925086838588010111156200030357600080fd5b600091505b8382101562000327578582018301518183018401529082019062000308565b83821115620003395760008385830101525b9695505050505050565b805180151581146200035457600080fd5b919050565b60008060008060008060c087890312156200037357600080fd5b86516001600160401b03808211156200038b57600080fd5b620003998a838b016200028c565b97506020890151915080821115620003b057600080fd5b620003be8a838b016200028c565b96506040890151915080821115620003d557600080fd5b50620003e489828a016200028c565b606089015160808a0151919650945090506001600160a01b03811681146200040b57600080fd5b91506200041b60a0880162000343565b90509295509295509295565b600181811c908216806200043c57607f821691505b602082108114156200045e57634e487b7160e01b600052602260045260246000fd5b50919050565b61240680620004746000396000f3fe6080604052600436106101cd5760003560e01c806370a08231116100f7578063a22cb46511610095578063d5abeb0111610064578063d5abeb01146104c2578063d6bfc22f146104d8578063e985e9c5146104ed578063f2fde38b1461053657600080fd5b8063a22cb4651461045a578063b88d4fde1461047a578063c66828621461048d578063c87b56dd146104a257600080fd5b806392ff0d31116100d157806392ff0d31146103f35780639395b7281461040b57806395d89b411461042557806398f246821461043a57600080fd5b806370a08231146103a0578063715018a6146103c05780638da5cb5b146103d557600080fd5b806323b872dd1161016f57806343bc16121161013e57806343bc1612146103205780634f6ccce71461034057806355f804b3146103605780636352211e1461038057600080fd5b806323b872dd146102c45780632f745c59146102d7578063326bb4ad146102f757806342842e0e1461030d57600080fd5b8063095ea7b3116101ab578063095ea7b3146102615780631249c58b1461028357806313faede61461028b57806318160ddd146102af57600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed366004611d81565b610556565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c610581565b6040516101fe9190611df6565b34801561023557600080fd5b50610249610244366004611e09565b610613565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c366004611e3e565b6106ad565b005b6102816107c3565b34801561029757600080fd5b506102a1600b5481565b6040519081526020016101fe565b3480156102bb57600080fd5b506008546102a1565b6102816102d2366004611e68565b6108b7565b3480156102e357600080fd5b506102a16102f2366004611e3e565b6109ed565b34801561030357600080fd5b506102a160105481565b61028161031b366004611e68565b610a83565b34801561032c57600080fd5b50600f54610249906001600160a01b031681565b34801561034c57600080fd5b506102a161035b366004611e09565b610ba3565b34801561036c57600080fd5b5061028161037b366004611f30565b610c36565b34801561038c57600080fd5b5061024961039b366004611e09565b610c77565b3480156103ac57600080fd5b506102a16103bb366004611f79565b610cee565b3480156103cc57600080fd5b50610281610d75565b3480156103e157600080fd5b50600a546001600160a01b0316610249565b3480156103ff57600080fd5b5060115460ff166101f2565b34801561041757600080fd5b506011546101f29060ff1681565b34801561043157600080fd5b5061021c610dab565b34801561044657600080fd5b50610281610455366004611e09565b610dba565b34801561046657600080fd5b50610281610475366004611f94565b610de9565b610281610488366004611fd0565b610df4565b34801561049957600080fd5b5061021c610f31565b3480156104ae57600080fd5b5061021c6104bd366004611e09565b610fbf565b3480156104ce57600080fd5b506102a1600c5481565b3480156104e457600080fd5b506101f261109d565b3480156104f957600080fd5b506101f261050836600461204c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561054257600080fd5b50610281610551366004611f79565b611138565b60006001600160e01b0319821663780e9d6360e01b148061057b575061057b826111d0565b92915050565b6060600080546105909061207f565b80601f01602080910402602001604051908101604052809291908181526020018280546105bc9061207f565b80156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106915760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106b882610c77565b9050806001600160a01b0316836001600160a01b031614156107265760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610688565b336001600160a01b038216148061074257506107428133610508565b6107b45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610688565b6107be8383611220565b505050565b60006107ce60085490565b9050600c548111156107df57600080fd5b600a546001600160a01b031633146108a057600b5434101561080057600080fd5b600060646010543461081291906120d0565b61081c9190612105565b90506108278161128e565b600061083b600a546001600160a01b031690565b6001600160a01b031661084e8334612119565b604051600081818185875af1925050503d806000811461088a576040519150601f19603f3d011682016040523d82523d6000602084013e61088f565b606091505b505090508061089d57600080fd5b50505b6108b4336108af836001612130565b6112ee565b50565b60115460ff1615156001146108de5760405162461bcd60e51b815260040161068890612148565b6108e83382611308565b6109045760405162461bcd60e51b81526004016106889061217f565b34156109e257600060646010543461091c91906120d0565b6109269190612105565b90506109318161128e565b60006001600160a01b0385166109478334612119565b604051600081818185875af1925050503d8060008114610983576040519150601f19603f3d011682016040523d82523d6000602084013e610988565b606091505b505090508061099657600080fd5b604080516001600160a01b03878116825286166020820152348183015290517f3f3483d0995db4c081e0101ef6753bef457833c20605cd871de61dcb48085a9a9181900360600190a150505b6107be8383836113ff565b60006109f883610cee565b8210610a5a5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610688565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b60115460ff161515600114610aaa5760405162461bcd60e51b815260040161068890612148565b3415610b88576000606460105434610ac291906120d0565b610acc9190612105565b9050610ad78161128e565b60006001600160a01b038516610aed8334612119565b604051600081818185875af1925050503d8060008114610b29576040519150601f19603f3d011682016040523d82523d6000602084013e610b2e565b606091505b5050905080610b3c57600080fd5b604080516001600160a01b03878116825286166020820152348183015290517f3f3483d0995db4c081e0101ef6753bef457833c20605cd871de61dcb48085a9a9181900360600190a150505b6107be83838360405180602001604052806000815250610df4565b6000610bae60085490565b8210610c115760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610688565b60088281548110610c2457610c246121d0565b90600052602060002001549050919050565b600a546001600160a01b03163314610c605760405162461bcd60e51b8152600401610688906121e6565b8051610c7390600d906020840190611cd2565b5050565b6000818152600260205260408120546001600160a01b03168061057b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610688565b60006001600160a01b038216610d595760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610688565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610d9f5760405162461bcd60e51b8152600401610688906121e6565b610da960006115aa565b565b6060600180546105909061207f565b600a546001600160a01b03163314610de45760405162461bcd60e51b8152600401610688906121e6565b601055565b610c733383836115fc565b60115460ff161515600114610e1b5760405162461bcd60e51b815260040161068890612148565b610e253383611308565b610e415760405162461bcd60e51b81526004016106889061217f565b3415610f1f576000606460105434610e5991906120d0565b610e639190612105565b9050610e6e8161128e565b60006001600160a01b038616610e848334612119565b604051600081818185875af1925050503d8060008114610ec0576040519150601f19603f3d011682016040523d82523d6000602084013e610ec5565b606091505b5050905080610ed357600080fd5b604080516001600160a01b03888116825287166020820152348183015290517f3f3483d0995db4c081e0101ef6753bef457833c20605cd871de61dcb48085a9a9181900360600190a150505b610f2b848484846116cb565b50505050565b600e8054610f3e9061207f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6a9061207f565b8015610fb75780601f10610f8c57610100808354040283529160200191610fb7565b820191906000526020600020905b815481529060010190602001808311610f9a57829003601f168201915b505050505081565b6000818152600260205260409020546060906001600160a01b031661103e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610688565b60006110486116fe565b905060008151116110685760405180602001604052806000815250611096565b806110728461170d565b600e6040516020016110869392919061221b565b6040516020818303038152906040525b9392505050565b600a546000906001600160a01b031633146110ca5760405162461bcd60e51b8152600401610688906121e6565b60115460ff16156110e4576011805460ff191690556110f2565b6011805460ff191660011790555b60115460405160ff909116151581527f40cec7445e6af82a2c1482720f9cde27ef6cc85136e8b7abd3efd8c6a0ee566f9060200160405180910390a15060115460ff1690565b600a546001600160a01b031633146111625760405162461bcd60e51b8152600401610688906121e6565b6001600160a01b0381166111c75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610688565b6108b4816115aa565b60006001600160e01b031982166380ac58cd60e01b148061120157506001600160e01b03198216635b5e139f60e01b145b8061057b57506301ffc9a760e01b6001600160e01b031983161461057b565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061125582610c77565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600f546040516000916001600160a01b03169083908381818185875af1925050503d80600081146112db576040519150601f19603f3d011682016040523d82523d6000602084013e6112e0565b606091505b5050905080610c7357600080fd5b610c7382826040518060200160405280600081525061180b565b6000818152600260205260408120546001600160a01b03166113815760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610688565b600061138c83610c77565b9050806001600160a01b0316846001600160a01b031614806113c75750836001600160a01b03166113bc84610613565b6001600160a01b0316145b806113f757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661141282610c77565b6001600160a01b03161461147a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610688565b6001600160a01b0382166114dc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610688565b6114e783838361183e565b6114f2600082611220565b6001600160a01b038316600090815260036020526040812080546001929061151b908490612119565b90915550506001600160a01b0382166000908152600360205260408120805460019290611549908490612130565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316141561165e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610688565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6116d68484846113ff565b6116e2848484846118f6565b610f2b5760405162461bcd60e51b8152600401610688906122df565b6060600d80546105909061207f565b6060816117315750506040805180820190915260018152600360fc1b602082015290565b8160005b811561175b578061174581612331565b91506117549050600a83612105565b9150611735565b60008167ffffffffffffffff81111561177657611776611ea4565b6040519080825280601f01601f1916602001820160405280156117a0576020820181803683370190505b5090505b84156113f7576117b5600183612119565b91506117c2600a8661234c565b6117cd906030612130565b60f81b8183815181106117e2576117e26121d0565b60200101906001600160f81b031916908160001a905350611804600a86612105565b94506117a4565b61181583836119f4565b61182260008484846118f6565b6107be5760405162461bcd60e51b8152600401610688906122df565b6001600160a01b0383166118995761189481600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6118bc565b816001600160a01b0316836001600160a01b0316146118bc576118bc8382611b42565b6001600160a01b0382166118d3576107be81611bdf565b826001600160a01b0316826001600160a01b0316146107be576107be8282611c8e565b60006001600160a01b0384163b156119e957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061193a903390899088908890600401612360565b6020604051808303816000875af1925050508015611975575060408051601f3d908101601f191682019092526119729181019061239d565b60015b6119cf573d8080156119a3576040519150601f19603f3d011682016040523d82523d6000602084013e6119a8565b606091505b5080516119c75760405162461bcd60e51b8152600401610688906122df565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113f7565b506001949350505050565b6001600160a01b038216611a4a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610688565b6000818152600260205260409020546001600160a01b031615611aaf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610688565b611abb6000838361183e565b6001600160a01b0382166000908152600360205260408120805460019290611ae4908490612130565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611b4f84610cee565b611b599190612119565b600083815260076020526040902054909150808214611bac576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611bf190600190612119565b60008381526009602052604081205460088054939450909284908110611c1957611c196121d0565b906000526020600020015490508060088381548110611c3a57611c3a6121d0565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611c7257611c726123ba565b6001900381819060005260206000200160009055905550505050565b6000611c9983610cee565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611cde9061207f565b90600052602060002090601f016020900481019282611d005760008555611d46565b82601f10611d1957805160ff1916838001178555611d46565b82800160010185558215611d46579182015b82811115611d46578251825591602001919060010190611d2b565b50611d52929150611d56565b5090565b5b80821115611d525760008155600101611d57565b6001600160e01b0319811681146108b457600080fd5b600060208284031215611d9357600080fd5b813561109681611d6b565b60005b83811015611db9578181015183820152602001611da1565b83811115610f2b5750506000910152565b60008151808452611de2816020860160208601611d9e565b601f01601f19169290920160200192915050565b6020815260006110966020830184611dca565b600060208284031215611e1b57600080fd5b5035919050565b80356001600160a01b0381168114611e3957600080fd5b919050565b60008060408385031215611e5157600080fd5b611e5a83611e22565b946020939093013593505050565b600080600060608486031215611e7d57600080fd5b611e8684611e22565b9250611e9460208501611e22565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611ed557611ed5611ea4565b604051601f8501601f19908116603f01168101908282118183101715611efd57611efd611ea4565b81604052809350858152868686011115611f1657600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611f4257600080fd5b813567ffffffffffffffff811115611f5957600080fd5b8201601f81018413611f6a57600080fd5b6113f784823560208401611eba565b600060208284031215611f8b57600080fd5b61109682611e22565b60008060408385031215611fa757600080fd5b611fb083611e22565b915060208301358015158114611fc557600080fd5b809150509250929050565b60008060008060808587031215611fe657600080fd5b611fef85611e22565b9350611ffd60208601611e22565b925060408501359150606085013567ffffffffffffffff81111561202057600080fd5b8501601f8101871361203157600080fd5b61204087823560208401611eba565b91505092959194509250565b6000806040838503121561205f57600080fd5b61206883611e22565b915061207660208401611e22565b90509250929050565b600181811c9082168061209357607f821691505b602082108114156120b457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156120ea576120ea6120ba565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612114576121146120ef565b500490565b60008282101561212b5761212b6120ba565b500390565b60008219821115612143576121436120ba565b500190565b6020808252601d908201527f4d656d62657273686970733a206e6f74207472616e7366657261626c65000000604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008451602061222e8285838a01611d9e565b8551918401916122418184848a01611d9e565b8554920191600090600181811c908083168061225e57607f831692505b85831081141561227c57634e487b7160e01b85526022600452602485fd5b80801561229057600181146122a1576122ce565b60ff198516885283880195506122ce565b60008b81526020902060005b858110156122c65781548a8201529084019088016122ad565b505083880195505b50939b9a5050505050505050505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415612345576123456120ba565b5060010190565b60008261235b5761235b6120ef565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061239390830184611dca565b9695505050505050565b6000602082840312156123af57600080fd5b815161109681611d6b565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220a7793e0cba937393a587a1119237f196ba70d2ed8be8e599de11e4cd272ce6c564736f6c634300080b0033",
  "bytecodeSha1": "ebb24a5db6a3f5e11490c6fd6c521af216c1ac48",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "NFT",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "142": [
            2006,
            2028,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "13": {
        "NFT._payRoyality": {
          "123": [
            4898,
            4906,
            true
          ]
        },
        "NFT.mint": {
          "109": [
            1491,
            1510,
            true
          ],
          "110": [
            1526,
            1547,
            false
          ],
          "111": [
            1571,
            1588,
            true
          ],
          "112": [
            1911,
            1919,
            true
          ]
        },
        "NFT.safeTransferFrom": {
          "116": [
            3493,
            3506,
            false
          ],
          "117": [
            3746,
            3754,
            true
          ],
          "118": [
            4103,
            4144,
            true
          ],
          "119": [
            4234,
            4247,
            false
          ],
          "120": [
            4487,
            4495,
            true
          ]
        },
        "NFT.toggleTransferable": {
          "122": [
            1081,
            1094,
            false
          ]
        },
        "NFT.tokenURI": {
          "121": [
            2320,
            2352,
            true
          ]
        },
        "NFT.transferFrom": {
          "113": [
            2809,
            2850,
            true
          ],
          "114": [
            2940,
            2953,
            false
          ],
          "115": [
            3193,
            3201,
            true
          ]
        }
      },
      "3": {},
      "4": {
        "Strings.toString": {
          "143": [
            601,
            611,
            false
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {
        "ERC721._mint": {
          "134": [
            10200,
            10216,
            true
          ]
        },
        "ERC721._safeMint": {
          "133": [
            9662,
            9716,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "132": [
            7674,
            7722,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "131": [
            12534,
            12551,
            true
          ]
        },
        "ERC721._transfer": {
          "129": [
            11522,
            11553,
            true
          ],
          "130": [
            11638,
            11654,
            true
          ]
        },
        "ERC721.approve": {
          "124": [
            4347,
            4358,
            true
          ],
          "125": [
            4428,
            4449,
            true
          ],
          "126": [
            4453,
            4490,
            true
          ]
        },
        "ERC721.balanceOf": {
          "128": [
            2480,
            2499,
            true
          ]
        },
        "ERC721.ownerOf": {
          "127": [
            2862,
            2881,
            true
          ]
        }
      },
      "8": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "137": [
            3046,
            3064,
            false
          ],
          "138": [
            3141,
            3151,
            false
          ],
          "139": [
            3238,
            3254,
            false
          ],
          "140": [
            3336,
            3346,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "141": [
            5389,
            5417,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "136": [
            2102,
            2140,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "135": [
            1539,
            1570,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "68": [
            2378,
            2395
          ],
          "69": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "35": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "50": [
            1998,
            2071
          ],
          "51": [
            2081,
            2109
          ]
        }
      },
      "10": {},
      "11": {},
      "13": {
        "NFT._baseURI": {
          "75": [
            4725,
            4739
          ]
        },
        "NFT._payRoyality": {
          "56": [
            4890,
            4907
          ]
        },
        "NFT.mint": {
          "13": [
            1483,
            1511
          ],
          "14": [
            1563,
            1589
          ],
          "15": [
            1746,
            1768
          ],
          "16": [
            1903,
            1920
          ],
          "17": [
            1941,
            1974
          ]
        },
        "NFT.safeTransferFrom": {
          "25": [
            3586,
            3608
          ],
          "26": [
            3738,
            3755
          ],
          "27": [
            3770,
            3800
          ],
          "28": [
            3821,
            3860
          ],
          "39": [
            4082,
            4219
          ],
          "40": [
            4327,
            4349
          ],
          "41": [
            4479,
            4496
          ],
          "42": [
            4511,
            4541
          ],
          "43": [
            4562,
            4601
          ]
        },
        "NFT.setBaseURI": {
          "31": [
            5017,
            5038
          ]
        },
        "NFT.setRoyalityFee": {
          "37": [
            5124,
            5150
          ]
        },
        "NFT.toggleTransferable": {
          "46": [
            1110,
            1131
          ],
          "47": [
            1162,
            1182
          ],
          "48": [
            1202,
            1240
          ],
          "49": [
            1250,
            1270
          ]
        },
        "NFT.tokenURI": {
          "44": [
            2129,
            2239
          ],
          "45": [
            2301,
            2599
          ]
        },
        "NFT.transferFrom": {
          "18": [
            2788,
            2925
          ],
          "19": [
            3033,
            3055
          ],
          "20": [
            3185,
            3202
          ],
          "21": [
            3217,
            3247
          ],
          "22": [
            3268,
            3296
          ]
        },
        "NFT.transferable": {
          "2": [
            1369,
            1389
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "4": {
        "Strings.toString": {
          "76": [
            627,
            637
          ],
          "77": [
            743,
            751
          ],
          "78": [
            765,
            775
          ],
          "79": [
            877,
            888
          ],
          "80": [
            902,
            958
          ],
          "81": [
            972,
            983
          ]
        }
      },
      "5": {
        "ERC165.supportsInterface": {
          "53": [
            930,
            977
          ]
        }
      },
      "6": {},
      "7": {
        "ERC721._approve": {
          "54": [
            12161,
            12190
          ],
          "55": [
            12200,
            12251
          ]
        },
        "ERC721._checkOnERC721Received": {
          "90": [
            13865,
            13971
          ],
          "91": [
            13699,
            13757
          ],
          "92": [
            14175,
            14186
          ]
        },
        "ERC721._exists": {
          "6": [
            8189,
            8226
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "58": [
            8536,
            8643
          ],
          "59": [
            8702,
            8822
          ]
        },
        "ERC721._mint": {
          "93": [
            10192,
            10253
          ],
          "94": [
            10263,
            10321
          ],
          "95": [
            10332,
            10377
          ],
          "96": [
            10388,
            10406
          ],
          "97": [
            10416,
            10437
          ],
          "98": [
            10448,
            10486
          ]
        },
        "ERC721._safeMint": {
          "57": [
            9234,
            9260
          ],
          "82": [
            9613,
            9631
          ],
          "83": [
            9641,
            9792
          ]
        },
        "ERC721._safeTransfer": {
          "73": [
            7615,
            7643
          ],
          "74": [
            7653,
            7798
          ]
        },
        "ERC721._setApprovalForAll": {
          "70": [
            12526,
            12581
          ],
          "71": [
            12591,
            12637
          ],
          "72": [
            12647,
            12693
          ]
        },
        "ERC721._transfer": {
          "60": [
            11501,
            11620
          ],
          "61": [
            11630,
            11695
          ],
          "62": [
            11706,
            11745
          ],
          "63": [
            11807,
            11836
          ],
          "64": [
            11847,
            11867
          ],
          "65": [
            11877,
            11895
          ],
          "66": [
            11905,
            11926
          ],
          "67": [
            11937,
            11969
          ]
        },
        "ERC721.approve": {
          "9": [
            4339,
            4396
          ],
          "11": [
            4407,
            4572
          ],
          "12": [
            4583,
            4604
          ]
        },
        "ERC721.balanceOf": {
          "33": [
            2459,
            2567
          ],
          "34": [
            2577,
            2600
          ]
        },
        "ERC721.getApproved": {
          "7": [
            4811,
            4918
          ],
          "8": [
            4929,
            4960
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            5438,
            5480
          ]
        },
        "ERC721.name": {
          "5": [
            3118,
            3130
          ]
        },
        "ERC721.ownerOf": {
          "32": [
            2841,
            2948
          ]
        },
        "ERC721.setApprovalForAll": {
          "38": [
            5156,
            5208
          ]
        },
        "ERC721.supportsInterface": {
          "52": [
            2083,
            2258
          ]
        },
        "ERC721.symbol": {
          "36": [
            3282,
            3296
          ]
        }
      },
      "8": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "85": [
            4201,
            4245
          ],
          "86": [
            4255,
            4279
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "107": [
            3844,
            3878
          ],
          "108": [
            3888,
            3923
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "84": [
            3080,
            3120
          ],
          "87": [
            3167,
            3214
          ],
          "88": [
            3270,
            3315
          ],
          "89": [
            3362,
            3402
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "103": [
            6904,
            6940
          ],
          "104": [
            7008,
            7049
          ],
          "105": [
            7170,
            7201
          ],
          "106": [
            7211,
            7227
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "99": [
            5504,
            5548
          ],
          "100": [
            5620,
            5663
          ],
          "101": [
            5794,
            5827
          ],
          "102": [
            5837,
            5878
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1151,
            1272
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "29": [
            2081,
            2210
          ],
          "30": [
            2220,
            2244
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "23": [
            1518,
            1639
          ],
          "24": [
            1649,
            1682
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1840,
            1864
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/ERC165",
    "ERC721",
    "ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "176:5124:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:290:8;;;;;;;;;;-1:-1:-1;989:290:8;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;989:290:8;;;;;;;;3039:98:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4672:295::-;;;;;;;;;;-1:-1:-1;4672:295:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:14;;;1674:51;;1662:2;1647:18;4672:295:7;1528:203:14;4210:401:7;;;;;;;;;;-1:-1:-1;4210:401:7;;;;;:::i;:::-;;:::i;:::-;;1402:579:13;;;:::i;257:29::-;;;;;;;;;;;;;;;;;;;2319:25:14;;;2307:2;2292:18;257:29:13;2173:177:14;1760:111:8;;;;;;;;;;-1:-1:-1;1847:10:8;:17;1760:111;;2645:658:13;;;;;;:::i;:::-;;:::i;1358:331:8:-;;;;;;;;;;-1:-1:-1;1358:331:8;;;;;:::i;:::-;;:::i;419:26:13:-;;;;;;;;;;;;;;;;3342:525;;;;;;:::i;:::-;;:::i;392:21::-;;;;;;;;;;-1:-1:-1;392:21:13;;;;-1:-1:-1;;;;;392:21:13;;;1943:308:8;;;;;;;;;;-1:-1:-1;1943:308:8;;;;;:::i;:::-;;:::i;4943:102:13:-;;;;;;;;;;-1:-1:-1;4943:102:13;;;;;:::i;:::-;;:::i;2664:313:7:-;;;;;;;;;;-1:-1:-1;2664:313:7;;;;;:::i;:::-;;:::i;2324:283::-;;;;;;;;;;-1:-1:-1;2324:283:7;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;1308:88:13;;;;;;;;;;-1:-1:-1;1376:13:13;;;;1308:88;;453:25;;;;;;;;;;-1:-1:-1;453:25:13;;;;;;;;3201:102:7;;;;;;;;;;;;;:::i;5051:106:13:-;;;;;;;;;;-1:-1:-1;5051:106:13;;;;;:::i;:::-;;:::i;5034:181:7:-;;;;;;;;;;-1:-1:-1;5034:181:7;;;;;:::i;:::-;;:::i;3906:702:13:-;;;;;;:::i;:::-;;:::i;348:37::-;;;;;;;;;;;;;:::i;1987:619::-;;;;;;;;;;-1:-1:-1;1987:619:13;;;;;:::i;:::-;;:::i;292:29::-;;;;;;;;;;;;;;;;1003:274;;;;;;;;;;;;;:::i;5281:206:7:-;;;;;;;;;;-1:-1:-1;5281:206:7;;;;;:::i;:::-;-1:-1:-1;;;;;5445:25:7;;;5418:4;5445:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5281:206;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;989:290:8:-;1131:4;-1:-1:-1;;;;;;1170:50:8;;-1:-1:-1;;;1170:50:8;;:102;;;1236:36;1260:11;1236:23;:36::i;:::-;1151:121;989:290;-1:-1:-1;;989:290:8:o;3039:98:7:-;3093:13;3125:5;3118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3039:98;:::o;4672:295::-;4788:7;8196:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8196:16:7;4811:107;;;;-1:-1:-1;;;4811:107:7;;5980:2:14;4811:107:7;;;5962:21:14;6019:2;5999:18;;;5992:30;6058:34;6038:18;;;6031:62;-1:-1:-1;;;6109:18:14;;;6102:42;6161:19;;4811:107:7;;;;;;;;;-1:-1:-1;4936:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;4936:24:7;;4672:295::o;4210:401::-;4290:13;4306:23;4321:7;4306:14;:23::i;:::-;4290:39;;4353:5;-1:-1:-1;;;;;4347:11:7;:2;-1:-1:-1;;;;;4347:11:7;;;4339:57;;;;-1:-1:-1;;;4339:57:7;;6393:2:14;4339:57:7;;;6375:21:14;6432:2;6412:18;;;6405:30;6471:34;6451:18;;;6444:62;-1:-1:-1;;;6522:18:14;;;6515:31;6563:19;;4339:57:7;6191:397:14;4339:57:7;719:10:3;-1:-1:-1;;;;;4428:21:7;;;;:62;;-1:-1:-1;4453:37:7;4470:5;719:10:3;5281:206:7;:::i;4453:37::-;4407:165;;;;-1:-1:-1;;;4407:165:7;;6795:2:14;4407:165:7;;;6777:21:14;6834:2;6814:18;;;6807:30;6873:34;6853:18;;;6846:62;6944:26;6924:18;;;6917:54;6988:19;;4407:165:7;6593:420:14;4407:165:7;4583:21;4592:2;4596:7;4583:8;:21::i;:::-;4280:331;4210:401;;:::o;1402:579:13:-;1443:14;1460:13;1847:10:8;:17;;1760:111;1460:13:13;1443:30;;1501:9;;1491:6;:19;;1483:28;;;;;;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1526:10:13;:21;1522:409;;1584:4;;1571:9;:17;;1563:26;;;;;;1682:16;1729:3;1714:11;;1702:9;:23;;;;:::i;:::-;1701:31;;;;:::i;:::-;1682:50;;1746:22;1759:8;1746:12;:22::i;:::-;1784:13;1811:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;1036:85;1811:7:13;-1:-1:-1;;;;;1803:21:13;1850:20;1862:8;1850:9;:20;:::i;:::-;1803:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1783:106;;;1911:8;1903:17;;;;;;1549:382;;1522:409;1941:33;1951:10;1963;:6;1972:1;1963:10;:::i;:::-;1941:9;:33::i;:::-;1433:548;1402:579::o;2645:658::-;1376:13;;;;5224:22;;5242:4;5224:22;5216:64;;;;-1:-1:-1;;;5216:64:13;;;;;;;:::i;:::-;2809:41:::1;719:10:3::0;2842:7:13::1;2809:18;:41::i;:::-;2788:137;;;;-1:-1:-1::0;;;2788:137:13::1;;;;;;;:::i;:::-;2940:9;:13:::0;2936:322:::1;;2969:16;3016:3;3001:11;;2989:9;:23;;;;:::i;:::-;2988:31;;;;:::i;:::-;2969:50;;3033:22;3046:8;3033:12;:22::i;:::-;3071:13;-1:-1:-1::0;;;;;3090:18:13;::::1;3116:20;3128:8:::0;3116:9:::1;:20;:::i;:::-;3090:81;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3070:101;;;3193:8;3185:17;;;::::0;::::1;;3222:25;::::0;;-1:-1:-1;;;;;9087:15:14;;;9069:34;;9139:15;;9134:2;9119:18;;9112:43;3237:9:13::1;9171:18:14::0;;;9164:34;3222:25:13;;::::1;::::0;;;;9019:2:14;3222:25:13;;::::1;2955:303;;2936:322;3268:28;3278:4;3284:2;3288:7;3268:9;:28::i;1358:331:8:-:0;1495:7;1547:23;1564:5;1547:16;:23::i;:::-;1539:5;:31;1518:121;;;;-1:-1:-1;;;1518:121:8;;9411:2:14;1518:121:8;;;9393:21:14;9450:2;9430:18;;;9423:30;9489:34;9469:18;;;9462:62;-1:-1:-1;;;9540:18:14;;;9533:41;9591:19;;1518:121:8;9209:407:14;1518:121:8;-1:-1:-1;;;;;;1656:19:8;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1358:331::o;3342:525:13:-;1376:13;;;;5224:22;;5242:4;5224:22;5216:64;;;;-1:-1:-1;;;5216:64:13;;;;;;;:::i;:::-;3493:9:::1;:13:::0;3489:322:::1;;3522:16;3569:3;3554:11;;3542:9;:23;;;;:::i;:::-;3541:31;;;;:::i;:::-;3522:50;;3586:22;3599:8;3586:12;:22::i;:::-;3624:13;-1:-1:-1::0;;;;;3643:18:13;::::1;3669:20;3681:8:::0;3669:9:::1;:20;:::i;:::-;3643:81;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3623:101;;;3746:8;3738:17;;;::::0;::::1;;3775:25;::::0;;-1:-1:-1;;;;;9087:15:14;;;9069:34;;9139:15;;9134:2;9119:18;;9112:43;3790:9:13::1;9171:18:14::0;;;9164:34;3775:25:13;;::::1;::::0;;;;9019:2:14;3775:25:13;;::::1;3508:303;;3489:322;3821:39;3838:4;3844:2;3848:7;3821:39;;;;;;;;;;;::::0;:16:::1;:39::i;1943:308:8:-:0;2058:7;2110:30;1847:10;:17;;1760:111;2110:30;2102:5;:38;2081:129;;;;-1:-1:-1;;;2081:129:8;;9823:2:14;2081:129:8;;;9805:21:14;9862:2;9842:18;;;9835:30;9901:34;9881:18;;;9874:62;-1:-1:-1;;;9952:18:14;;;9945:42;10004:19;;2081:129:8;9621:408:14;2081:129:8;2227:10;2238:5;2227:17;;;;;;;;:::i;:::-;;;;;;;;;2220:24;;1943:308;;;:::o;4943:102:13:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5017:21:13;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;:::-;;4943:102:::0;:::o;2664:313:7:-;2776:7;2815:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2815:16:7;2862:19;2841:107;;;;-1:-1:-1;;;2841:107:7;;10729:2:14;2841:107:7;;;10711:21:14;10768:2;10748:18;;;10741:30;10807:34;10787:18;;;10780:62;-1:-1:-1;;;10858:18:14;;;10851:39;10907:19;;2841:107:7;10527:405:14;2324:283:7;2436:7;-1:-1:-1;;;;;2480:19:7;;2459:108;;;;-1:-1:-1;;;2459:108:7;;11139:2:14;2459:108:7;;;11121:21:14;11178:2;11158:18;;;11151:30;11217:34;11197:18;;;11190:62;-1:-1:-1;;;11268:18:14;;;11261:40;11318:19;;2459:108:7;10937:406:14;2459:108:7;-1:-1:-1;;;;;;2584:16:7;;;;;:9;:16;;;;;;;2324:283::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3201:102:7:-;3257:13;3289:7;3282:14;;;;;:::i;5051:106:13:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5124:11:13::1;:26:::0;5051:106::o;5034:181:7:-;5156:52;719:10:3;5189:8:7;5199;5156:18;:52::i;3906:702:13:-;1376:13;;;;5224:22;;5242:4;5224:22;5216:64;;;;-1:-1:-1;;;5216:64:13;;;;;;;:::i;:::-;4103:41:::1;719:10:3::0;4136:7:13::1;4103:18;:41::i;:::-;4082:137;;;;-1:-1:-1::0;;;4082:137:13::1;;;;;;;:::i;:::-;4234:9;:13:::0;4230:322:::1;;4263:16;4310:3;4295:11;;4283:9;:23;;;;:::i;:::-;4282:31;;;;:::i;:::-;4263:50;;4327:22;4340:8;4327:12;:22::i;:::-;4365:13;-1:-1:-1::0;;;;;4384:18:13;::::1;4410:20;4422:8:::0;4410:9:::1;:20;:::i;:::-;4384:81;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4364:101;;;4487:8;4479:17;;;::::0;::::1;;4516:25;::::0;;-1:-1:-1;;;;;9087:15:14;;;9069:34;;9139:15;;9134:2;9119:18;;9112:43;4531:9:13::1;9171:18:14::0;;;9164:34;4516:25:13;;::::1;::::0;;;;9019:2:14;4516:25:13;;::::1;4249:303;;4230:322;4562:39;4576:4;4582:2;4586:7;4595:5;4562:13;:39::i;:::-;3906:702:::0;;;;:::o;348:37::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1987:619::-;8173:4:7;8196:16;;;:7;:16;;;;;;2100:13:13;;-1:-1:-1;;;;;8196:16:7;2129:110:13;;;;-1:-1:-1;;;2129:110:13;;11550:2:14;2129:110:13;;;11532:21:14;11589:2;11569:18;;;11562:30;11628:34;11608:18;;;11601:62;-1:-1:-1;;;11679:18:14;;;11672:45;11734:19;;2129:110:13;11348:411:14;2129:110:13;2250:28;2281:10;:8;:10::i;:::-;2250:41;;2351:1;2326:14;2320:28;:32;:279;;;;;;;;;;;;;;;;;2441:14;2481:18;:7;:16;:18::i;:::-;2525:13;2399:161;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2320:279;2301:298;1987:619;-1:-1:-1;;;1987:619:13:o;1003:274::-;1108:6:0;;1061:4:13;;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1081:13:13::1;::::0;::::1;;1077:116;;;1110:13;:21:::0;;-1:-1:-1;;1110:21:13::1;::::0;;1077:116:::1;;;1162:13;:20:::0;;-1:-1:-1;;1162:20:13::1;1178:4;1162:20;::::0;;1077:116:::1;1226:13;::::0;1207:33:::1;::::0;1226:13:::1;::::0;;::::1;565:14:14::0;558:22;540:41;;1207:33:13::1;::::0;528:2:14;513:18;1207:33:13::1;;;;;;;-1:-1:-1::0;1257:13:13::1;::::0;::::1;;1003:274:::0;:::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;13624:2:14;1998:73:0::1;::::0;::::1;13606:21:14::0;13663:2;13643:18;;;13636:30;13702:34;13682:18;;;13675:62;-1:-1:-1;;;13753:18:14;;;13746:36;13799:19;;1998:73:0::1;13422:402:14::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;1921:344:7:-:0;2063:4;-1:-1:-1;;;;;;2102:40:7;;-1:-1:-1;;;2102:40:7;;:104;;-1:-1:-1;;;;;;;2158:48:7;;-1:-1:-1;;;2158:48:7;2102:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:5;;;2222:36:7;829:155:5;12087:171:7;12161:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12161:29:7;-1:-1:-1;;;;;12161:29:7;;;;;;;;:24;;12214:23;12161:24;12214:14;:23::i;:::-;-1:-1:-1;;;;;12205:46:7;;;;;;;;;;;12087:171;;:::o;4752:162:13:-;4843:6;;4835:45;;4816:13;;-1:-1:-1;;;;;4843:6:13;;4863:12;;4816:13;4835:45;4816:13;4835:45;4863:12;4843:6;4835:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4815:65;;;4898:8;4890:17;;;;;9159:108:7;9234:26;9244:2;9248:7;9234:26;;;;;;;;;;;;:9;:26::i;8391:438::-;8516:4;8196:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8196:16:7;8536:107;;;;-1:-1:-1;;;8536:107:7;;14031:2:14;8536:107:7;;;14013:21:14;14070:2;14050:18;;;14043:30;14109:34;14089:18;;;14082:62;-1:-1:-1;;;14160:18:14;;;14153:42;14212:19;;8536:107:7;13829:408:14;8536:107:7;8653:13;8669:23;8684:7;8669:14;:23::i;:::-;8653:39;;8721:5;-1:-1:-1;;;;;8710:16:7;:7;-1:-1:-1;;;;;8710:16:7;;:63;;;;8766:7;-1:-1:-1;;;;;8742:31:7;:20;8754:7;8742:11;:20::i;:::-;-1:-1:-1;;;;;8742:31:7;;8710:63;:111;;;-1:-1:-1;;;;;;5445:25:7;;;5418:4;5445:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8789:32;8702:120;8391:438;-1:-1:-1;;;;8391:438:7:o;11382:594::-;11549:4;-1:-1:-1;;;;;11522:31:7;:23;11537:7;11522:14;:23::i;:::-;-1:-1:-1;;;;;11522:31:7;;11501:119;;;;-1:-1:-1;;;11501:119:7;;14444:2:14;11501:119:7;;;14426:21:14;14483:2;14463:18;;;14456:30;14522:34;14502:18;;;14495:62;-1:-1:-1;;;14573:18:14;;;14566:39;14622:19;;11501:119:7;14242:405:14;11501:119:7;-1:-1:-1;;;;;11638:16:7;;11630:65;;;;-1:-1:-1;;;11630:65:7;;14854:2:14;11630:65:7;;;14836:21:14;14893:2;14873:18;;;14866:30;14932:34;14912:18;;;14905:62;-1:-1:-1;;;14983:18:14;;;14976:34;15027:19;;11630:65:7;14652:400:14;11630:65:7;11706:39;11727:4;11733:2;11737:7;11706:20;:39::i;:::-;11807:29;11824:1;11828:7;11807:8;:29::i;:::-;-1:-1:-1;;;;;11847:15:7;;;;;;:9;:15;;;;;:20;;11866:1;;11847:15;:20;;11866:1;;11847:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11877:13:7;;;;;;:9;:13;;;;;:18;;11894:1;;11877:13;:18;;11894:1;;11877:18;:::i;:::-;;;;-1:-1:-1;;11905:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11905:21:7;-1:-1:-1;;;;;11905:21:7;;;;;;;;;11942:27;;11905:16;;11942:27;;;;;;;11382:594;;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;12393:307:7:-;12543:8;-1:-1:-1;;;;;12534:17:7;:5;-1:-1:-1;;;;;12534:17:7;;;12526:55;;;;-1:-1:-1;;;12526:55:7;;15259:2:14;12526:55:7;;;15241:21:14;15298:2;15278:18;;;15271:30;15337:27;15317:18;;;15310:55;15382:18;;12526:55:7;15057:349:14;12526:55:7;-1:-1:-1;;;;;12591:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12591:46:7;;;;;;;;;;12652:41;;540::14;;;12652::7;;513:18:14;12652:41:7;;;;;;;12393:307;;;:::o;7464:341::-;7615:28;7625:4;7631:2;7635:7;7615:9;:28::i;:::-;7674:48;7697:4;7703:2;7707:7;7716:5;7674:22;:48::i;:::-;7653:145;;;;-1:-1:-1;;;7653:145:7;;;;;;;:::i;4640:106:13:-;4700:13;4732:7;4725:14;;;;;:::i;328:703:4:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:4;;;;;;;;;;;;-1:-1:-1;;;627:10:4;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:4;;-1:-1:-1;773:2:4;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:4;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:4;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:4;;;;;;;;-1:-1:-1;972:11:4;981:2;972:11;;:::i;:::-;;;844:150;;9488:311:7;9613:18;9619:2;9623:7;9613:5;:18::i;:::-;9662:54;9693:1;9697:2;9701:7;9710:5;9662:22;:54::i;:::-;9641:151;;;;-1:-1:-1;;;9641:151:7;;;;;;;:::i;2847:572:8:-;-1:-1:-1;;;;;3046:18:8;;3042:183;;3080:40;3112:7;4228:10;:17;;4201:24;;;;:15;:24;;;;;:44;;;4255:24;;;;;;;;;;;;4125:161;3080:40;3042:183;;;3149:2;-1:-1:-1;;;;;3141:10:8;:4;-1:-1:-1;;;;;3141:10:8;;3137:88;;3167:47;3200:4;3206:7;3167:32;:47::i;:::-;-1:-1:-1;;;;;3238:16:8;;3234:179;;3270:45;3307:7;3270:36;:45::i;3234:179::-;3342:4;-1:-1:-1;;;;;3336:10:8;:2;-1:-1:-1;;;;;3336:10:8;;3332:81;;3362:40;3390:2;3394:7;3362:27;:40::i;13253:950:7:-;13403:4;-1:-1:-1;;;;;13423:13:7;;1087:20:2;1133:8;13419:778:7;;13474:170;;-1:-1:-1;;;13474:170:7;;-1:-1:-1;;;;;13474:36:7;;;;;:170;;719:10:3;;13566:4:7;;13592:7;;13621:5;;13474:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13474:170:7;;;;;;;;-1:-1:-1;;13474:170:7;;;;;;;;;;;;:::i;:::-;;;13454:691;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13823:13:7;;13819:312;;13865:106;;-1:-1:-1;;;13865:106:7;;;;;;;:::i;13819:312::-;14083:6;14077:13;14068:6;14064:2;14060:15;14053:38;13454:691;-1:-1:-1;;;;;;13706:51:7;-1:-1:-1;;;13706:51:7;;-1:-1:-1;13699:58:7;;13419:778;-1:-1:-1;14182:4:7;13253:950;;;;;;:::o;10121:372::-;-1:-1:-1;;;;;10200:16:7;;10192:61;;;;-1:-1:-1;;;10192:61:7;;17037:2:14;10192:61:7;;;17019:21:14;;;17056:18;;;17049:30;17115:34;17095:18;;;17088:62;17167:18;;10192:61:7;16835:356:14;10192:61:7;8173:4;8196:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8196:16:7;:30;10263:58;;;;-1:-1:-1;;;10263:58:7;;17398:2:14;10263:58:7;;;17380:21:14;17437:2;17417:18;;;17410:30;17476;17456:18;;;17449:58;17524:18;;10263:58:7;17196:352:14;10263:58:7;10332:45;10361:1;10365:2;10369:7;10332:20;:45::i;:::-;-1:-1:-1;;;;;10388:13:7;;;;;;:9;:13;;;;;:18;;10405:1;;10388:13;:18;;10405:1;;10388:18;:::i;:::-;;;;-1:-1:-1;;10416:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10416:21:7;-1:-1:-1;;;;;10416:21:7;;;;;;;;10453:33;;10416:16;;;10453:33;;10416:16;;10453:33;10121:372;;:::o;4903:982:8:-;5177:22;5227:1;5202:22;5219:4;5202:16;:22::i;:::-;:26;;;;:::i;:::-;5238:18;5259:26;;;:17;:26;;;;;;5177:51;;-1:-1:-1;5389:28:8;;;5385:323;;-1:-1:-1;;;;;5455:18:8;;5433:19;5455:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5504:30;;;;;;:44;;;5620:30;;:17;:30;;;;;:43;;;5385:323;-1:-1:-1;5801:26:8;;;;:17;:26;;;;;;;;5794:33;;;-1:-1:-1;;;;;5844:18:8;;;;;:12;:18;;;;;:34;;;;;;;5837:41;4903:982::o;6173:1061::-;6447:10;:17;6422:22;;6447:21;;6467:1;;6447:21;:::i;:::-;6478:18;6499:24;;;:15;:24;;;;;;6867:10;:26;;6422:46;;-1:-1:-1;6499:24:8;;6422:46;;6867:26;;;;;;:::i;:::-;;;;;;;;;6845:48;;6929:11;6904:10;6915;6904:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;7008:28;;;:15;:28;;;;;;;:41;;;7177:24;;;;;7170:31;7211:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6244:990;;;6173:1061;:::o;3713:217::-;3797:14;3814:20;3831:2;3814:16;:20::i;:::-;-1:-1:-1;;;;;3844:16:8;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3888:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3713:217:8:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:14;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:14;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:14;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:14:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:14;;1343:180;-1:-1:-1;1343:180:14:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:14;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:14:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:127::-;2749:10;2744:3;2740:20;2737:1;2730:31;2780:4;2777:1;2770:15;2804:4;2801:1;2794:15;2820:632;2885:5;2915:18;2956:2;2948:6;2945:14;2942:40;;;2962:18;;:::i;:::-;3037:2;3031:9;3005:2;3091:15;;-1:-1:-1;;3087:24:14;;;3113:2;3083:33;3079:42;3067:55;;;3137:18;;;3157:22;;;3134:46;3131:72;;;3183:18;;:::i;:::-;3223:10;3219:2;3212:22;3252:6;3243:15;;3282:6;3274;3267:22;3322:3;3313:6;3308:3;3304:16;3301:25;3298:45;;;3339:1;3336;3329:12;3298:45;3389:6;3384:3;3377:4;3369:6;3365:17;3352:44;3444:1;3437:4;3428:6;3420;3416:19;3412:30;3405:41;;;;2820:632;;;;;:::o;3457:451::-;3526:6;3579:2;3567:9;3558:7;3554:23;3550:32;3547:52;;;3595:1;3592;3585:12;3547:52;3635:9;3622:23;3668:18;3660:6;3657:30;3654:50;;;3700:1;3697;3690:12;3654:50;3723:22;;3776:4;3768:13;;3764:27;-1:-1:-1;3754:55:14;;3805:1;3802;3795:12;3754:55;3828:74;3894:7;3889:2;3876:16;3871:2;3867;3863:11;3828:74;:::i;3913:186::-;3972:6;4025:2;4013:9;4004:7;4000:23;3996:32;3993:52;;;4041:1;4038;4031:12;3993:52;4064:29;4083:9;4064:29;:::i;4104:347::-;4169:6;4177;4230:2;4218:9;4209:7;4205:23;4201:32;4198:52;;;4246:1;4243;4236:12;4198:52;4269:29;4288:9;4269:29;:::i;:::-;4259:39;;4348:2;4337:9;4333:18;4320:32;4395:5;4388:13;4381:21;4374:5;4371:32;4361:60;;4417:1;4414;4407:12;4361:60;4440:5;4430:15;;;4104:347;;;;;:::o;4456:667::-;4551:6;4559;4567;4575;4628:3;4616:9;4607:7;4603:23;4599:33;4596:53;;;4645:1;4642;4635:12;4596:53;4668:29;4687:9;4668:29;:::i;:::-;4658:39;;4716:38;4750:2;4739:9;4735:18;4716:38;:::i;:::-;4706:48;;4801:2;4790:9;4786:18;4773:32;4763:42;;4856:2;4845:9;4841:18;4828:32;4883:18;4875:6;4872:30;4869:50;;;4915:1;4912;4905:12;4869:50;4938:22;;4991:4;4983:13;;4979:27;-1:-1:-1;4969:55:14;;5020:1;5017;5010:12;4969:55;5043:74;5109:7;5104:2;5091:16;5086:2;5082;5078:11;5043:74;:::i;:::-;5033:84;;;4456:667;;;;;;;:::o;5128:260::-;5196:6;5204;5257:2;5245:9;5236:7;5232:23;5228:32;5225:52;;;5273:1;5270;5263:12;5225:52;5296:29;5315:9;5296:29;:::i;:::-;5286:39;;5344:38;5378:2;5367:9;5363:18;5344:38;:::i;:::-;5334:48;;5128:260;;;;;:::o;5393:380::-;5472:1;5468:12;;;;5515;;;5536:61;;5590:4;5582:6;5578:17;5568:27;;5536:61;5643:2;5635:6;5632:14;5612:18;5609:38;5606:161;;;5689:10;5684:3;5680:20;5677:1;5670:31;5724:4;5721:1;5714:15;5752:4;5749:1;5742:15;5606:161;;5393:380;;;:::o;7018:127::-;7079:10;7074:3;7070:20;7067:1;7060:31;7110:4;7107:1;7100:15;7134:4;7131:1;7124:15;7150:168;7190:7;7256:1;7252;7248:6;7244:14;7241:1;7238:21;7233:1;7226:9;7219:17;7215:45;7212:71;;;7263:18;;:::i;:::-;-1:-1:-1;7303:9:14;;7150:168::o;7323:127::-;7384:10;7379:3;7375:20;7372:1;7365:31;7415:4;7412:1;7405:15;7439:4;7436:1;7429:15;7455:120;7495:1;7521;7511:35;;7526:18;;:::i;:::-;-1:-1:-1;7560:9:14;;7455:120::o;7580:125::-;7620:4;7648:1;7645;7642:8;7639:34;;;7653:18;;:::i;:::-;-1:-1:-1;7690:9:14;;7580:125::o;7920:128::-;7960:3;7991:1;7987:6;7984:1;7981:13;7978:39;;;7997:18;;:::i;:::-;-1:-1:-1;8033:9:14;;7920:128::o;8053:353::-;8255:2;8237:21;;;8294:2;8274:18;;;8267:30;8333:31;8328:2;8313:18;;8306:59;8397:2;8382:18;;8053:353::o;8411:413::-;8613:2;8595:21;;;8652:2;8632:18;;;8625:30;8691:34;8686:2;8671:18;;8664:62;-1:-1:-1;;;8757:2:14;8742:18;;8735:47;8814:3;8799:19;;8411:413::o;10034:127::-;10095:10;10090:3;10086:20;10083:1;10076:31;10126:4;10123:1;10116:15;10150:4;10147:1;10140:15;10166:356;10368:2;10350:21;;;10387:18;;;10380:30;10446:34;10441:2;10426:18;;10419:62;10513:2;10498:18;;10166:356::o;11890:1527::-;12114:3;12152:6;12146:13;12178:4;12191:51;12235:6;12230:3;12225:2;12217:6;12213:15;12191:51;:::i;:::-;12305:13;;12264:16;;;;12327:55;12305:13;12264:16;12349:15;;;12327:55;:::i;:::-;12471:13;;12404:20;;;12444:1;;12531;12553:18;;;;12606;;;;12633:93;;12711:4;12701:8;12697:19;12685:31;;12633:93;12774:2;12764:8;12761:16;12741:18;12738:40;12735:167;;;-1:-1:-1;;;12801:33:14;;12857:4;12854:1;12847:15;12887:4;12808:3;12875:17;12735:167;12918:18;12945:110;;;;13069:1;13064:328;;;;12911:481;;12945:110;-1:-1:-1;;12980:24:14;;12966:39;;13025:20;;;;-1:-1:-1;12945:110:14;;13064:328;11837:1;11830:14;;;11874:4;11861:18;;13159:1;13173:169;13187:8;13184:1;13181:15;13173:169;;;13269:14;;13254:13;;;13247:37;13312:16;;;;13204:10;;13173:169;;;13177:3;;13373:8;13366:5;13362:20;13355:27;;12911:481;-1:-1:-1;13408:3:14;;11890:1527;-1:-1:-1;;;;;;;;;;;11890:1527:14:o;15411:414::-;15613:2;15595:21;;;15652:2;15632:18;;;15625:30;15691:34;15686:2;15671:18;;15664:62;-1:-1:-1;;;15757:2:14;15742:18;;15735:48;15815:3;15800:19;;15411:414::o;15830:135::-;15869:3;-1:-1:-1;;15890:17:14;;15887:43;;;15910:18;;:::i;:::-;-1:-1:-1;15957:1:14;15946:13;;15830:135::o;15970:112::-;16002:1;16028;16018:35;;16033:18;;:::i;:::-;-1:-1:-1;16067:9:14;;15970:112::o;16087:489::-;-1:-1:-1;;;;;16356:15:14;;;16338:34;;16408:15;;16403:2;16388:18;;16381:43;16455:2;16440:18;;16433:34;;;16503:3;16498:2;16483:18;;16476:31;;;16281:4;;16524:46;;16550:19;;16542:6;16524:46;:::i;:::-;16516:54;16087:489;-1:-1:-1;;;;;;16087:489:14:o;16581:249::-;16650:6;16703:2;16691:9;16682:7;16678:23;16674:32;16671:52;;;16719:1;16716;16709:12;16671:52;16751:9;16745:16;16770:30;16794:5;16770:30;:::i;17553:127::-;17614:10;17609:3;17605:20;17602:1;17595:31;17645:4;17642:1;17635:15;17669:4;17666:1;17659:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    176,
    5300
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xD6BFC22F EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92FF0D31 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x92FF0D31 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x9395B728 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x98F24682 EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x43BC1612 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x43BC1612 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x326BB4AD EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x13FAEDE6 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x229 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH2 0x7C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x249 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0xC36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0xD75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH1 0xFF AND PUSH2 0x1F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0xDAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F94 JUMP JUMPDEST PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD0 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0xF31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0xFBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x109D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x204C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x551 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x57B JUMPI POP PUSH2 0x57B DUP3 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x590 SWAP1 PUSH2 0x207F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BC SWAP1 PUSH2 0x207F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x609 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x609 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B8 DUP3 PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x742 JUMPI POP PUSH2 0x742 DUP2 CALLER PUSH2 0x508 JUMP JUMPDEST PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x7BE DUP4 DUP4 PUSH2 0x1220 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP2 GT ISZERO PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A0 JUMPI PUSH1 0xB SLOAD CALLVALUE LT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x10 SLOAD CALLVALUE PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x2105 JUMP JUMPDEST SWAP1 POP PUSH2 0x827 DUP2 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83B PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84E DUP4 CALLVALUE PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x88F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x8B4 CALLER PUSH2 0x8AF DUP4 PUSH1 0x1 PUSH2 0x2130 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x8E8 CALLER DUP3 PUSH2 0x1308 JUMP JUMPDEST PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x217F JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 PUSH1 0x64 PUSH1 0x10 SLOAD CALLVALUE PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x2105 JUMP JUMPDEST SWAP1 POP PUSH2 0x931 DUP2 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x947 DUP4 CALLVALUE PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x988 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE CALLVALUE DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x3F3483D0995DB4C081E0101EF6753BEF457833C20605CD871DE61DCB48085A9A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMPDEST PUSH2 0x7BE DUP4 DUP4 DUP4 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F8 DUP4 PUSH2 0xCEE JUMP JUMPDEST DUP3 LT PUSH2 0xA5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x2148 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xB88 JUMPI PUSH1 0x0 PUSH1 0x64 PUSH1 0x10 SLOAD CALLVALUE PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0xACC SWAP2 SWAP1 PUSH2 0x2105 JUMP JUMPDEST SWAP1 POP PUSH2 0xAD7 DUP2 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xAED DUP4 CALLVALUE PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB29 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE CALLVALUE DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x3F3483D0995DB4C081E0101EF6753BEF457833C20605CD871DE61DCB48085A9A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMPDEST PUSH2 0x7BE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC24 JUMPI PUSH2 0xC24 PUSH2 0x21D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC73 SWAP1 PUSH1 0xD SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x57B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH2 0xDA9 PUSH1 0x0 PUSH2 0x15AA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x590 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH2 0xC73 CALLER DUP4 DUP4 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xE25 CALLER DUP4 PUSH2 0x1308 JUMP JUMPDEST PUSH2 0xE41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x217F JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xF1F JUMPI PUSH1 0x0 PUSH1 0x64 PUSH1 0x10 SLOAD CALLVALUE PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x2105 JUMP JUMPDEST SWAP1 POP PUSH2 0xE6E DUP2 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xE84 DUP4 CALLVALUE PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEC0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE CALLVALUE DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x3F3483D0995DB4C081E0101EF6753BEF457833C20605CD871DE61DCB48085A9A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMPDEST PUSH2 0xF2B DUP5 DUP5 DUP5 DUP5 PUSH2 0x16CB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xF3E SWAP1 PUSH2 0x207F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF6A SWAP1 PUSH2 0x207F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1048 PUSH2 0x16FE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1096 JUMP JUMPDEST DUP1 PUSH2 0x1072 DUP5 PUSH2 0x170D JUMP JUMPDEST PUSH1 0xE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1086 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE PUSH32 0x40CEC7445E6AF82A2C1482720F9CDE27EF6CC85136E8B7ABD3EFD8C6A0EE566F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x11 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x8B4 DUP2 PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1201 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x57B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x57B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1255 DUP3 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC73 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x180B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1381 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138C DUP4 PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x13C7 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13BC DUP5 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x13F7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1412 DUP3 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x14E7 DUP4 DUP4 DUP4 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x14F2 PUSH1 0x0 DUP3 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x151B SWAP1 DUP5 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1549 SWAP1 DUP5 SWAP1 PUSH2 0x2130 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x165E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x16D6 DUP5 DUP5 DUP5 PUSH2 0x13FF JUMP JUMPDEST PUSH2 0x16E2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD PUSH2 0x590 SWAP1 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1731 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x175B JUMPI DUP1 PUSH2 0x1745 DUP2 PUSH2 0x2331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1754 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2105 JUMP JUMPDEST SWAP2 POP PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1776 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17A0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x13F7 JUMPI PUSH2 0x17B5 PUSH1 0x1 DUP4 PUSH2 0x2119 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C2 PUSH1 0xA DUP7 PUSH2 0x234C JUMP JUMPDEST PUSH2 0x17CD SWAP1 PUSH1 0x30 PUSH2 0x2130 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17E2 JUMPI PUSH2 0x17E2 PUSH2 0x21D0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1804 PUSH1 0xA DUP7 PUSH2 0x2105 JUMP JUMPDEST SWAP5 POP PUSH2 0x17A4 JUMP JUMPDEST PUSH2 0x1815 DUP4 DUP4 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x1822 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x18F6 JUMP JUMPDEST PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1899 JUMPI PUSH2 0x1894 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x18BC JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x18BC JUMPI PUSH2 0x18BC DUP4 DUP3 PUSH2 0x1B42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18D3 JUMPI PUSH2 0x7BE DUP2 PUSH2 0x1BDF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7BE JUMPI PUSH2 0x7BE DUP3 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x19E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x193A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2360 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1975 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1972 SWAP2 DUP2 ADD SWAP1 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19CF JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x19A3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x19C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP1 PUSH2 0x22DF JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x13F7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1AAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x1ABB PUSH1 0x0 DUP4 DUP4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1AE4 SWAP1 DUP5 SWAP1 PUSH2 0x2130 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1B4F DUP5 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1BAC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1BF1 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1C19 JUMPI PUSH2 0x1C19 PUSH2 0x21D0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1C3A JUMPI PUSH2 0x1C3A PUSH2 0x21D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1C72 JUMPI PUSH2 0x1C72 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C99 DUP4 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1CDE SWAP1 PUSH2 0x207F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1D00 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D46 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1D19 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D46 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D46 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D46 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D2B JUMP JUMPDEST POP PUSH2 0x1D52 SWAP3 SWAP2 POP PUSH2 0x1D56 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D52 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1096 DUP2 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DB9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DA1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF2B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1DE2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D9E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1096 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E5A DUP4 PUSH2 0x1E22 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E86 DUP5 PUSH2 0x1E22 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E94 PUSH1 0x20 DUP6 ADD PUSH2 0x1E22 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED5 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1EFD JUMPI PUSH2 0x1EFD PUSH2 0x1EA4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1F16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1F6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F7 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1096 DUP3 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FB0 DUP4 PUSH2 0x1E22 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1FC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FEF DUP6 PUSH2 0x1E22 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FFD PUSH1 0x20 DUP7 ADD PUSH2 0x1E22 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2031 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2040 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1EBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x205F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2068 DUP4 PUSH2 0x1E22 JUMP JUMPDEST SWAP2 POP PUSH2 0x2076 PUSH1 0x20 DUP5 ADD PUSH2 0x1E22 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2093 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20EA JUMPI PUSH2 0x20EA PUSH2 0x20BA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2114 JUMPI PUSH2 0x2114 PUSH2 0x20EF JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x212B JUMPI PUSH2 0x212B PUSH2 0x20BA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2143 JUMPI PUSH2 0x2143 PUSH2 0x20BA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4D656D62657273686970733A206E6F74207472616E7366657261626C65000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x222E DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x1D9E JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x2241 DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x1D9E JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x225E JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST DUP6 DUP4 LT DUP2 EQ ISZERO PUSH2 0x227C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x2290 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x22A1 JUMPI PUSH2 0x22CE JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 MSTORE DUP4 DUP9 ADD SWAP6 POP PUSH2 0x22CE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x22C6 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP9 ADD PUSH2 0x22AD JUMP JUMPDEST POP POP DUP4 DUP9 ADD SWAP6 POP JUMPDEST POP SWAP4 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2345 JUMPI PUSH2 0x2345 PUSH2 0x20BA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x235B JUMPI PUSH2 0x235B PUSH2 0x20EF JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2393 SWAP1 DUP4 ADD DUP5 PUSH2 0x1DCA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1096 DUP2 PUSH2 0x1D6B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 PUSH26 0x3E0CBA937393A587A1119237F196BA70D2ED8BE8E599DE11E4CD 0x27 0x2C 0xE6 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "LT",
      "path": "13"
    },
    "9": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1CD"
    },
    "12": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "13": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "SHR",
      "path": "13"
    },
    "19": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "20": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70A08231"
    },
    "25": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "GT",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF7"
    },
    "29": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "30": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "31": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA22CB465"
    },
    "36": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "GT",
      "path": "13"
    },
    "37": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x95"
    },
    "40": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "41": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "42": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD5ABEB01"
    },
    "47": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "GT",
      "path": "13"
    },
    "48": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "52": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "53": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD5ABEB01"
    },
    "58": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "59": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4C2"
    },
    "62": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "63": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "64": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD6BFC22F"
    },
    "69": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "70": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D8"
    },
    "73": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "74": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "75": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE985E9C5"
    },
    "80": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "81": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4ED"
    },
    "84": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "85": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "86": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "92": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x536"
    },
    "95": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "96": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "REVERT",
      "path": "13"
    },
    "100": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "101": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "102": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA22CB465"
    },
    "107": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "108": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x45A"
    },
    "111": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "112": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "113": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB88D4FDE"
    },
    "118": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "119": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x47A"
    },
    "122": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "123": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "124": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC6682862"
    },
    "129": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "130": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x48D"
    },
    "133": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "134": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "135": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xC87B56DD"
    },
    "140": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "141": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4A2"
    },
    "144": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "145": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "REVERT",
      "path": "13"
    },
    "149": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "150": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "151": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x92FF0D31"
    },
    "156": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "GT",
      "path": "13"
    },
    "157": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "161": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "162": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x92FF0D31"
    },
    "167": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "168": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3F3"
    },
    "171": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "172": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "173": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x9395B728"
    },
    "178": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "179": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x40B"
    },
    "182": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "183": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "184": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x95D89B41"
    },
    "189": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "190": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x425"
    },
    "193": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "194": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "195": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x98F24682"
    },
    "200": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "201": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x43A"
    },
    "204": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "205": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "208": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "REVERT",
      "path": "13"
    },
    "209": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "210": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "211": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x70A08231"
    },
    "216": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "217": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3A0"
    },
    "220": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "221": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "222": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "227": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "228": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3C0"
    },
    "231": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "232": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "233": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "238": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "239": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3D5"
    },
    "242": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "243": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "245": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "246": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "REVERT",
      "path": "13"
    },
    "247": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "248": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "249": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "254": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "GT",
      "path": "13"
    },
    "255": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16F"
    },
    "258": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "259": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "260": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x43BC1612"
    },
    "265": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "GT",
      "path": "13"
    },
    "266": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13E"
    },
    "269": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "270": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "271": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x43BC1612"
    },
    "276": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "277": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x320"
    },
    "280": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "281": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "282": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4F6CCCE7"
    },
    "287": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "288": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x340"
    },
    "291": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "292": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "293": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x55F804B3"
    },
    "298": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "299": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x360"
    },
    "302": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "303": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "304": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6352211E"
    },
    "309": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "310": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x380"
    },
    "313": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "314": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "316": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "317": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "REVERT",
      "path": "13"
    },
    "318": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "319": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "320": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x23B872DD"
    },
    "325": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "326": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2C4"
    },
    "329": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "330": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "331": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2F745C59"
    },
    "336": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "337": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D7"
    },
    "340": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "341": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "342": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x326BB4AD"
    },
    "347": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "348": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2F7"
    },
    "351": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "352": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "353": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x42842E0E"
    },
    "358": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "359": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x30D"
    },
    "362": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "363": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "365": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "366": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "REVERT",
      "path": "13"
    },
    "367": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "368": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "369": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x95EA7B3"
    },
    "374": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "GT",
      "path": "13"
    },
    "375": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1AB"
    },
    "378": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "379": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "380": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x95EA7B3"
    },
    "385": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "386": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x261"
    },
    "389": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "390": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "391": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x1249C58B"
    },
    "396": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "397": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x283"
    },
    "400": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "401": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "402": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x13FAEDE6"
    },
    "407": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "408": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28B"
    },
    "411": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "412": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "413": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x18160DDD"
    },
    "418": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "419": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2AF"
    },
    "422": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "423": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "425": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "426": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "REVERT",
      "path": "13"
    },
    "427": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "428": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "429": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x1FFC9A7"
    },
    "434": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "435": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D2"
    },
    "438": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "439": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "440": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x6FDDE03"
    },
    "445": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "446": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x207"
    },
    "449": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "450": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "451": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x81812FC"
    },
    "456": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "EQ",
      "path": "13"
    },
    "457": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x229"
    },
    "460": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "461": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "462": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "464": {
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "DUP1",
      "path": "13"
    },
    "465": {
      "first_revert": true,
      "fn": null,
      "offset": [
        176,
        5300
      ],
      "op": "REVERT",
      "path": "13"
    },
    "466": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "467": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "468": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "DUP1",
      "path": "8"
    },
    "469": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "470": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DE"
    },
    "473": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "474": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "476": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "DUP1",
      "path": "8"
    },
    "477": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "REVERT",
      "path": "8"
    },
    "478": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F2"
    },
    "483": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ED"
    },
    "486": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "487": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "489": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D81"
    },
    "492": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        989,
        1279
      ],
      "op": "JUMP",
      "path": "8"
    },
    "493": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "494": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x556"
    },
    "497": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        989,
        1279
      ],
      "op": "JUMP",
      "path": "8"
    },
    "498": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "499": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "501": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "502": {
      "op": "SWAP1"
    },
    "503": {
      "op": "ISZERO"
    },
    "504": {
      "op": "ISZERO"
    },
    "505": {
      "op": "DUP2"
    },
    "506": {
      "op": "MSTORE"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "509": {
      "op": "ADD"
    },
    "510": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "511": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "513": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "514": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "DUP1",
      "path": "8"
    },
    "515": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "516": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "SUB",
      "path": "8"
    },
    "517": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "518": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "RETURN",
      "path": "8"
    },
    "519": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "520": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "521": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "DUP1",
      "path": "7"
    },
    "522": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "523": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x213"
    },
    "526": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "527": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "529": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "DUP1",
      "path": "7"
    },
    "530": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "REVERT",
      "path": "7"
    },
    "531": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "532": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "POP",
      "path": "7"
    },
    "533": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C"
    },
    "536": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x581"
    },
    "539": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMP",
      "path": "7"
    },
    "540": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "541": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "543": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "544": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FE"
    },
    "547": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "548": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "549": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DF6"
    },
    "552": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMP",
      "path": "7"
    },
    "553": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "554": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "555": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "DUP1",
      "path": "7"
    },
    "556": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "557": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x235"
    },
    "560": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "561": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "563": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "DUP1",
      "path": "7"
    },
    "564": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "REVERT",
      "path": "7"
    },
    "565": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x249"
    },
    "570": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x244"
    },
    "573": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "574": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "576": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E09"
    },
    "579": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMP",
      "path": "7"
    },
    "580": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "581": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x613"
    },
    "584": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMP",
      "path": "7"
    },
    "585": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "586": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "588": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "op": "SWAP1"
    },
    "598": {
      "op": "SWAP2"
    },
    "599": {
      "op": "AND"
    },
    "600": {
      "op": "DUP2"
    },
    "601": {
      "op": "MSTORE"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "604": {
      "op": "ADD"
    },
    "605": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FE"
    },
    "608": {
      "op": "JUMP"
    },
    "609": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "610": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "611": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "DUP1",
      "path": "7"
    },
    "612": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "613": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26D"
    },
    "616": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "617": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "619": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "DUP1",
      "path": "7"
    },
    "620": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "REVERT",
      "path": "7"
    },
    "621": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x281"
    },
    "626": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27C"
    },
    "629": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "630": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "632": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E3E"
    },
    "635": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "636": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "637": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6AD"
    },
    "640": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "641": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "642": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "STOP",
      "path": "7"
    },
    "643": {
      "fn": "NFT.mint",
      "offset": [
        1402,
        1981
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "644": {
      "fn": "NFT.mint",
      "offset": [
        1402,
        1981
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x281"
    },
    "647": {
      "fn": "NFT.mint",
      "offset": [
        1402,
        1981
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7C3"
    },
    "650": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        1402,
        1981
      ],
      "op": "JUMP",
      "path": "13"
    },
    "651": {
      "offset": [
        257,
        286
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "652": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "653": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "654": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "655": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x297"
    },
    "658": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "659": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "661": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "DUP1",
      "path": "13"
    },
    "662": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "REVERT",
      "path": "13"
    },
    "663": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "664": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "POP",
      "path": "13"
    },
    "665": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A1"
    },
    "668": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xB"
    },
    "670": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "671": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "DUP2",
      "path": "13"
    },
    "672": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "JUMP",
      "path": "13"
    },
    "673": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "674": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "676": {
      "fn": "NFT.mint",
      "offset": [
        257,
        286
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "677": {
      "op": "SWAP1"
    },
    "678": {
      "op": "DUP2"
    },
    "679": {
      "op": "MSTORE"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "682": {
      "op": "ADD"
    },
    "683": {
      "offset": [
        257,
        286
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FE"
    },
    "686": {
      "op": "JUMP"
    },
    "687": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "688": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "689": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "DUP1",
      "path": "8"
    },
    "690": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "691": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BB"
    },
    "694": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "695": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "697": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "DUP1",
      "path": "8"
    },
    "698": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "REVERT",
      "path": "8"
    },
    "699": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "700": {
      "op": "POP"
    },
    "701": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1847,
        1857
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 0,
      "value": "0x8"
    },
    "703": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1847,
        1864
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "704": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A1"
    },
    "707": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "JUMP",
      "path": "8"
    },
    "708": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "709": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x281"
    },
    "712": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D2"
    },
    "715": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "716": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "718": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E68"
    },
    "721": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        2645,
        3303
      ],
      "op": "JUMP",
      "path": "13"
    },
    "722": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "723": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8B7"
    },
    "726": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        2645,
        3303
      ],
      "op": "JUMP",
      "path": "13"
    },
    "727": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "728": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "729": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "DUP1",
      "path": "8"
    },
    "730": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "731": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E3"
    },
    "734": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "735": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "737": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "DUP1",
      "path": "8"
    },
    "738": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "REVERT",
      "path": "8"
    },
    "739": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "740": {
      "op": "POP"
    },
    "741": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A1"
    },
    "744": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F2"
    },
    "747": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "748": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "750": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E3E"
    },
    "753": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1358,
        1689
      ],
      "op": "JUMP",
      "path": "8"
    },
    "754": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "755": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9ED"
    },
    "758": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1358,
        1689
      ],
      "op": "JUMP",
      "path": "8"
    },
    "759": {
      "offset": [
        419,
        445
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "760": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "761": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "DUP1",
      "path": "13"
    },
    "762": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "763": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x303"
    },
    "766": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "767": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "769": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "DUP1",
      "path": "13"
    },
    "770": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "REVERT",
      "path": "13"
    },
    "771": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "772": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "POP",
      "path": "13"
    },
    "773": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A1"
    },
    "776": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "778": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "779": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "DUP2",
      "path": "13"
    },
    "780": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        419,
        445
      ],
      "op": "JUMP",
      "path": "13"
    },
    "781": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "782": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x281"
    },
    "785": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x31B"
    },
    "788": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "789": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "791": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E68"
    },
    "794": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3342,
        3867
      ],
      "op": "JUMP",
      "path": "13"
    },
    "795": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "796": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA83"
    },
    "799": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3342,
        3867
      ],
      "op": "JUMP",
      "path": "13"
    },
    "800": {
      "offset": [
        392,
        413
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "801": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "802": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "DUP1",
      "path": "13"
    },
    "803": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "804": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x32C"
    },
    "807": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "808": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "810": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "DUP1",
      "path": "13"
    },
    "811": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "REVERT",
      "path": "13"
    },
    "812": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "813": {
      "op": "POP"
    },
    "814": {
      "offset": [
        392,
        413
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xF"
    },
    "816": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "817": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x249"
    },
    "820": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "827": {
      "op": "SHL"
    },
    "828": {
      "op": "SUB"
    },
    "829": {
      "offset": [
        392,
        413
      ],
      "op": "AND",
      "path": "13"
    },
    "830": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "DUP2",
      "path": "13"
    },
    "831": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        392,
        413
      ],
      "op": "JUMP",
      "path": "13"
    },
    "832": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "833": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "834": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "DUP1",
      "path": "8"
    },
    "835": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "836": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x34C"
    },
    "839": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "840": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "842": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "DUP1",
      "path": "8"
    },
    "843": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "REVERT",
      "path": "8"
    },
    "844": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A1"
    },
    "849": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x35B"
    },
    "852": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "853": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "855": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E09"
    },
    "858": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1943,
        2251
      ],
      "op": "JUMP",
      "path": "8"
    },
    "859": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "860": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBA3"
    },
    "863": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1943,
        2251
      ],
      "op": "JUMP",
      "path": "8"
    },
    "864": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "865": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "866": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "DUP1",
      "path": "13"
    },
    "867": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "868": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x36C"
    },
    "871": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "872": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "874": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "DUP1",
      "path": "13"
    },
    "875": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "REVERT",
      "path": "13"
    },
    "876": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x281"
    },
    "881": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x37B"
    },
    "884": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "885": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "887": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F30"
    },
    "890": {
      "fn": "NFT.setBaseURI",
      "jump": "i",
      "offset": [
        4943,
        5045
      ],
      "op": "JUMP",
      "path": "13"
    },
    "891": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "892": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC36"
    },
    "895": {
      "fn": "NFT.setBaseURI",
      "jump": "i",
      "offset": [
        4943,
        5045
      ],
      "op": "JUMP",
      "path": "13"
    },
    "896": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "897": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "898": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "899": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "900": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38C"
    },
    "903": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "904": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "906": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "907": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "REVERT",
      "path": "7"
    },
    "908": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x249"
    },
    "913": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x39B"
    },
    "916": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "917": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "919": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E09"
    },
    "922": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMP",
      "path": "7"
    },
    "923": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "924": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC77"
    },
    "927": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMP",
      "path": "7"
    },
    "928": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "929": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "930": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "DUP1",
      "path": "7"
    },
    "931": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "932": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AC"
    },
    "935": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "936": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "938": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "DUP1",
      "path": "7"
    },
    "939": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "REVERT",
      "path": "7"
    },
    "940": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "941": {
      "op": "POP"
    },
    "942": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A1"
    },
    "945": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3BB"
    },
    "948": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "949": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "951": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F79"
    },
    "954": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMP",
      "path": "7"
    },
    "955": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "956": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCEE"
    },
    "959": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMP",
      "path": "7"
    },
    "960": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "961": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "962": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "963": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "964": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CC"
    },
    "967": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "968": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "970": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "971": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "972": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "973": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "974": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281"
    },
    "977": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD75"
    },
    "980": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "981": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "982": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "983": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "984": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "985": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E1"
    },
    "988": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "989": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "991": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "992": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "993": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0xA"
    },
    "997": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1004": {
      "op": "SHL"
    },
    "1005": {
      "op": "SUB"
    },
    "1006": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1007": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x249"
    },
    "1010": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1011": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1012": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1013": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1014": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1015": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3FF"
    },
    "1018": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1019": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1021": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1022": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1023": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 2,
      "value": "0x11"
    },
    "1027": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1028": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1030": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "AND",
      "path": "13"
    },
    "1031": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F2"
    },
    "1034": {
      "fn": "NFT.transferable",
      "offset": [
        1308,
        1396
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1035": {
      "offset": [
        453,
        478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1036": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1037": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1038": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1039": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x417"
    },
    "1042": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1043": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1045": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1046": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1047": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "offset": [
        453,
        478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x11"
    },
    "1051": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1052": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F2"
    },
    "1055": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1056": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "1058": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "AND",
      "path": "13"
    },
    "1059": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1060": {
      "fn": "NFT.transferable",
      "offset": [
        453,
        478
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1061": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1062": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1063": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1064": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1065": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x431"
    },
    "1068": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1069": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1071": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1072": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1073": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1074": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "POP",
      "path": "7"
    },
    "1075": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C"
    },
    "1078": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDAB"
    },
    "1081": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1082": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1083": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1084": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1085": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1086": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x446"
    },
    "1089": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1090": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1092": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1093": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1094": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x281"
    },
    "1099": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x455"
    },
    "1102": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1103": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1105": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E09"
    },
    "1108": {
      "fn": "NFT.setRoyalityFee",
      "jump": "i",
      "offset": [
        5051,
        5157
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1109": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1110": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDBA"
    },
    "1113": {
      "fn": "NFT.setRoyalityFee",
      "jump": "i",
      "offset": [
        5051,
        5157
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1114": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1115": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1116": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1117": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1118": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x466"
    },
    "1121": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1122": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1124": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1125": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1126": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x281"
    },
    "1131": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x475"
    },
    "1134": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1135": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1137": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F94"
    },
    "1140": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1141": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1142": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDE9"
    },
    "1145": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1146": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1147": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x281"
    },
    "1150": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x488"
    },
    "1153": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1154": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1156": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FD0"
    },
    "1159": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3906,
        4608
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1160": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1161": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDF4"
    },
    "1164": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3906,
        4608
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1165": {
      "offset": [
        348,
        385
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1166": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1167": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1168": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1169": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x499"
    },
    "1172": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1173": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1175": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1176": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1177": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1178": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "POP",
      "path": "13"
    },
    "1179": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21C"
    },
    "1182": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF31"
    },
    "1185": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        348,
        385
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1186": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1187": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1188": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1189": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1190": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4AE"
    },
    "1193": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1194": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1196": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1197": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1198": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21C"
    },
    "1203": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4BD"
    },
    "1206": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1207": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1209": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1E09"
    },
    "1212": {
      "fn": "NFT.tokenURI",
      "jump": "i",
      "offset": [
        1987,
        2606
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1213": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1214": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFBF"
    },
    "1217": {
      "fn": "NFT.tokenURI",
      "jump": "i",
      "offset": [
        1987,
        2606
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1218": {
      "offset": [
        292,
        321
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1219": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1220": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1221": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1222": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4CE"
    },
    "1225": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1226": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1228": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1229": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1230": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1231": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "POP",
      "path": "13"
    },
    "1232": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2A1"
    },
    "1235": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xC"
    },
    "1237": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1238": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1239": {
      "fn": "NFT.tokenURI",
      "offset": [
        292,
        321
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1240": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1241": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1242": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1243": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1244": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4E4"
    },
    "1247": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1248": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1250": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1251": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1252": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1253": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "POP",
      "path": "13"
    },
    "1254": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F2"
    },
    "1257": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x109D"
    },
    "1260": {
      "fn": "NFT.toggleTransferable",
      "jump": "i",
      "offset": [
        1003,
        1277
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1261": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1262": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1263": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1264": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1265": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F9"
    },
    "1268": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1269": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1271": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1272": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1273": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F2"
    },
    "1278": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x508"
    },
    "1281": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1282": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1284": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x204C"
    },
    "1287": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1288": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1295": {
      "op": "SHL"
    },
    "1296": {
      "op": "SUB"
    },
    "1297": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 3
    },
    "1298": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1299": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "AND",
      "path": "7"
    },
    "1300": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5418,
        5422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1302": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1303": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1304": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1305": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5463
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1307": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1309": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1310": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1311": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1312": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1314": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1315": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1316": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1317": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1318": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1319": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1320": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "AND",
      "path": "7"
    },
    "1321": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1322": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1323": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1324": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1325": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1326": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1327": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1328": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1329": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1331": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "AND",
      "path": "7"
    },
    "1332": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1333": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1337": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1338": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x542"
    },
    "1341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1342": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1344": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1345": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281"
    },
    "1351": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x551"
    },
    "1354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1357": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F79"
    },
    "1360": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1361": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1138"
    },
    "1365": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1366": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1367": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1131,
        1135
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "op": "NOT"
    },
    "1378": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1170,
        1220
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 4
    },
    "1379": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1170,
        1220
      ],
      "op": "AND",
      "path": "8"
    },
    "1380": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1170,
        1220
      ],
      "op": "EQ",
      "path": "8"
    },
    "1389": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1170,
        1220
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1390": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1170,
        1272
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x57B"
    },
    "1393": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1170,
        1272
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1394": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1170,
        1272
      ],
      "op": "POP",
      "path": "8"
    },
    "1395": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1236,
        1272
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x57B"
    },
    "1398": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1260,
        1271
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1399": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1236,
        1259
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11D0"
    },
    "1402": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1236,
        1272
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1403": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1236,
        1272
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1404": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1151,
        1272
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1405": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        989,
        1279
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1406": {
      "op": "POP"
    },
    "1407": {
      "op": "POP"
    },
    "1408": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        989,
        1279
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1409": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1410": {
      "fn": "ERC721.name",
      "offset": [
        3093,
        3106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1412": {
      "fn": "ERC721.name",
      "offset": [
        3125,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x0"
    },
    "1414": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1415": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1416": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x590"
    },
    "1419": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1420": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x207F"
    },
    "1423": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1424": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1425": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1426": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1428": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1429": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1431": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1432": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1433": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DIV",
      "path": "7"
    },
    "1434": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MUL",
      "path": "7"
    },
    "1435": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1438": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1440": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1441": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1442": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1443": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1444": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1446": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1447": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1448": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1449": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1450": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1451": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1452": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1453": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1454": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1456": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1457": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1458": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1459": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1460": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5BC"
    },
    "1463": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1464": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x207F"
    },
    "1467": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1468": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1469": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1470": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1471": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x609"
    },
    "1474": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1475": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1476": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1478": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "LT",
      "path": "7"
    },
    "1479": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5DE"
    },
    "1482": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1483": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1486": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1487": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1488": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1489": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DIV",
      "path": "7"
    },
    "1490": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MUL",
      "path": "7"
    },
    "1491": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1492": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1493": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1494": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1496": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1497": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1498": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x609"
    },
    "1501": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1502": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1503": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1504": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1505": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1506": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1507": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1509": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1510": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1512": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1514": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1515": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1516": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1517": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1518": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1519": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1520": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1521": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1522": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1524": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1525": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1526": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1528": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1529": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1530": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1531": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "GT",
      "path": "7"
    },
    "1532": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5EC"
    },
    "1535": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1536": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1537": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1538": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SUB",
      "path": "7"
    },
    "1539": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1541": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "AND",
      "path": "7"
    },
    "1542": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1543": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "1544": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1545": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1546": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "1547": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "1548": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "1549": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "1550": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "1551": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1552": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "1553": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1554": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1555": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1556": {
      "fn": "ERC721.getApproved",
      "offset": [
        4788,
        4795
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1558": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 6
    },
    "1559": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1560": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1561": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1563": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1565": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1566": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1568": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1569": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1570": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "op": "SUB"
    },
    "1579": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "AND",
      "path": "7"
    },
    "1580": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 7,
      "value": "0x691"
    },
    "1583": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1584": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1586": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1595": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1598": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1600": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1601": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "ADD",
      "path": "7"
    },
    "1602": {
      "op": "MSTORE"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1607": {
      "op": "DUP3"
    },
    "1608": {
      "op": "ADD"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1645": {
      "op": "DUP3"
    },
    "1646": {
      "op": "ADD"
    },
    "1647": {
      "op": "MSTORE"
    },
    "1648": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1671": {
      "op": "ADD"
    },
    "1672": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1673": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1675": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1676": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1677": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1678": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "SUB",
      "path": "7"
    },
    "1679": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1680": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "1681": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1682": {
      "op": "POP"
    },
    "1683": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0x0"
    },
    "1685": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1686": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1687": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1688": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1690": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1692": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1693": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1695": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1696": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1697": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "AND",
      "path": "7"
    },
    "1707": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1708": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1709": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1710": {
      "fn": "ERC721.approve",
      "offset": [
        4290,
        4303
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1712": {
      "fn": "ERC721.approve",
      "offset": [
        4306,
        4329
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6B8"
    },
    "1715": {
      "fn": "ERC721.approve",
      "offset": [
        4321,
        4328
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1716": {
      "fn": "ERC721.approve",
      "offset": [
        4306,
        4320
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC77"
    },
    "1719": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4306,
        4329
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1720": {
      "fn": "ERC721.approve",
      "offset": [
        4306,
        4329
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1721": {
      "fn": "ERC721.approve",
      "offset": [
        4290,
        4329
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1722": {
      "fn": "ERC721.approve",
      "offset": [
        4290,
        4329
      ],
      "op": "POP",
      "path": "7"
    },
    "1723": {
      "fn": "ERC721.approve",
      "offset": [
        4353,
        4358
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 9
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1730": {
      "op": "SHL"
    },
    "1731": {
      "op": "SUB"
    },
    "1732": {
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4358
      ],
      "op": "AND",
      "path": "7"
    },
    "1733": {
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4349
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4358
      ],
      "op": "AND",
      "path": "7"
    },
    "1743": {
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4358
      ],
      "op": "EQ",
      "path": "7"
    },
    "1744": {
      "branch": 124,
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4358
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1745": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x726"
    },
    "1748": {
      "branch": 124,
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1749": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1751": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1760": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1763": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1765": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1766": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "ADD",
      "path": "7"
    },
    "1767": {
      "op": "MSTORE"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1772": {
      "op": "DUP3"
    },
    "1773": {
      "op": "ADD"
    },
    "1774": {
      "op": "MSTORE"
    },
    "1775": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1810": {
      "op": "DUP3"
    },
    "1811": {
      "op": "ADD"
    },
    "1812": {
      "op": "MSTORE"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1820": {
      "op": "DUP3"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "op": "MSTORE"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1825": {
      "op": "ADD"
    },
    "1826": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "1829": {
      "op": "JUMP"
    },
    "1830": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1831": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 10
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1838": {
      "op": "SHL"
    },
    "1839": {
      "op": "SUB"
    },
    "1840": {
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4449
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 11
    },
    "1841": {
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4449
      ],
      "op": "AND",
      "path": "7"
    },
    "1842": {
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4449
      ],
      "op": "EQ",
      "path": "7"
    },
    "1843": {
      "branch": 125,
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4449
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1844": {
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x742"
    },
    "1847": {
      "branch": 125,
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4490
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1848": {
      "op": "POP"
    },
    "1849": {
      "fn": "ERC721.approve",
      "offset": [
        4453,
        4490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x742"
    },
    "1852": {
      "fn": "ERC721.approve",
      "offset": [
        4470,
        4475
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1853": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1854": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x508"
    },
    "1857": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1858": {
      "branch": 126,
      "fn": "ERC721.approve",
      "offset": [
        4453,
        4490
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1859": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7B4"
    },
    "1862": {
      "branch": 126,
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1863": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1865": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1872": {
      "op": "SHL"
    },
    "1873": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1874": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1877": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1879": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1880": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "ADD",
      "path": "7"
    },
    "1881": {
      "op": "MSTORE"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1886": {
      "op": "DUP3"
    },
    "1887": {
      "op": "ADD"
    },
    "1888": {
      "op": "MSTORE"
    },
    "1889": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1924": {
      "op": "DUP3"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "op": "MSTORE"
    },
    "1927": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1962": {
      "op": "DUP3"
    },
    "1963": {
      "op": "ADD"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1967": {
      "op": "ADD"
    },
    "1968": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "1971": {
      "op": "JUMP"
    },
    "1972": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1973": {
      "fn": "ERC721.approve",
      "offset": [
        4583,
        4604
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 12,
      "value": "0x7BE"
    },
    "1976": {
      "fn": "ERC721.approve",
      "offset": [
        4592,
        4594
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1977": {
      "fn": "ERC721.approve",
      "offset": [
        4596,
        4603
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1978": {
      "fn": "ERC721.approve",
      "offset": [
        4583,
        4591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1220"
    },
    "1981": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4583,
        4604
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1982": {
      "fn": "ERC721.approve",
      "offset": [
        4583,
        4604
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1983": {
      "fn": "ERC721.approve",
      "offset": [
        4280,
        4611
      ],
      "op": "POP",
      "path": "7"
    },
    "1984": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "POP",
      "path": "7"
    },
    "1985": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "POP",
      "path": "7"
    },
    "1986": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1987": {
      "fn": "NFT.mint",
      "offset": [
        1402,
        1981
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1988": {
      "fn": "NFT.mint",
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1990": {
      "fn": "NFT.mint",
      "offset": [
        1460,
        1473
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7CE"
    },
    "1993": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1847,
        1857
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "1995": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1847,
        1864
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1996": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1847,
        1864
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1997": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1998": {
      "fn": "NFT.mint",
      "offset": [
        1460,
        1473
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1999": {
      "fn": "NFT.mint",
      "offset": [
        1443,
        1473
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2000": {
      "fn": "NFT.mint",
      "offset": [
        1443,
        1473
      ],
      "op": "POP",
      "path": "13"
    },
    "2001": {
      "fn": "NFT.mint",
      "offset": [
        1501,
        1510
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 13,
      "value": "0xC"
    },
    "2003": {
      "fn": "NFT.mint",
      "offset": [
        1501,
        1510
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2004": {
      "fn": "NFT.mint",
      "offset": [
        1491,
        1497
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2005": {
      "fn": "NFT.mint",
      "offset": [
        1491,
        1510
      ],
      "op": "GT",
      "path": "13"
    },
    "2006": {
      "branch": 109,
      "fn": "NFT.mint",
      "offset": [
        1491,
        1510
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2007": {
      "fn": "NFT.mint",
      "offset": [
        1483,
        1511
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7DF"
    },
    "2010": {
      "branch": 109,
      "fn": "NFT.mint",
      "offset": [
        1483,
        1511
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2011": {
      "fn": "NFT.mint",
      "offset": [
        1483,
        1511
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2013": {
      "fn": "NFT.mint",
      "offset": [
        1483,
        1511
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2014": {
      "fn": "NFT.mint",
      "offset": [
        1483,
        1511
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2015": {
      "fn": "NFT.mint",
      "offset": [
        1483,
        1511
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2016": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2018": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "op": "SUB"
    },
    "2027": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2028": {
      "fn": "NFT.mint",
      "offset": [
        1526,
        1536
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2029": {
      "branch": 110,
      "fn": "NFT.mint",
      "offset": [
        1526,
        1547
      ],
      "op": "EQ",
      "path": "13"
    },
    "2030": {
      "fn": "NFT.mint",
      "offset": [
        1522,
        1931
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8A0"
    },
    "2033": {
      "branch": 110,
      "fn": "NFT.mint",
      "offset": [
        1522,
        1931
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2034": {
      "fn": "NFT.mint",
      "offset": [
        1584,
        1588
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0xB"
    },
    "2036": {
      "fn": "NFT.mint",
      "offset": [
        1584,
        1588
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2037": {
      "fn": "NFT.mint",
      "offset": [
        1571,
        1580
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2038": {
      "fn": "NFT.mint",
      "offset": [
        1571,
        1588
      ],
      "op": "LT",
      "path": "13"
    },
    "2039": {
      "branch": 111,
      "fn": "NFT.mint",
      "offset": [
        1571,
        1588
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2040": {
      "fn": "NFT.mint",
      "offset": [
        1563,
        1589
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x800"
    },
    "2043": {
      "branch": 111,
      "fn": "NFT.mint",
      "offset": [
        1563,
        1589
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2044": {
      "fn": "NFT.mint",
      "offset": [
        1563,
        1589
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2046": {
      "fn": "NFT.mint",
      "offset": [
        1563,
        1589
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2047": {
      "fn": "NFT.mint",
      "offset": [
        1563,
        1589
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2048": {
      "fn": "NFT.mint",
      "offset": [
        1563,
        1589
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2049": {
      "fn": "NFT.mint",
      "offset": [
        1682,
        1698
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2051": {
      "fn": "NFT.mint",
      "offset": [
        1729,
        1732
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2053": {
      "fn": "NFT.mint",
      "offset": [
        1714,
        1725
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "2055": {
      "fn": "NFT.mint",
      "offset": [
        1714,
        1725
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2056": {
      "fn": "NFT.mint",
      "offset": [
        1702,
        1711
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2057": {
      "fn": "NFT.mint",
      "offset": [
        1702,
        1725
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x812"
    },
    "2060": {
      "fn": "NFT.mint",
      "offset": [
        1702,
        1725
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2061": {
      "fn": "NFT.mint",
      "offset": [
        1702,
        1725
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2062": {
      "fn": "NFT.mint",
      "offset": [
        1702,
        1725
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20D0"
    },
    "2065": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        1702,
        1725
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2066": {
      "fn": "NFT.mint",
      "offset": [
        1702,
        1725
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2067": {
      "fn": "NFT.mint",
      "offset": [
        1701,
        1732
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x81C"
    },
    "2070": {
      "fn": "NFT.mint",
      "offset": [
        1701,
        1732
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2071": {
      "fn": "NFT.mint",
      "offset": [
        1701,
        1732
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2072": {
      "fn": "NFT.mint",
      "offset": [
        1701,
        1732
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2105"
    },
    "2075": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        1701,
        1732
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2076": {
      "fn": "NFT.mint",
      "offset": [
        1701,
        1732
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2077": {
      "fn": "NFT.mint",
      "offset": [
        1682,
        1732
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2078": {
      "fn": "NFT.mint",
      "offset": [
        1682,
        1732
      ],
      "op": "POP",
      "path": "13"
    },
    "2079": {
      "fn": "NFT.mint",
      "offset": [
        1746,
        1768
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 15,
      "value": "0x827"
    },
    "2082": {
      "fn": "NFT.mint",
      "offset": [
        1759,
        1767
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2083": {
      "fn": "NFT.mint",
      "offset": [
        1746,
        1758
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x128E"
    },
    "2086": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        1746,
        1768
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2087": {
      "fn": "NFT.mint",
      "offset": [
        1746,
        1768
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2088": {
      "fn": "NFT.mint",
      "offset": [
        1784,
        1797
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2090": {
      "fn": "NFT.mint",
      "offset": [
        1811,
        1818
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x83B"
    },
    "2093": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2095": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "op": "SUB"
    },
    "2104": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2105": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2106": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2107": {
      "fn": "NFT.mint",
      "offset": [
        1811,
        1818
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "op": "SUB"
    },
    "2116": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1824
      ],
      "op": "AND",
      "path": "13"
    },
    "2117": {
      "fn": "NFT.mint",
      "offset": [
        1850,
        1870
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x84E"
    },
    "2120": {
      "fn": "NFT.mint",
      "offset": [
        1862,
        1870
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2121": {
      "fn": "NFT.mint",
      "offset": [
        1850,
        1859
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2122": {
      "fn": "NFT.mint",
      "offset": [
        1850,
        1870
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2119"
    },
    "2125": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        1850,
        1870
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2126": {
      "fn": "NFT.mint",
      "offset": [
        1850,
        1870
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2127": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2129": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2130": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2132": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2133": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2134": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2135": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2136": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2137": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "GAS",
      "path": "13"
    },
    "2138": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "CALL",
      "path": "13"
    },
    "2139": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2140": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "POP",
      "path": "13"
    },
    "2141": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "POP",
      "path": "13"
    },
    "2142": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "POP",
      "path": "13"
    },
    "2143": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2144": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2145": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2147": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2148": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "EQ",
      "path": "13"
    },
    "2149": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x88A"
    },
    "2152": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2153": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2155": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2156": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2157": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "POP",
      "path": "13"
    },
    "2158": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2160": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "NOT",
      "path": "13"
    },
    "2161": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "2163": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2164": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "ADD",
      "path": "13"
    },
    "2165": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "AND",
      "path": "13"
    },
    "2166": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2167": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "ADD",
      "path": "13"
    },
    "2168": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2170": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2171": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2172": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2173": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2174": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2175": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2177": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2179": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2180": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "ADD",
      "path": "13"
    },
    "2181": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2182": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x88F"
    },
    "2185": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2186": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2187": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2189": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2190": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "POP",
      "path": "13"
    },
    "2191": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2192": {
      "fn": "NFT.mint",
      "offset": [
        1803,
        1889
      ],
      "op": "POP",
      "path": "13"
    },
    "2193": {
      "fn": "NFT.mint",
      "offset": [
        1783,
        1889
      ],
      "op": "POP",
      "path": "13"
    },
    "2194": {
      "fn": "NFT.mint",
      "offset": [
        1783,
        1889
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2195": {
      "fn": "NFT.mint",
      "offset": [
        1783,
        1889
      ],
      "op": "POP",
      "path": "13"
    },
    "2196": {
      "branch": 112,
      "fn": "NFT.mint",
      "offset": [
        1911,
        1919
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 16
    },
    "2197": {
      "fn": "NFT.mint",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x89D"
    },
    "2200": {
      "branch": 112,
      "fn": "NFT.mint",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2201": {
      "fn": "NFT.mint",
      "offset": [
        1903,
        1920
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2203": {
      "fn": "NFT.mint",
      "offset": [
        1903,
        1920
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2204": {
      "fn": "NFT.mint",
      "offset": [
        1903,
        1920
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2205": {
      "fn": "NFT.mint",
      "offset": [
        1903,
        1920
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2206": {
      "fn": "NFT.mint",
      "offset": [
        1549,
        1931
      ],
      "op": "POP",
      "path": "13"
    },
    "2207": {
      "fn": "NFT.mint",
      "offset": [
        1549,
        1931
      ],
      "op": "POP",
      "path": "13"
    },
    "2208": {
      "fn": "NFT.mint",
      "offset": [
        1522,
        1931
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2209": {
      "fn": "NFT.mint",
      "offset": [
        1941,
        1974
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 17,
      "value": "0x8B4"
    },
    "2212": {
      "fn": "NFT.mint",
      "offset": [
        1951,
        1961
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2213": {
      "fn": "NFT.mint",
      "offset": [
        1963,
        1973
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8AF"
    },
    "2216": {
      "fn": "NFT.mint",
      "offset": [
        1963,
        1969
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2217": {
      "fn": "NFT.mint",
      "offset": [
        1972,
        1973
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2219": {
      "fn": "NFT.mint",
      "offset": [
        1963,
        1973
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2130"
    },
    "2222": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        1963,
        1973
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2223": {
      "fn": "NFT.mint",
      "offset": [
        1963,
        1973
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2224": {
      "fn": "NFT.mint",
      "offset": [
        1941,
        1950
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12EE"
    },
    "2227": {
      "fn": "NFT.mint",
      "jump": "i",
      "offset": [
        1941,
        1974
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2228": {
      "fn": "NFT.mint",
      "offset": [
        1941,
        1974
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2229": {
      "fn": "NFT.mint",
      "offset": [
        1433,
        1981
      ],
      "op": "POP",
      "path": "13"
    },
    "2230": {
      "fn": "NFT.mint",
      "jump": "o",
      "offset": [
        1402,
        1981
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2231": {
      "fn": "NFT.transferFrom",
      "offset": [
        2645,
        3303
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2232": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x11"
    },
    "2234": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2235": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2237": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "AND",
      "path": "13"
    },
    "2238": {
      "offset": [
        5224,
        5246
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2239": {
      "fn": "NFT.transferable",
      "offset": [
        5224,
        5246
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2240": {
      "offset": [
        5242,
        5246
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2242": {
      "offset": [
        5224,
        5246
      ],
      "op": "EQ",
      "path": "13"
    },
    "2243": {
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8DE"
    },
    "2246": {
      "offset": [
        5216,
        5280
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2247": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2249": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2256": {
      "op": "SHL"
    },
    "2257": {
      "offset": [
        5216,
        5280
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2258": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2259": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2261": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "ADD",
      "path": "13"
    },
    "2262": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x688"
    },
    "2265": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2266": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2148"
    },
    "2269": {
      "fn": "NFT.transferable",
      "jump": "i",
      "offset": [
        5216,
        5280
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2270": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2271": {
      "fn": "NFT.transferFrom",
      "offset": [
        2809,
        2850
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 18,
      "value": "0x8E8"
    },
    "2274": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2275": {
      "fn": "NFT.transferFrom",
      "offset": [
        2842,
        2849
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2276": {
      "fn": "NFT.transferFrom",
      "offset": [
        2809,
        2827
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1308"
    },
    "2279": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        2809,
        2850
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2280": {
      "branch": 113,
      "fn": "NFT.transferFrom",
      "offset": [
        2809,
        2850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2281": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x904"
    },
    "2284": {
      "branch": 113,
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2285": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2287": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2296": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2297": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2299": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "ADD",
      "path": "13"
    },
    "2300": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x688"
    },
    "2303": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2304": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x217F"
    },
    "2307": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        2788,
        2925
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2308": {
      "fn": "NFT.transferFrom",
      "offset": [
        2788,
        2925
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2309": {
      "fn": "NFT.transferFrom",
      "offset": [
        2940,
        2949
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2310": {
      "branch": 114,
      "fn": "NFT.transferFrom",
      "offset": [
        2940,
        2953
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2311": {
      "fn": "NFT.transferFrom",
      "offset": [
        2936,
        3258
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x9E2"
    },
    "2314": {
      "branch": 114,
      "fn": "NFT.transferFrom",
      "offset": [
        2936,
        3258
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2315": {
      "fn": "NFT.transferFrom",
      "offset": [
        2969,
        2985
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2317": {
      "fn": "NFT.transferFrom",
      "offset": [
        3016,
        3019
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2319": {
      "fn": "NFT.transferFrom",
      "offset": [
        3001,
        3012
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "2321": {
      "fn": "NFT.transferFrom",
      "offset": [
        3001,
        3012
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2322": {
      "fn": "NFT.transferFrom",
      "offset": [
        2989,
        2998
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2323": {
      "fn": "NFT.transferFrom",
      "offset": [
        2989,
        3012
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x91C"
    },
    "2326": {
      "fn": "NFT.transferFrom",
      "offset": [
        2989,
        3012
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2327": {
      "fn": "NFT.transferFrom",
      "offset": [
        2989,
        3012
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2328": {
      "fn": "NFT.transferFrom",
      "offset": [
        2989,
        3012
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20D0"
    },
    "2331": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        2989,
        3012
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2332": {
      "fn": "NFT.transferFrom",
      "offset": [
        2989,
        3012
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2333": {
      "fn": "NFT.transferFrom",
      "offset": [
        2988,
        3019
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x926"
    },
    "2336": {
      "fn": "NFT.transferFrom",
      "offset": [
        2988,
        3019
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2337": {
      "fn": "NFT.transferFrom",
      "offset": [
        2988,
        3019
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2338": {
      "fn": "NFT.transferFrom",
      "offset": [
        2988,
        3019
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2105"
    },
    "2341": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        2988,
        3019
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2342": {
      "fn": "NFT.transferFrom",
      "offset": [
        2988,
        3019
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2343": {
      "fn": "NFT.transferFrom",
      "offset": [
        2969,
        3019
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2344": {
      "fn": "NFT.transferFrom",
      "offset": [
        2969,
        3019
      ],
      "op": "POP",
      "path": "13"
    },
    "2345": {
      "fn": "NFT.transferFrom",
      "offset": [
        3033,
        3055
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 19,
      "value": "0x931"
    },
    "2348": {
      "fn": "NFT.transferFrom",
      "offset": [
        3046,
        3054
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2349": {
      "fn": "NFT.transferFrom",
      "offset": [
        3033,
        3045
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x128E"
    },
    "2352": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        3033,
        3055
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2353": {
      "fn": "NFT.transferFrom",
      "offset": [
        3033,
        3055
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2354": {
      "fn": "NFT.transferFrom",
      "offset": [
        3071,
        3084
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2362": {
      "op": "SHL"
    },
    "2363": {
      "op": "SUB"
    },
    "2364": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3108
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2365": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3108
      ],
      "op": "AND",
      "path": "13"
    },
    "2366": {
      "fn": "NFT.transferFrom",
      "offset": [
        3116,
        3136
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x947"
    },
    "2369": {
      "fn": "NFT.transferFrom",
      "offset": [
        3128,
        3136
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2370": {
      "fn": "NFT.transferFrom",
      "offset": [
        3116,
        3125
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2371": {
      "fn": "NFT.transferFrom",
      "offset": [
        3116,
        3136
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2119"
    },
    "2374": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        3116,
        3136
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2375": {
      "fn": "NFT.transferFrom",
      "offset": [
        3116,
        3136
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2376": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2378": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2379": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2381": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2382": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2383": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2384": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2385": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2386": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "GAS",
      "path": "13"
    },
    "2387": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "CALL",
      "path": "13"
    },
    "2388": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2389": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "POP",
      "path": "13"
    },
    "2390": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "POP",
      "path": "13"
    },
    "2391": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "POP",
      "path": "13"
    },
    "2392": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2393": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2394": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2396": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2397": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "EQ",
      "path": "13"
    },
    "2398": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x983"
    },
    "2401": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2402": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2404": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2405": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2406": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "POP",
      "path": "13"
    },
    "2407": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2409": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "NOT",
      "path": "13"
    },
    "2410": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "2412": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2413": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "ADD",
      "path": "13"
    },
    "2414": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "AND",
      "path": "13"
    },
    "2415": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2416": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "ADD",
      "path": "13"
    },
    "2417": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2419": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2420": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2421": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2422": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2423": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2424": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2426": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2428": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2429": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "ADD",
      "path": "13"
    },
    "2430": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2431": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x988"
    },
    "2434": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2435": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2436": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2438": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2439": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "POP",
      "path": "13"
    },
    "2440": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2441": {
      "fn": "NFT.transferFrom",
      "offset": [
        3090,
        3171
      ],
      "op": "POP",
      "path": "13"
    },
    "2442": {
      "fn": "NFT.transferFrom",
      "offset": [
        3070,
        3171
      ],
      "op": "POP",
      "path": "13"
    },
    "2443": {
      "fn": "NFT.transferFrom",
      "offset": [
        3070,
        3171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2444": {
      "fn": "NFT.transferFrom",
      "offset": [
        3070,
        3171
      ],
      "op": "POP",
      "path": "13"
    },
    "2445": {
      "branch": 115,
      "fn": "NFT.transferFrom",
      "offset": [
        3193,
        3201
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 20
    },
    "2446": {
      "fn": "NFT.transferFrom",
      "offset": [
        3185,
        3202
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x996"
    },
    "2449": {
      "branch": 115,
      "fn": "NFT.transferFrom",
      "offset": [
        3185,
        3202
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2450": {
      "fn": "NFT.transferFrom",
      "offset": [
        3185,
        3202
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2452": {
      "fn": "NFT.transferFrom",
      "offset": [
        3185,
        3202
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2453": {
      "fn": "NFT.transferFrom",
      "offset": [
        3185,
        3202
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2454": {
      "fn": "NFT.transferFrom",
      "offset": [
        3185,
        3202
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2455": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 21,
      "value": "0x40"
    },
    "2457": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2458": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "op": "SUB"
    },
    "2467": {
      "op": "DUP8"
    },
    "2468": {
      "op": "DUP2"
    },
    "2469": {
      "op": "AND"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "MSTORE"
    },
    "2472": {
      "op": "DUP7"
    },
    "2473": {
      "op": "AND"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2476": {
      "op": "DUP3"
    },
    "2477": {
      "op": "ADD"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "fn": "NFT.transferFrom",
      "offset": [
        3237,
        3246
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2480": {
      "op": "DUP2"
    },
    "2481": {
      "op": "DUP4"
    },
    "2482": {
      "op": "ADD"
    },
    "2483": {
      "op": "MSTORE"
    },
    "2484": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2485": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2486": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x3F3483D0995DB4C081E0101EF6753BEF457833C20605CD871DE61DCB48085A9A"
    },
    "2519": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2520": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2521": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2522": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "SUB",
      "path": "13"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2525": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "ADD",
      "path": "13"
    },
    "2526": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2527": {
      "fn": "NFT.transferFrom",
      "offset": [
        3222,
        3247
      ],
      "op": "LOG1",
      "path": "13"
    },
    "2528": {
      "fn": "NFT.transferFrom",
      "offset": [
        2955,
        3258
      ],
      "op": "POP",
      "path": "13"
    },
    "2529": {
      "fn": "NFT.transferFrom",
      "offset": [
        2955,
        3258
      ],
      "op": "POP",
      "path": "13"
    },
    "2530": {
      "fn": "NFT.transferFrom",
      "offset": [
        2936,
        3258
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2531": {
      "fn": "NFT.transferFrom",
      "offset": [
        3268,
        3296
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 22,
      "value": "0x7BE"
    },
    "2534": {
      "fn": "NFT.transferFrom",
      "offset": [
        3278,
        3282
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2535": {
      "fn": "NFT.transferFrom",
      "offset": [
        3284,
        3286
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2536": {
      "fn": "NFT.transferFrom",
      "offset": [
        3288,
        3295
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2537": {
      "fn": "NFT.transferFrom",
      "offset": [
        3268,
        3277
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13FF"
    },
    "2540": {
      "fn": "NFT.transferFrom",
      "jump": "i",
      "offset": [
        3268,
        3296
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2541": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1358,
        1689
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2542": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1495,
        1502
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2544": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1547,
        1570
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 23,
      "value": "0x9F8"
    },
    "2547": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1564,
        1569
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2548": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1547,
        1563
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCEE"
    },
    "2551": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1547,
        1570
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2552": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1547,
        1570
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2553": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1539,
        1544
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2554": {
      "branch": 135,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1539,
        1570
      ],
      "op": "LT",
      "path": "8"
    },
    "2555": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA5A"
    },
    "2558": {
      "branch": 135,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2559": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2561": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2570": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2573": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2575": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2576": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "ADD",
      "path": "8"
    },
    "2577": {
      "op": "MSTORE"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2582": {
      "op": "DUP3"
    },
    "2583": {
      "op": "ADD"
    },
    "2584": {
      "op": "MSTORE"
    },
    "2585": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2620": {
      "op": "DUP3"
    },
    "2621": {
      "op": "ADD"
    },
    "2622": {
      "op": "MSTORE"
    },
    "2623": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2637": {
      "op": "SHL"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2640": {
      "op": "DUP3"
    },
    "2641": {
      "op": "ADD"
    },
    "2642": {
      "op": "MSTORE"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2645": {
      "op": "ADD"
    },
    "2646": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x688"
    },
    "2649": {
      "op": "JUMP"
    },
    "2650": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1639
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "op": "SUB"
    },
    "2660": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 24
    },
    "2661": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2662": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2663": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "AND",
      "path": "8"
    },
    "2664": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2666": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2667": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2668": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2669": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1668
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "2671": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2673": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2674": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2675": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2676": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2678": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2679": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2680": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1675
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2681": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2682": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2683": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2684": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2685": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2686": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2687": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2688": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2689": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1656,
        1682
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2690": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1358,
        1689
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2691": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3342,
        3867
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2692": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x11"
    },
    "2694": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2695": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2697": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "AND",
      "path": "13"
    },
    "2698": {
      "offset": [
        5224,
        5246
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2699": {
      "fn": "NFT.transferable",
      "offset": [
        5224,
        5246
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2700": {
      "offset": [
        5242,
        5246
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2702": {
      "offset": [
        5224,
        5246
      ],
      "op": "EQ",
      "path": "13"
    },
    "2703": {
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAAA"
    },
    "2706": {
      "offset": [
        5216,
        5280
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2707": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2709": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2716": {
      "op": "SHL"
    },
    "2717": {
      "offset": [
        5216,
        5280
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2718": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2719": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2721": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "ADD",
      "path": "13"
    },
    "2722": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x688"
    },
    "2725": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2726": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2148"
    },
    "2729": {
      "fn": "NFT.transferable",
      "jump": "i",
      "offset": [
        5216,
        5280
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2730": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2731": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3493,
        3502
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2732": {
      "branch": 116,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3493,
        3506
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2733": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3489,
        3811
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB88"
    },
    "2736": {
      "branch": 116,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3489,
        3811
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2737": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3522,
        3538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2739": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3569,
        3572
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "2741": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3554,
        3565
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "2743": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3554,
        3565
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2744": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3542,
        3551
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2745": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3542,
        3565
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAC2"
    },
    "2748": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3542,
        3565
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2749": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3542,
        3565
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2750": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3542,
        3565
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20D0"
    },
    "2753": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3542,
        3565
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2754": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3542,
        3565
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2755": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3541,
        3572
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xACC"
    },
    "2758": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3541,
        3572
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2759": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3541,
        3572
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2760": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3541,
        3572
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2105"
    },
    "2763": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3541,
        3572
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2764": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3541,
        3572
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2765": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3522,
        3572
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2766": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3522,
        3572
      ],
      "op": "POP",
      "path": "13"
    },
    "2767": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3586,
        3608
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 25,
      "value": "0xAD7"
    },
    "2770": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3599,
        3607
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2771": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3586,
        3598
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x128E"
    },
    "2774": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3586,
        3608
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2775": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3586,
        3608
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2776": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3624,
        3637
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "op": "SUB"
    },
    "2786": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3661
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2787": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3661
      ],
      "op": "AND",
      "path": "13"
    },
    "2788": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3669,
        3689
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAED"
    },
    "2791": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3681,
        3689
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2792": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3669,
        3678
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2793": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3669,
        3689
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2119"
    },
    "2796": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3669,
        3689
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2797": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3669,
        3689
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2798": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2800": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2801": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2803": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2804": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2805": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2806": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2807": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2808": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "GAS",
      "path": "13"
    },
    "2809": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "CALL",
      "path": "13"
    },
    "2810": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2811": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "POP",
      "path": "13"
    },
    "2812": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "POP",
      "path": "13"
    },
    "2813": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "POP",
      "path": "13"
    },
    "2814": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2815": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2816": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2818": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2819": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "EQ",
      "path": "13"
    },
    "2820": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB29"
    },
    "2823": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2824": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2826": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2827": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2828": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "POP",
      "path": "13"
    },
    "2829": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "2831": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "NOT",
      "path": "13"
    },
    "2832": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "2834": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2835": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "ADD",
      "path": "13"
    },
    "2836": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "AND",
      "path": "13"
    },
    "2837": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2838": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "ADD",
      "path": "13"
    },
    "2839": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2841": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2842": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2843": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2844": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2845": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "2846": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2848": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2850": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2851": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "ADD",
      "path": "13"
    },
    "2852": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "2853": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB2E"
    },
    "2856": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2857": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2858": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "2860": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2861": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "POP",
      "path": "13"
    },
    "2862": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2863": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3643,
        3724
      ],
      "op": "POP",
      "path": "13"
    },
    "2864": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3623,
        3724
      ],
      "op": "POP",
      "path": "13"
    },
    "2865": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3623,
        3724
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2866": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3623,
        3724
      ],
      "op": "POP",
      "path": "13"
    },
    "2867": {
      "branch": 117,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3746,
        3754
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 26
    },
    "2868": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3738,
        3755
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB3C"
    },
    "2871": {
      "branch": 117,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3738,
        3755
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2872": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3738,
        3755
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2874": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3738,
        3755
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2875": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3738,
        3755
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2876": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3738,
        3755
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2877": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 27,
      "value": "0x40"
    },
    "2879": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2880": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "SUB"
    },
    "2889": {
      "op": "DUP8"
    },
    "2890": {
      "op": "DUP2"
    },
    "2891": {
      "op": "AND"
    },
    "2892": {
      "op": "DUP3"
    },
    "2893": {
      "op": "MSTORE"
    },
    "2894": {
      "op": "DUP7"
    },
    "2895": {
      "op": "AND"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2898": {
      "op": "DUP3"
    },
    "2899": {
      "op": "ADD"
    },
    "2900": {
      "op": "MSTORE"
    },
    "2901": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3790,
        3799
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2902": {
      "op": "DUP2"
    },
    "2903": {
      "op": "DUP4"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2907": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2908": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x3F3483D0995DB4C081E0101EF6753BEF457833C20605CD871DE61DCB48085A9A"
    },
    "2941": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2942": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2943": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2944": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "SUB",
      "path": "13"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2947": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "ADD",
      "path": "13"
    },
    "2948": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2949": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3775,
        3800
      ],
      "op": "LOG1",
      "path": "13"
    },
    "2950": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3508,
        3811
      ],
      "op": "POP",
      "path": "13"
    },
    "2951": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3508,
        3811
      ],
      "op": "POP",
      "path": "13"
    },
    "2952": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3489,
        3811
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2953": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 28,
      "value": "0x7BE"
    },
    "2956": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3838,
        3842
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2957": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3844,
        3846
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2958": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3848,
        3855
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2959": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2961": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2962": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2963": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2965": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "ADD",
      "path": "13"
    },
    "2966": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2968": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2969": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2970": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2972": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2973": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2974": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3860
      ],
      "op": "POP",
      "path": "13"
    },
    "2975": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3821,
        3837
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xDF4"
    },
    "2978": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        3821,
        3860
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2979": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2980": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2058,
        2065
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2982": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2110,
        2140
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 29,
      "value": "0xBAE"
    },
    "2985": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1847,
        1857
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "2987": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1847,
        1864
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2988": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1847,
        1864
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2989": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1760,
        1871
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2990": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2110,
        2140
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2991": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2102,
        2107
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2992": {
      "branch": 136,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2102,
        2140
      ],
      "op": "LT",
      "path": "8"
    },
    "2993": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC11"
    },
    "2996": {
      "branch": 136,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2997": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2999": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3008": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3011": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3013": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3014": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "ADD",
      "path": "8"
    },
    "3015": {
      "op": "MSTORE"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3020": {
      "op": "DUP3"
    },
    "3021": {
      "op": "ADD"
    },
    "3022": {
      "op": "MSTORE"
    },
    "3023": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3058": {
      "op": "DUP3"
    },
    "3059": {
      "op": "ADD"
    },
    "3060": {
      "op": "MSTORE"
    },
    "3061": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3076": {
      "op": "SHL"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3079": {
      "op": "DUP3"
    },
    "3080": {
      "op": "ADD"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3084": {
      "op": "ADD"
    },
    "3085": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x688"
    },
    "3088": {
      "op": "JUMP"
    },
    "3089": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2081,
        2210
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3090": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2237
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 30,
      "value": "0x8"
    },
    "3092": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2238,
        2243
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3093": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3094": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3095": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3096": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "LT",
      "path": "8"
    },
    "3097": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC24"
    },
    "3100": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3101": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC24"
    },
    "3104": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21D0"
    },
    "3107": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2227,
        2244
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3108": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3109": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3110": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3112": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3113": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3115": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3117": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3118": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "ADD",
      "path": "8"
    },
    "3119": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2227,
        2244
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3120": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2220,
        2244
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3121": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2220,
        2244
      ],
      "op": "POP",
      "path": "8"
    },
    "3122": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3123": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3124": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1943,
        2251
      ],
      "op": "POP",
      "path": "8"
    },
    "3125": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1943,
        2251
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3126": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3127": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3129": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3136": {
      "op": "SHL"
    },
    "3137": {
      "op": "SUB"
    },
    "3138": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3139": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3140": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3141": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC60"
    },
    "3144": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3145": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3147": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3156": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3157": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3159": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3160": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x688"
    },
    "3163": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3164": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21E6"
    },
    "3167": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3168": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3169": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 31
    },
    "3170": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3171": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC73"
    },
    "3174": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3175": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5024
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xD"
    },
    "3177": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5024
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3178": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3180": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3181": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "ADD",
      "path": "13"
    },
    "3182": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3183": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1CD2"
    },
    "3186": {
      "fn": "NFT.setBaseURI",
      "jump": "i",
      "offset": [
        5017,
        5038
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3187": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3188": {
      "fn": "NFT.setBaseURI",
      "offset": [
        5017,
        5038
      ],
      "op": "POP",
      "path": "13"
    },
    "3189": {
      "fn": "NFT.setBaseURI",
      "offset": [
        4943,
        5045
      ],
      "op": "POP",
      "path": "13"
    },
    "3190": {
      "fn": "NFT.setBaseURI",
      "jump": "o",
      "offset": [
        4943,
        5045
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3191": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3192": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2776,
        2783
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3194": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3195": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3196": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3197": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2822
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3199": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3201": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3202": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3204": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3205": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3206": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3213": {
      "op": "SHL"
    },
    "3214": {
      "op": "SUB"
    },
    "3215": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "AND",
      "path": "7"
    },
    "3216": {
      "branch": 127,
      "fn": "ERC721.ownerOf",
      "offset": [
        2862,
        2881
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 32
    },
    "3217": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57B"
    },
    "3220": {
      "branch": 127,
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3221": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3224": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3230": {
      "op": "SHL"
    },
    "3231": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3232": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3235": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3237": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3238": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "ADD",
      "path": "7"
    },
    "3239": {
      "op": "MSTORE"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3244": {
      "op": "DUP3"
    },
    "3245": {
      "op": "ADD"
    },
    "3246": {
      "op": "MSTORE"
    },
    "3247": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3282": {
      "op": "DUP3"
    },
    "3283": {
      "op": "ADD"
    },
    "3284": {
      "op": "MSTORE"
    },
    "3285": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3297": {
      "op": "SHL"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3300": {
      "op": "DUP3"
    },
    "3301": {
      "op": "ADD"
    },
    "3302": {
      "op": "MSTORE"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3305": {
      "op": "ADD"
    },
    "3306": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "3309": {
      "op": "JUMP"
    },
    "3310": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3311": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2436,
        2443
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "SUB"
    },
    "3321": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2480,
        2499
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 33
    },
    "3322": {
      "branch": 128,
      "fn": "ERC721.balanceOf",
      "offset": [
        2480,
        2499
      ],
      "op": "AND",
      "path": "7"
    },
    "3323": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD59"
    },
    "3326": {
      "branch": 128,
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3327": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3329": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3338": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3341": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3343": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3344": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "ADD",
      "path": "7"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3350": {
      "op": "DUP3"
    },
    "3351": {
      "op": "ADD"
    },
    "3352": {
      "op": "MSTORE"
    },
    "3353": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3388": {
      "op": "DUP3"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "MSTORE"
    },
    "3391": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3407": {
      "op": "DUP3"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "op": "MSTORE"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3412": {
      "op": "ADD"
    },
    "3413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "3416": {
      "op": "JUMP"
    },
    "3417": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "op": "SUB"
    },
    "3427": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "AND",
      "path": "7",
      "statement": 34
    },
    "3428": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3430": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3431": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3432": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3433": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2593
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3442": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3443": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3444": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3445": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3446": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3448": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "SUB"
    },
    "3457": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3458": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3459": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3460": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9F"
    },
    "3463": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3464": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3466": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3473": {
      "op": "SHL"
    },
    "3474": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3478": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x688"
    },
    "3482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21E6"
    },
    "3486": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3487": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3488": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0xDA9"
    },
    "3491": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3493": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15AA"
    },
    "3496": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3497": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3498": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3499": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3500": {
      "fn": "ERC721.symbol",
      "offset": [
        3257,
        3270
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "3502": {
      "fn": "ERC721.symbol",
      "offset": [
        3289,
        3296
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 36,
      "value": "0x1"
    },
    "3504": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3505": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3506": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x590"
    },
    "3509": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3510": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x207F"
    },
    "3513": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        3282,
        3296
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3514": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5051,
        5157
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3515": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3517": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3524": {
      "op": "SHL"
    },
    "3525": {
      "op": "SUB"
    },
    "3526": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3527": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3528": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3529": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE4"
    },
    "3532": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3535": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3542": {
      "op": "SHL"
    },
    "3543": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3544": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3545": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3547": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3548": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x688"
    },
    "3551": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3552": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21E6"
    },
    "3555": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3556": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3557": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5124,
        5135
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 37,
      "value": "0x10"
    },
    "3559": {
      "fn": "NFT.setRoyalityFee",
      "offset": [
        5124,
        5150
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3560": {
      "fn": "NFT.setRoyalityFee",
      "jump": "o",
      "offset": [
        5051,
        5157
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3561": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5156,
        5208
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 38,
      "value": "0xC73"
    },
    "3565": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3566": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5189,
        5197
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5199,
        5207
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5156,
        5174
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15FC"
    },
    "3571": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        5156,
        5208
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3572": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3573": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x11"
    },
    "3575": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3576": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3578": {
      "fn": "NFT.transferable",
      "offset": [
        1376,
        1389
      ],
      "op": "AND",
      "path": "13"
    },
    "3579": {
      "offset": [
        5224,
        5246
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3580": {
      "fn": "NFT.transferable",
      "offset": [
        5224,
        5246
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3581": {
      "offset": [
        5242,
        5246
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3583": {
      "offset": [
        5224,
        5246
      ],
      "op": "EQ",
      "path": "13"
    },
    "3584": {
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE1B"
    },
    "3587": {
      "offset": [
        5216,
        5280
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3588": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3590": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3591": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3597": {
      "op": "SHL"
    },
    "3598": {
      "offset": [
        5216,
        5280
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3599": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3600": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3602": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "ADD",
      "path": "13"
    },
    "3603": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x688"
    },
    "3606": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3607": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2148"
    },
    "3610": {
      "fn": "NFT.transferable",
      "jump": "i",
      "offset": [
        5216,
        5280
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3611": {
      "fn": "NFT.transferable",
      "offset": [
        5216,
        5280
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3612": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4103,
        4144
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 39,
      "value": "0xE25"
    },
    "3615": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3616": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4136,
        4143
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3617": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4103,
        4121
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1308"
    },
    "3620": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        4103,
        4144
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3621": {
      "branch": 118,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4103,
        4144
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3622": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE41"
    },
    "3625": {
      "branch": 118,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3626": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3628": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3629": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3635": {
      "op": "SHL"
    },
    "3636": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3637": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3638": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3640": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "ADD",
      "path": "13"
    },
    "3641": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x688"
    },
    "3644": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3645": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x217F"
    },
    "3648": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        4082,
        4219
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3649": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4082,
        4219
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3650": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4234,
        4243
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "3651": {
      "branch": 119,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4234,
        4247
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3652": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4230,
        4552
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF1F"
    },
    "3655": {
      "branch": 119,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4230,
        4552
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3656": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4263,
        4279
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3658": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4310,
        4313
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "3660": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4295,
        4306
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x10"
    },
    "3662": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4295,
        4306
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3663": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4283,
        4292
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "3664": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4283,
        4306
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE59"
    },
    "3667": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4283,
        4306
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3668": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4283,
        4306
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3669": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4283,
        4306
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x20D0"
    },
    "3672": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        4283,
        4306
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3673": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4283,
        4306
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3674": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4282,
        4313
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE63"
    },
    "3677": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4282,
        4313
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3678": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4282,
        4313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3679": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4282,
        4313
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2105"
    },
    "3682": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        4282,
        4313
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3683": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4282,
        4313
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3684": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4263,
        4313
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3685": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4263,
        4313
      ],
      "op": "POP",
      "path": "13"
    },
    "3686": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4327,
        4349
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 40,
      "value": "0xE6E"
    },
    "3689": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4340,
        4348
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3690": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4327,
        4339
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x128E"
    },
    "3693": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        4327,
        4349
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3694": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4327,
        4349
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3695": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4365,
        4378
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3703": {
      "op": "SHL"
    },
    "3704": {
      "op": "SUB"
    },
    "3705": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4402
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3706": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4402
      ],
      "op": "AND",
      "path": "13"
    },
    "3707": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4410,
        4430
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xE84"
    },
    "3710": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4422,
        4430
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3711": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4410,
        4419
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "3712": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4410,
        4430
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2119"
    },
    "3715": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        4410,
        4430
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3716": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4410,
        4430
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3717": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3719": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3720": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3722": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3723": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3724": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3725": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP6",
      "path": "13"
    },
    "3726": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP8",
      "path": "13"
    },
    "3727": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "GAS",
      "path": "13"
    },
    "3728": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "CALL",
      "path": "13"
    },
    "3729": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3730": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "POP",
      "path": "13"
    },
    "3731": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "POP",
      "path": "13"
    },
    "3732": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "POP",
      "path": "13"
    },
    "3733": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3734": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3735": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3737": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3738": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "EQ",
      "path": "13"
    },
    "3739": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEC0"
    },
    "3742": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3743": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3745": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3746": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3747": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "POP",
      "path": "13"
    },
    "3748": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3750": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "NOT",
      "path": "13"
    },
    "3751": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "3753": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3754": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "ADD",
      "path": "13"
    },
    "3755": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "AND",
      "path": "13"
    },
    "3756": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3757": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "ADD",
      "path": "13"
    },
    "3758": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3760": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3761": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3762": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3763": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3764": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "3765": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3767": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3769": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3770": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "ADD",
      "path": "13"
    },
    "3771": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "3772": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEC5"
    },
    "3775": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3776": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3777": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "3779": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3780": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "POP",
      "path": "13"
    },
    "3781": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3782": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4384,
        4465
      ],
      "op": "POP",
      "path": "13"
    },
    "3783": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4364,
        4465
      ],
      "op": "POP",
      "path": "13"
    },
    "3784": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4364,
        4465
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3785": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4364,
        4465
      ],
      "op": "POP",
      "path": "13"
    },
    "3786": {
      "branch": 120,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4487,
        4495
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 41
    },
    "3787": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4479,
        4496
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xED3"
    },
    "3790": {
      "branch": 120,
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4479,
        4496
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3791": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4479,
        4496
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3793": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4479,
        4496
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3794": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4479,
        4496
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3795": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4479,
        4496
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3796": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 42,
      "value": "0x40"
    },
    "3798": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3799": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "op": "SUB"
    },
    "3808": {
      "op": "DUP9"
    },
    "3809": {
      "op": "DUP2"
    },
    "3810": {
      "op": "AND"
    },
    "3811": {
      "op": "DUP3"
    },
    "3812": {
      "op": "MSTORE"
    },
    "3813": {
      "op": "DUP8"
    },
    "3814": {
      "op": "AND"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3817": {
      "op": "DUP3"
    },
    "3818": {
      "op": "ADD"
    },
    "3819": {
      "op": "MSTORE"
    },
    "3820": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4531,
        4540
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "3821": {
      "op": "DUP2"
    },
    "3822": {
      "op": "DUP4"
    },
    "3823": {
      "op": "ADD"
    },
    "3824": {
      "op": "MSTORE"
    },
    "3825": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3826": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3827": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x3F3483D0995DB4C081E0101EF6753BEF457833C20605CD871DE61DCB48085A9A"
    },
    "3860": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3861": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3862": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3863": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "SUB",
      "path": "13"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3866": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "ADD",
      "path": "13"
    },
    "3867": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3868": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4516,
        4541
      ],
      "op": "LOG1",
      "path": "13"
    },
    "3869": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4249,
        4552
      ],
      "op": "POP",
      "path": "13"
    },
    "3870": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4249,
        4552
      ],
      "op": "POP",
      "path": "13"
    },
    "3871": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4230,
        4552
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3872": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4562,
        4601
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 43,
      "value": "0xF2B"
    },
    "3875": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4576,
        4580
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3876": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4582,
        4584
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3877": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3878": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4595,
        4600
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3879": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4562,
        4575
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16CB"
    },
    "3882": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        4562,
        4601
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3883": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        4562,
        4601
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3884": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "POP",
      "path": "13"
    },
    "3885": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "POP",
      "path": "13"
    },
    "3886": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "POP",
      "path": "13"
    },
    "3887": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        3906,
        4608
      ],
      "op": "POP",
      "path": "13"
    },
    "3888": {
      "fn": "NFT.safeTransferFrom",
      "jump": "o",
      "offset": [
        3906,
        4608
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3889": {
      "offset": [
        348,
        385
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3890": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE"
    },
    "3892": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3893": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3894": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF3E"
    },
    "3897": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3898": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x207F"
    },
    "3901": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        348,
        385
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3902": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3903": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3904": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3906": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "3907": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3909": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3910": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3911": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DIV",
      "path": "13"
    },
    "3912": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "MUL",
      "path": "13"
    },
    "3913": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3915": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "3916": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3918": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3919": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3920": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3921": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "3922": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3924": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3925": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3926": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3927": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3928": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3929": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3930": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3931": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3932": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3934": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "3935": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3936": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3937": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3938": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF6A"
    },
    "3941": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3942": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x207F"
    },
    "3945": {
      "fn": "NFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        348,
        385
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3946": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3947": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3948": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3949": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFB7"
    },
    "3952": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3953": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3954": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "3956": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "LT",
      "path": "13"
    },
    "3957": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF8C"
    },
    "3960": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3961": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "3964": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3965": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3966": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3967": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DIV",
      "path": "13"
    },
    "3968": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "MUL",
      "path": "13"
    },
    "3969": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3970": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3971": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3972": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3974": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "3975": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3976": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFB7"
    },
    "3979": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3980": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3981": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3982": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "3983": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3984": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3985": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3987": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3988": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3990": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3992": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3993": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3994": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3995": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3996": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3997": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3998": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3999": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4000": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4002": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "4003": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4004": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4006": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "4007": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4008": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4009": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "GT",
      "path": "13"
    },
    "4010": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF9A"
    },
    "4013": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4014": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4015": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4016": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SUB",
      "path": "13"
    },
    "4017": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "4019": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "AND",
      "path": "13"
    },
    "4020": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4021": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "ADD",
      "path": "13"
    },
    "4022": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4023": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4024": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "POP",
      "path": "13"
    },
    "4025": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "POP",
      "path": "13"
    },
    "4026": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "POP",
      "path": "13"
    },
    "4027": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "POP",
      "path": "13"
    },
    "4028": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "POP",
      "path": "13"
    },
    "4029": {
      "fn": "NFT.safeTransferFrom",
      "offset": [
        348,
        385
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4030": {
      "fn": "NFT.safeTransferFrom",
      "jump": "o",
      "offset": [
        348,
        385
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4031": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4032": {
      "fn": "ERC721._exists",
      "offset": [
        8173,
        8177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4034": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4035": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4036": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4037": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4039": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4041": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4042": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4044": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4045": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4046": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4047": {
      "fn": "NFT.tokenURI",
      "offset": [
        2100,
        2113
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "4049": {
      "fn": "NFT.tokenURI",
      "offset": [
        2100,
        2113
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4056": {
      "op": "SHL"
    },
    "4057": {
      "op": "SUB"
    },
    "4058": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "AND",
      "path": "7"
    },
    "4059": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 44,
      "value": "0x103E"
    },
    "4062": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4063": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4065": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4066": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4072": {
      "op": "SHL"
    },
    "4073": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4074": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4077": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4079": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4080": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "ADD",
      "path": "13"
    },
    "4081": {
      "op": "MSTORE"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4086": {
      "op": "DUP3"
    },
    "4087": {
      "op": "ADD"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4124": {
      "op": "DUP3"
    },
    "4125": {
      "op": "ADD"
    },
    "4126": {
      "op": "MSTORE"
    },
    "4127": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4145": {
      "op": "SHL"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4148": {
      "op": "DUP3"
    },
    "4149": {
      "op": "ADD"
    },
    "4150": {
      "op": "MSTORE"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4153": {
      "op": "ADD"
    },
    "4154": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x688"
    },
    "4157": {
      "op": "JUMP"
    },
    "4158": {
      "fn": "NFT.tokenURI",
      "offset": [
        2129,
        2239
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4159": {
      "fn": "NFT.tokenURI",
      "offset": [
        2250,
        2278
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4161": {
      "fn": "NFT.tokenURI",
      "offset": [
        2281,
        2291
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1048"
    },
    "4164": {
      "fn": "NFT.tokenURI",
      "offset": [
        2281,
        2289
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16FE"
    },
    "4167": {
      "fn": "NFT.tokenURI",
      "jump": "i",
      "offset": [
        2281,
        2291
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4168": {
      "fn": "NFT.tokenURI",
      "offset": [
        2281,
        2291
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4169": {
      "fn": "NFT.tokenURI",
      "offset": [
        2250,
        2291
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4170": {
      "fn": "NFT.tokenURI",
      "offset": [
        2250,
        2291
      ],
      "op": "POP",
      "path": "13"
    },
    "4171": {
      "fn": "NFT.tokenURI",
      "offset": [
        2351,
        2352
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 45,
      "value": "0x0"
    },
    "4173": {
      "fn": "NFT.tokenURI",
      "offset": [
        2326,
        2340
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4174": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2348
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4175": {
      "branch": 121,
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2352
      ],
      "op": "GT",
      "path": "13"
    },
    "4176": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1068"
    },
    "4179": {
      "branch": 121,
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4180": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4182": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4183": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4184": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4186": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "ADD",
      "path": "13"
    },
    "4187": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4189": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4190": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4191": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4193": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4194": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4195": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "POP",
      "path": "13"
    },
    "4196": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1096"
    },
    "4199": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4200": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4201": {
      "fn": "NFT.tokenURI",
      "offset": [
        2441,
        2455
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4202": {
      "fn": "NFT.tokenURI",
      "offset": [
        2481,
        2499
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1072"
    },
    "4205": {
      "fn": "NFT.tokenURI",
      "offset": [
        2481,
        2488
      ],
      "op": "DUP5",
      "path": "13"
    },
    "4206": {
      "fn": "NFT.tokenURI",
      "offset": [
        2481,
        2497
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x170D"
    },
    "4209": {
      "fn": "NFT.tokenURI",
      "jump": "i",
      "offset": [
        2481,
        2499
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4210": {
      "fn": "NFT.tokenURI",
      "offset": [
        2481,
        2499
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4211": {
      "fn": "NFT.tokenURI",
      "offset": [
        2525,
        2538
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE"
    },
    "4213": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4215": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4216": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4218": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "ADD",
      "path": "13"
    },
    "4219": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1086"
    },
    "4222": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "4223": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4224": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4225": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4226": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x221B"
    },
    "4229": {
      "fn": "NFT.tokenURI",
      "jump": "i",
      "offset": [
        2399,
        2560
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4230": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4231": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4233": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4234": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4236": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4237": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4238": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "SUB",
      "path": "13"
    },
    "4239": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "SUB",
      "path": "13"
    },
    "4240": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4241": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4242": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4243": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4245": {
      "fn": "NFT.tokenURI",
      "offset": [
        2399,
        2560
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4246": {
      "fn": "NFT.tokenURI",
      "offset": [
        2320,
        2599
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4247": {
      "fn": "NFT.tokenURI",
      "offset": [
        2301,
        2599
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "4248": {
      "fn": "NFT.tokenURI",
      "offset": [
        1987,
        2606
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4249": {
      "op": "POP"
    },
    "4250": {
      "op": "POP"
    },
    "4251": {
      "op": "POP"
    },
    "4252": {
      "fn": "NFT.tokenURI",
      "jump": "o",
      "offset": [
        1987,
        2606
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4253": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4254": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4256": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4257": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1061,
        1065
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4259": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1061,
        1065
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4266": {
      "op": "SHL"
    },
    "4267": {
      "op": "SUB"
    },
    "4268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4269": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4270": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4271": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10CA"
    },
    "4274": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4284": {
      "op": "SHL"
    },
    "4285": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4286": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4287": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4290": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x688"
    },
    "4293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21E6"
    },
    "4297": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4298": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4299": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1081,
        1094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x11"
    },
    "4301": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1081,
        1094
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4302": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1081,
        1094
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "4304": {
      "branch": 122,
      "fn": "NFT.toggleTransferable",
      "offset": [
        1081,
        1094
      ],
      "op": "AND",
      "path": "13"
    },
    "4305": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1077,
        1193
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4306": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1077,
        1193
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10E4"
    },
    "4309": {
      "branch": 122,
      "fn": "NFT.toggleTransferable",
      "offset": [
        1077,
        1193
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4310": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1110,
        1123
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 46,
      "value": "0x11"
    },
    "4312": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1110,
        1131
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4313": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1110,
        1131
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4316": {
      "op": "NOT"
    },
    "4317": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1110,
        1131
      ],
      "op": "AND",
      "path": "13"
    },
    "4318": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1110,
        1131
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4319": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1110,
        1131
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4320": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1077,
        1193
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10F2"
    },
    "4323": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1077,
        1193
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4324": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1077,
        1193
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4325": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1162,
        1175
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 47,
      "value": "0x11"
    },
    "4327": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1162,
        1182
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4328": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1162,
        1182
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4331": {
      "op": "NOT"
    },
    "4332": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1162,
        1182
      ],
      "op": "AND",
      "path": "13"
    },
    "4333": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1178,
        1182
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4335": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1162,
        1182
      ],
      "op": "OR",
      "path": "13"
    },
    "4336": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1162,
        1182
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4337": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1162,
        1182
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4338": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1077,
        1193
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4339": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1226,
        1239
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 48,
      "value": "0x11"
    },
    "4341": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1226,
        1239
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4342": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4344": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4345": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1226,
        1239
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "4347": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1226,
        1239
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4348": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1226,
        1239
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4349": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1226,
        1239
      ],
      "op": "AND",
      "path": "13"
    },
    "4350": {
      "op": "ISZERO"
    },
    "4351": {
      "op": "ISZERO"
    },
    "4352": {
      "op": "DUP2"
    },
    "4353": {
      "op": "MSTORE"
    },
    "4354": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x40CEC7445E6AF82A2C1482720F9CDE27EF6CC85136E8B7ABD3EFD8C6A0EE566F"
    },
    "4387": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4390": {
      "op": "ADD"
    },
    "4391": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4393": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4394": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4395": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4396": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "SUB",
      "path": "13"
    },
    "4397": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4398": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1207,
        1240
      ],
      "op": "LOG1",
      "path": "13"
    },
    "4399": {
      "op": "POP"
    },
    "4400": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1257,
        1270
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 49,
      "value": "0x11"
    },
    "4402": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1257,
        1270
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4403": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1257,
        1270
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "4405": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1257,
        1270
      ],
      "op": "AND",
      "path": "13"
    },
    "4406": {
      "fn": "NFT.toggleTransferable",
      "offset": [
        1003,
        1277
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4407": {
      "fn": "NFT.toggleTransferable",
      "jump": "o",
      "offset": [
        1003,
        1277
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4409": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4411": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4418": {
      "op": "SHL"
    },
    "4419": {
      "op": "SUB"
    },
    "4420": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4421": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4422": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4423": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1162"
    },
    "4426": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4430": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4436": {
      "op": "SHL"
    },
    "4437": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4438": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4439": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4441": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4442": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x688"
    },
    "4445": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4446": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21E6"
    },
    "4449": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4450": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4457": {
      "op": "SHL"
    },
    "4458": {
      "op": "SUB"
    },
    "4459": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 50
    },
    "4460": {
      "branch": 142,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "4461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C7"
    },
    "4464": {
      "branch": 142,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4467": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4476": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4479": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4481": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4482": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "4483": {
      "op": "MSTORE"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4488": {
      "op": "DUP3"
    },
    "4489": {
      "op": "ADD"
    },
    "4490": {
      "op": "MSTORE"
    },
    "4491": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4526": {
      "op": "DUP3"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "MSTORE"
    },
    "4529": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4538": {
      "op": "SHL"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4541": {
      "op": "DUP3"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "MSTORE"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4546": {
      "op": "ADD"
    },
    "4547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x688"
    },
    "4550": {
      "op": "JUMP"
    },
    "4551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0x8B4"
    },
    "4555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15AA"
    },
    "4559": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4560": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4561": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2063,
        2067
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4569": {
      "op": "SHL"
    },
    "4570": {
      "op": "SUB"
    },
    "4571": {
      "op": "NOT"
    },
    "4572": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2142
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 52
    },
    "4573": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2142
      ],
      "op": "AND",
      "path": "7"
    },
    "4574": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4581": {
      "op": "SHL"
    },
    "4582": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2142
      ],
      "op": "EQ",
      "path": "7"
    },
    "4583": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2142
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4584": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2206
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1201"
    },
    "4587": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2206
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4595": {
      "op": "SHL"
    },
    "4596": {
      "op": "SUB"
    },
    "4597": {
      "op": "NOT"
    },
    "4598": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2158,
        2206
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4599": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2158,
        2206
      ],
      "op": "AND",
      "path": "7"
    },
    "4600": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2158,
        2206
      ],
      "op": "EQ",
      "path": "7"
    },
    "4609": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2206
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4610": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2258
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4611": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2258
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57B"
    },
    "4614": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2258
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4615": {
      "op": "POP"
    },
    "4616": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4623": {
      "op": "SHL"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4630": {
      "op": "SHL"
    },
    "4631": {
      "op": "SUB"
    },
    "4632": {
      "op": "NOT"
    },
    "4633": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 53
    },
    "4634": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "5"
    },
    "4635": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "5"
    },
    "4636": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2222,
        2258
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57B"
    },
    "4639": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4640": {
      "fn": "ERC721._approve",
      "offset": [
        12087,
        12258
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4641": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 54,
      "value": "0x0"
    },
    "4643": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4644": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4645": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4646": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4648": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4650": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4651": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4653": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4654": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4655": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4656": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4663": {
      "op": "SHL"
    },
    "4664": {
      "op": "SUB"
    },
    "4665": {
      "op": "NOT"
    },
    "4666": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "AND",
      "path": "7"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4673": {
      "op": "SHL"
    },
    "4674": {
      "op": "SUB"
    },
    "4675": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4676": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "AND",
      "path": "7"
    },
    "4677": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4678": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4679": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "OR",
      "path": "7"
    },
    "4680": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4681": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4682": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4683": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4684": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4685": {
      "fn": "ERC721._approve",
      "offset": [
        12214,
        12237
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 55,
      "value": "0x1255"
    },
    "4688": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4689": {
      "fn": "ERC721._approve",
      "offset": [
        12214,
        12228
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC77"
    },
    "4692": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        12214,
        12237
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4693": {
      "fn": "ERC721._approve",
      "offset": [
        12214,
        12237
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4700": {
      "op": "SHL"
    },
    "4701": {
      "op": "SUB"
    },
    "4702": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "AND",
      "path": "7"
    },
    "4703": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4736": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4738": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4739": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4741": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4742": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4743": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4744": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "SUB",
      "path": "7"
    },
    "4745": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4746": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "LOG4",
      "path": "7"
    },
    "4747": {
      "fn": "ERC721._approve",
      "offset": [
        12087,
        12258
      ],
      "op": "POP",
      "path": "7"
    },
    "4748": {
      "fn": "ERC721._approve",
      "offset": [
        12087,
        12258
      ],
      "op": "POP",
      "path": "7"
    },
    "4749": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        12087,
        12258
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4750": {
      "fn": "NFT._payRoyality",
      "offset": [
        4752,
        4914
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4751": {
      "fn": "NFT._payRoyality",
      "offset": [
        4843,
        4849
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xF"
    },
    "4753": {
      "fn": "NFT._payRoyality",
      "offset": [
        4843,
        4849
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4754": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4756": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4757": {
      "fn": "NFT._payRoyality",
      "offset": [
        4816,
        4829
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4759": {
      "fn": "NFT._payRoyality",
      "offset": [
        4816,
        4829
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4766": {
      "op": "SHL"
    },
    "4767": {
      "op": "SUB"
    },
    "4768": {
      "fn": "NFT._payRoyality",
      "offset": [
        4843,
        4849
      ],
      "op": "AND",
      "path": "13"
    },
    "4769": {
      "fn": "NFT._payRoyality",
      "offset": [
        4843,
        4849
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4770": {
      "fn": "NFT._payRoyality",
      "offset": [
        4863,
        4875
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4771": {
      "fn": "NFT._payRoyality",
      "offset": [
        4863,
        4875
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4772": {
      "fn": "NFT._payRoyality",
      "offset": [
        4816,
        4829
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4773": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4774": {
      "fn": "NFT._payRoyality",
      "offset": [
        4816,
        4829
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4775": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4776": {
      "fn": "NFT._payRoyality",
      "offset": [
        4863,
        4875
      ],
      "op": "DUP6",
      "path": "13"
    },
    "4777": {
      "fn": "NFT._payRoyality",
      "offset": [
        4843,
        4849
      ],
      "op": "DUP8",
      "path": "13"
    },
    "4778": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "GAS",
      "path": "13"
    },
    "4779": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "CALL",
      "path": "13"
    },
    "4780": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4781": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "POP",
      "path": "13"
    },
    "4782": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "POP",
      "path": "13"
    },
    "4783": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "POP",
      "path": "13"
    },
    "4784": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4785": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4786": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4788": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4789": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "EQ",
      "path": "13"
    },
    "4790": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12DB"
    },
    "4793": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4794": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4796": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4797": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4798": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "POP",
      "path": "13"
    },
    "4799": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "4801": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "NOT",
      "path": "13"
    },
    "4802": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3F"
    },
    "4804": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4805": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "ADD",
      "path": "13"
    },
    "4806": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "AND",
      "path": "13"
    },
    "4807": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4808": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "ADD",
      "path": "13"
    },
    "4809": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4811": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4812": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4813": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4814": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4815": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "RETURNDATASIZE",
      "path": "13"
    },
    "4816": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4818": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4820": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "DUP5",
      "path": "13"
    },
    "4821": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "ADD",
      "path": "13"
    },
    "4822": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "RETURNDATACOPY",
      "path": "13"
    },
    "4823": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12E0"
    },
    "4826": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4827": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4828": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "4830": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4831": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "POP",
      "path": "13"
    },
    "4832": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4833": {
      "fn": "NFT._payRoyality",
      "offset": [
        4835,
        4880
      ],
      "op": "POP",
      "path": "13"
    },
    "4834": {
      "fn": "NFT._payRoyality",
      "offset": [
        4815,
        4880
      ],
      "op": "POP",
      "path": "13"
    },
    "4835": {
      "fn": "NFT._payRoyality",
      "offset": [
        4815,
        4880
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4836": {
      "fn": "NFT._payRoyality",
      "offset": [
        4815,
        4880
      ],
      "op": "POP",
      "path": "13"
    },
    "4837": {
      "branch": 123,
      "fn": "NFT._payRoyality",
      "offset": [
        4898,
        4906
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 56
    },
    "4838": {
      "fn": "NFT._payRoyality",
      "offset": [
        4890,
        4907
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC73"
    },
    "4841": {
      "branch": 123,
      "fn": "NFT._payRoyality",
      "offset": [
        4890,
        4907
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4842": {
      "fn": "NFT._payRoyality",
      "offset": [
        4890,
        4907
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4844": {
      "fn": "NFT._payRoyality",
      "offset": [
        4890,
        4907
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4845": {
      "fn": "NFT._payRoyality",
      "offset": [
        4890,
        4907
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4846": {
      "fn": "ERC721._safeMint",
      "offset": [
        9159,
        9267
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4847": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 57,
      "value": "0xC73"
    },
    "4850": {
      "fn": "ERC721._safeMint",
      "offset": [
        9244,
        9246
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4851": {
      "fn": "ERC721._safeMint",
      "offset": [
        9248,
        9255
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4852": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4854": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4855": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4856": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4858": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "ADD",
      "path": "7"
    },
    "4859": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4861": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4862": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4863": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4865": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4866": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4867": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9260
      ],
      "op": "POP",
      "path": "7"
    },
    "4868": {
      "fn": "ERC721._safeMint",
      "offset": [
        9234,
        9243
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x180B"
    },
    "4871": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        9234,
        9260
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4872": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8391,
        8829
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4873": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8516,
        8520
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4875": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4876": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4877": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4878": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4880": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4882": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4883": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4885": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4886": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4887": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4894": {
      "op": "SHL"
    },
    "4895": {
      "op": "SUB"
    },
    "4896": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "AND",
      "path": "7"
    },
    "4897": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 58,
      "value": "0x1381"
    },
    "4900": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4901": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4903": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4910": {
      "op": "SHL"
    },
    "4911": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4912": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4915": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4917": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4918": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "ADD",
      "path": "7"
    },
    "4919": {
      "op": "MSTORE"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4924": {
      "op": "DUP3"
    },
    "4925": {
      "op": "ADD"
    },
    "4926": {
      "op": "MSTORE"
    },
    "4927": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4962": {
      "op": "DUP3"
    },
    "4963": {
      "op": "ADD"
    },
    "4964": {
      "op": "MSTORE"
    },
    "4965": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "4980": {
      "op": "SHL"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4983": {
      "op": "DUP3"
    },
    "4984": {
      "op": "ADD"
    },
    "4985": {
      "op": "MSTORE"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4988": {
      "op": "ADD"
    },
    "4989": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "4992": {
      "op": "JUMP"
    },
    "4993": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4994": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8653,
        8666
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4996": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8669,
        8692
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x138C"
    },
    "4999": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8684,
        8691
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5000": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8669,
        8683
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC77"
    },
    "5003": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8669,
        8692
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5004": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8669,
        8692
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5005": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8653,
        8692
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5006": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8653,
        8692
      ],
      "op": "POP",
      "path": "7"
    },
    "5007": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8721,
        8726
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 59
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5014": {
      "op": "SHL"
    },
    "5015": {
      "op": "SUB"
    },
    "5016": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8726
      ],
      "op": "AND",
      "path": "7"
    },
    "5017": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8717
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5024": {
      "op": "SHL"
    },
    "5025": {
      "op": "SUB"
    },
    "5026": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8726
      ],
      "op": "AND",
      "path": "7"
    },
    "5027": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8726
      ],
      "op": "EQ",
      "path": "7"
    },
    "5028": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5029": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13C7"
    },
    "5032": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5033": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "POP",
      "path": "7"
    },
    "5034": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8766,
        8773
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5041": {
      "op": "SHL"
    },
    "5042": {
      "op": "SUB"
    },
    "5043": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8773
      ],
      "op": "AND",
      "path": "7"
    },
    "5044": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8762
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13BC"
    },
    "5047": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8754,
        8761
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5048": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8753
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x613"
    },
    "5051": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8742,
        8762
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5052": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8762
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5059": {
      "op": "SHL"
    },
    "5060": {
      "op": "SUB"
    },
    "5061": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8773
      ],
      "op": "AND",
      "path": "7"
    },
    "5062": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8773
      ],
      "op": "EQ",
      "path": "7"
    },
    "5063": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5064": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8821
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5065": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8821
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F7"
    },
    "5068": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8821
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5076": {
      "op": "SHL"
    },
    "5077": {
      "op": "SUB"
    },
    "5078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5080": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "AND",
      "path": "7"
    },
    "5081": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5418,
        5422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5083": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5084": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5085": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5086": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5463
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "5088": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5090": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5091": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5092": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5093": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5095": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5096": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5097": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5098": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5099": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "DUP9",
      "path": "7"
    },
    "5100": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "AND",
      "path": "7"
    },
    "5101": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5102": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5103": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5104": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5105": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5106": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5107": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5108": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "5110": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "AND",
      "path": "7"
    },
    "5111": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8789,
        8821
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5112": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8702,
        8822
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5113": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8391,
        8829
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5114": {
      "op": "POP"
    },
    "5115": {
      "op": "POP"
    },
    "5116": {
      "op": "POP"
    },
    "5117": {
      "op": "POP"
    },
    "5118": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        8391,
        8829
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5119": {
      "fn": "ERC721._transfer",
      "offset": [
        11382,
        11976
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5120": {
      "fn": "ERC721._transfer",
      "offset": [
        11549,
        11553
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 60
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5127": {
      "op": "SHL"
    },
    "5128": {
      "op": "SUB"
    },
    "5129": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11553
      ],
      "op": "AND",
      "path": "7"
    },
    "5130": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11545
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1412"
    },
    "5133": {
      "fn": "ERC721._transfer",
      "offset": [
        11537,
        11544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5134": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11536
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC77"
    },
    "5137": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11522,
        11545
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5138": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11545
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5145": {
      "op": "SHL"
    },
    "5146": {
      "op": "SUB"
    },
    "5147": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11553
      ],
      "op": "AND",
      "path": "7"
    },
    "5148": {
      "branch": 129,
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11553
      ],
      "op": "EQ",
      "path": "7"
    },
    "5149": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x147A"
    },
    "5152": {
      "branch": 129,
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5153": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5155": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5162": {
      "op": "SHL"
    },
    "5163": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5164": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5167": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5169": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5170": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "ADD",
      "path": "7"
    },
    "5171": {
      "op": "MSTORE"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5176": {
      "op": "DUP3"
    },
    "5177": {
      "op": "ADD"
    },
    "5178": {
      "op": "MSTORE"
    },
    "5179": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5214": {
      "op": "DUP3"
    },
    "5215": {
      "op": "ADD"
    },
    "5216": {
      "op": "MSTORE"
    },
    "5217": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5229": {
      "op": "SHL"
    },
    "5230": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5232": {
      "op": "DUP3"
    },
    "5233": {
      "op": "ADD"
    },
    "5234": {
      "op": "MSTORE"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "5241": {
      "op": "JUMP"
    },
    "5242": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5249": {
      "op": "SHL"
    },
    "5250": {
      "op": "SUB"
    },
    "5251": {
      "fn": "ERC721._transfer",
      "offset": [
        11638,
        11654
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 61
    },
    "5252": {
      "branch": 130,
      "fn": "ERC721._transfer",
      "offset": [
        11638,
        11654
      ],
      "op": "AND",
      "path": "7"
    },
    "5253": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14DC"
    },
    "5256": {
      "branch": 130,
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5257": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5259": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5266": {
      "op": "SHL"
    },
    "5267": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5268": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5271": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5273": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5274": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "ADD",
      "path": "7"
    },
    "5275": {
      "op": "MSTORE"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5278": {
      "op": "DUP1"
    },
    "5279": {
      "op": "DUP3"
    },
    "5280": {
      "op": "ADD"
    },
    "5281": {
      "op": "MSTORE"
    },
    "5282": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5317": {
      "op": "DUP3"
    },
    "5318": {
      "op": "ADD"
    },
    "5319": {
      "op": "MSTORE"
    },
    "5320": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5327": {
      "op": "SHL"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5330": {
      "op": "DUP3"
    },
    "5331": {
      "op": "ADD"
    },
    "5332": {
      "op": "MSTORE"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5335": {
      "op": "ADD"
    },
    "5336": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "5339": {
      "op": "JUMP"
    },
    "5340": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5341": {
      "fn": "ERC721._transfer",
      "offset": [
        11706,
        11745
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 62,
      "value": "0x14E7"
    },
    "5344": {
      "fn": "ERC721._transfer",
      "offset": [
        11727,
        11731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5345": {
      "fn": "ERC721._transfer",
      "offset": [
        11733,
        11735
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5346": {
      "fn": "ERC721._transfer",
      "offset": [
        11737,
        11744
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5347": {
      "fn": "ERC721._transfer",
      "offset": [
        11706,
        11726
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x183E"
    },
    "5350": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11706,
        11745
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5351": {
      "fn": "ERC721._transfer",
      "offset": [
        11706,
        11745
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5352": {
      "fn": "ERC721._transfer",
      "offset": [
        11807,
        11836
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 63,
      "value": "0x14F2"
    },
    "5355": {
      "fn": "ERC721._transfer",
      "offset": [
        11824,
        11825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5357": {
      "fn": "ERC721._transfer",
      "offset": [
        11828,
        11835
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5358": {
      "fn": "ERC721._transfer",
      "offset": [
        11807,
        11815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1220"
    },
    "5361": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11807,
        11836
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5362": {
      "fn": "ERC721._transfer",
      "offset": [
        11807,
        11836
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5369": {
      "op": "SHL"
    },
    "5370": {
      "op": "SUB"
    },
    "5371": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 64
    },
    "5372": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "AND",
      "path": "7"
    },
    "5373": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5375": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5376": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5377": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5378": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "5380": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5382": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5383": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5385": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5386": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5387": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5388": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5389": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "5391": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11867
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5392": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5393": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x151B"
    },
    "5396": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5397": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11867
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5398": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5399": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2119"
    },
    "5402": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11847,
        11867
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5403": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5404": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5405": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5406": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5407": {
      "op": "POP"
    },
    "5408": {
      "op": "POP"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5415": {
      "op": "SHL"
    },
    "5416": {
      "op": "SUB"
    },
    "5417": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 65
    },
    "5418": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "AND",
      "path": "7"
    },
    "5419": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5421": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5422": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5423": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5424": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11886
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "5426": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5428": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5429": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5431": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5432": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5433": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5434": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5435": {
      "fn": "ERC721._transfer",
      "offset": [
        11894,
        11895
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "5437": {
      "fn": "ERC721._transfer",
      "offset": [
        11894,
        11895
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5438": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5439": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1549"
    },
    "5442": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5443": {
      "fn": "ERC721._transfer",
      "offset": [
        11894,
        11895
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5444": {
      "fn": "ERC721._transfer",
      "offset": [
        11894,
        11895
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5445": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2130"
    },
    "5448": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11877,
        11895
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5449": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5450": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5451": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5452": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5453": {
      "op": "POP"
    },
    "5454": {
      "op": "POP"
    },
    "5455": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 66,
      "value": "0x0"
    },
    "5457": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5458": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5459": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5460": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11912
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "5462": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5464": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5465": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5467": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5468": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5469": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5470": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5471": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5478": {
      "op": "SHL"
    },
    "5479": {
      "op": "SUB"
    },
    "5480": {
      "op": "NOT"
    },
    "5481": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "AND",
      "path": "7"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5488": {
      "op": "SHL"
    },
    "5489": {
      "op": "SUB"
    },
    "5490": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "DUP7",
      "path": "7"
    },
    "5491": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5492": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "AND",
      "path": "7"
    },
    "5493": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5494": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5495": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "OR",
      "path": "7"
    },
    "5496": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5497": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5498": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5499": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 67
    },
    "5500": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5501": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5502": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "5503": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5504": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "DUP8",
      "path": "7"
    },
    "5505": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "AND",
      "path": "7"
    },
    "5506": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5507": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5540": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5541": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "LOG4",
      "path": "7"
    },
    "5542": {
      "fn": "ERC721._transfer",
      "offset": [
        11382,
        11976
      ],
      "op": "POP",
      "path": "7"
    },
    "5543": {
      "fn": "ERC721._transfer",
      "offset": [
        11382,
        11976
      ],
      "op": "POP",
      "path": "7"
    },
    "5544": {
      "fn": "ERC721._transfer",
      "offset": [
        11382,
        11976
      ],
      "op": "POP",
      "path": "7"
    },
    "5545": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        11382,
        11976
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5546": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5547": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5549": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5557": {
      "op": "SHL"
    },
    "5558": {
      "op": "SUB"
    },
    "5559": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 68
    },
    "5560": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5561": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5568": {
      "op": "SHL"
    },
    "5569": {
      "op": "SUB"
    },
    "5570": {
      "op": "NOT"
    },
    "5571": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5572": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "5573": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5574": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "5575": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5576": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5577": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5578": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 69,
      "value": "0x40"
    },
    "5580": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5581": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5582": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "5583": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5584": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5585": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5586": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5587": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5620": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5621": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5623": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5624": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5625": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "5626": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "5627": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5628": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12393,
        12700
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5629": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12543,
        12551
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 70
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5636": {
      "op": "SHL"
    },
    "5637": {
      "op": "SUB"
    },
    "5638": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12551
      ],
      "op": "AND",
      "path": "7"
    },
    "5639": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12539
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5646": {
      "op": "SHL"
    },
    "5647": {
      "op": "SUB"
    },
    "5648": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12551
      ],
      "op": "AND",
      "path": "7"
    },
    "5649": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12551
      ],
      "op": "EQ",
      "path": "7"
    },
    "5650": {
      "branch": 131,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12551
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5651": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165E"
    },
    "5654": {
      "branch": 131,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5655": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5657": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5664": {
      "op": "SHL"
    },
    "5665": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5666": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5669": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5671": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5672": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "ADD",
      "path": "7"
    },
    "5673": {
      "op": "MSTORE"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5678": {
      "op": "DUP3"
    },
    "5679": {
      "op": "ADD"
    },
    "5680": {
      "op": "MSTORE"
    },
    "5681": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5716": {
      "op": "DUP3"
    },
    "5717": {
      "op": "ADD"
    },
    "5718": {
      "op": "MSTORE"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5721": {
      "op": "ADD"
    },
    "5722": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "5725": {
      "op": "JUMP"
    },
    "5726": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5733": {
      "op": "SHL"
    },
    "5734": {
      "op": "SUB"
    },
    "5735": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 71
    },
    "5736": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5737": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "AND",
      "path": "7"
    },
    "5738": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5742": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5743": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "5745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5747": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5749": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5754": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5756": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP8",
      "path": "7"
    },
    "5757": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "AND",
      "path": "7"
    },
    "5758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5759": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "5762": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5763": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5764": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5765": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5766": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5769": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5772": {
      "op": "NOT"
    },
    "5773": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "AND",
      "path": "7"
    },
    "5774": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "DUP7",
      "path": "7"
    },
    "5775": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5776": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "5777": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5778": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "OR",
      "path": "7"
    },
    "5780": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5781": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5782": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5783": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 72
    },
    "5784": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5785": {
      "op": "SWAP2"
    },
    "5786": {
      "op": "DUP3"
    },
    "5787": {
      "op": "MSTORE"
    },
    "5788": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "5821": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5822": {
      "op": "ADD"
    },
    "5823": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5825": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5826": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5827": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5828": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SUB",
      "path": "7"
    },
    "5829": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5830": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "LOG3",
      "path": "7"
    },
    "5831": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12393,
        12700
      ],
      "op": "POP",
      "path": "7"
    },
    "5832": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12393,
        12700
      ],
      "op": "POP",
      "path": "7"
    },
    "5833": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12393,
        12700
      ],
      "op": "POP",
      "path": "7"
    },
    "5834": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        12393,
        12700
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5835": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7464,
        7805
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5836": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7615,
        7643
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 73,
      "value": "0x16D6"
    },
    "5839": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7625,
        7629
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5840": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7631,
        7633
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7635,
        7642
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5842": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7615,
        7624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13FF"
    },
    "5845": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7615,
        7643
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5846": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7615,
        7643
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5847": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7674,
        7722
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 74,
      "value": "0x16E2"
    },
    "5850": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7697,
        7701
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7703,
        7705
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5852": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7707,
        7714
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7716,
        7721
      ],
      "op": "DUP5",
      "path": "7"
    },
    "5854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7674,
        7696
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18F6"
    },
    "5857": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7674,
        7722
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5858": {
      "branch": 132,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7674,
        7722
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5859": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF2B"
    },
    "5862": {
      "branch": 132,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5863": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5865": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5872": {
      "op": "SHL"
    },
    "5873": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5874": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5875": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5877": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "ADD",
      "path": "7"
    },
    "5878": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "5881": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5882": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22DF"
    },
    "5885": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7653,
        7798
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5886": {
      "fn": "NFT._baseURI",
      "offset": [
        4640,
        4746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5887": {
      "fn": "NFT._baseURI",
      "offset": [
        4700,
        4713
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "5889": {
      "fn": "NFT._baseURI",
      "offset": [
        4732,
        4739
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 75,
      "value": "0xD"
    },
    "5891": {
      "fn": "NFT._baseURI",
      "offset": [
        4725,
        4739
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5892": {
      "fn": "NFT._baseURI",
      "offset": [
        4725,
        4739
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5893": {
      "fn": "NFT._baseURI",
      "offset": [
        4725,
        4739
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x590"
    },
    "5896": {
      "fn": "NFT._baseURI",
      "offset": [
        4725,
        4739
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5897": {
      "fn": "NFT._baseURI",
      "offset": [
        4725,
        4739
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x207F"
    },
    "5900": {
      "fn": "NFT._baseURI",
      "jump": "i",
      "offset": [
        4725,
        4739
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5901": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5902": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "5904": {
      "branch": 143,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5905": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1731"
    },
    "5908": {
      "branch": 143,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5909": {
      "op": "POP"
    },
    "5910": {
      "op": "POP"
    },
    "5911": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 76,
      "value": "0x40"
    },
    "5913": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5914": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5915": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5916": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5917": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "4"
    },
    "5918": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5919": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5920": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5921": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5923": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5924": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5932": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5933": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "4"
    },
    "5934": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5935": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5936": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5937": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5938": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5939": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5941": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5942": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5943": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5944": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x175B"
    },
    "5947": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5948": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 77
    },
    "5949": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1745"
    },
    "5952": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5953": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2331"
    },
    "5956": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5957": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5958": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5959": {
      "op": "POP"
    },
    "5960": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 78,
      "value": "0x1754"
    },
    "5963": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5964": {
      "op": "POP"
    },
    "5965": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "5967": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5968": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2105"
    },
    "5971": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5972": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5973": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5974": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "4"
    },
    "5975": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1735"
    },
    "5978": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5979": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5980": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5982": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5983": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5992": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5993": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "4"
    },
    "5994": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5995": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1776"
    },
    "5998": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1776"
    },
    "6002": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EA4"
    },
    "6005": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6006": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6007": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6009": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6010": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6011": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6012": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6013": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6014": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6015": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "6017": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "6018": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "6020": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "4"
    },
    "6021": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "4"
    },
    "6022": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6024": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "6025": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6026": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "6027": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6029": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6030": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6031": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6032": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17A0"
    },
    "6035": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6036": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6038": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6039": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "6040": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6041": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6042": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "6043": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6044": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "4"
    },
    "6045": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "6046": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6047": {
      "op": "POP"
    },
    "6048": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6049": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "4"
    },
    "6050": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6051": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "4"
    },
    "6052": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6053": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6054": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "6055": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13F7"
    },
    "6058": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6059": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 79,
      "value": "0x17B5"
    },
    "6062": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "6064": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6065": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2119"
    },
    "6068": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6069": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6070": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6071": {
      "op": "POP"
    },
    "6072": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 80,
      "value": "0x17C2"
    },
    "6075": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "6077": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "4"
    },
    "6078": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x234C"
    },
    "6081": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6082": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6083": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17CD"
    },
    "6086": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6087": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x30"
    },
    "6089": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2130"
    },
    "6092": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6093": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6094": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF8"
    },
    "6096": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "4"
    },
    "6097": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6098": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6099": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6100": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6101": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6102": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "4"
    },
    "6103": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17E2"
    },
    "6106": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6107": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17E2"
    },
    "6110": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21D0"
    },
    "6113": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6114": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6115": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6117": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "6118": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "6119": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6126": {
      "op": "SHL"
    },
    "6127": {
      "op": "SUB"
    },
    "6128": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "4"
    },
    "6129": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "4"
    },
    "6130": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6131": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6132": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6134": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "4"
    },
    "6135": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6136": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "4"
    },
    "6137": {
      "op": "POP"
    },
    "6138": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 81,
      "value": "0x1804"
    },
    "6141": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "6143": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "4"
    },
    "6144": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2105"
    },
    "6147": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6148": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6149": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "6150": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "4"
    },
    "6151": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17A4"
    },
    "6154": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6155": {
      "fn": "ERC721._safeMint",
      "offset": [
        9488,
        9799
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6156": {
      "fn": "ERC721._safeMint",
      "offset": [
        9613,
        9631
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 82,
      "value": "0x1815"
    },
    "6159": {
      "fn": "ERC721._safeMint",
      "offset": [
        9619,
        9621
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6160": {
      "fn": "ERC721._safeMint",
      "offset": [
        9623,
        9630
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6161": {
      "fn": "ERC721._safeMint",
      "offset": [
        9613,
        9618
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19F4"
    },
    "6164": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        9613,
        9631
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6165": {
      "fn": "ERC721._safeMint",
      "offset": [
        9613,
        9631
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6166": {
      "fn": "ERC721._safeMint",
      "offset": [
        9662,
        9716
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 83,
      "value": "0x1822"
    },
    "6169": {
      "fn": "ERC721._safeMint",
      "offset": [
        9693,
        9694
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6171": {
      "fn": "ERC721._safeMint",
      "offset": [
        9697,
        9699
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6172": {
      "fn": "ERC721._safeMint",
      "offset": [
        9701,
        9708
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6173": {
      "fn": "ERC721._safeMint",
      "offset": [
        9710,
        9715
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6174": {
      "fn": "ERC721._safeMint",
      "offset": [
        9662,
        9684
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18F6"
    },
    "6177": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        9662,
        9716
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6178": {
      "branch": 133,
      "fn": "ERC721._safeMint",
      "offset": [
        9662,
        9716
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6179": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7BE"
    },
    "6182": {
      "branch": 133,
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6183": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6185": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6192": {
      "op": "SHL"
    },
    "6193": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6194": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6195": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6197": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "ADD",
      "path": "7"
    },
    "6198": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "6201": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6202": {
      "fn": "ERC721._safeMint",
      "offset": [
        9641,
        9792
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22DF"
    },
    "6205": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        9641,
        9792
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6206": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2847,
        3419
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6213": {
      "op": "SHL"
    },
    "6214": {
      "op": "SUB"
    },
    "6215": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3046,
        3064
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6216": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3046,
        3064
      ],
      "op": "AND",
      "path": "8"
    },
    "6217": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3042,
        3225
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1899"
    },
    "6220": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3042,
        3225
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6221": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3080,
        3120
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 84,
      "value": "0x1894"
    },
    "6224": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3112,
        3119
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6225": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4228,
        4238
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 85,
      "value": "0x8"
    },
    "6227": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4228,
        4245
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6228": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4228,
        4245
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6229": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6231": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6232": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6233": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6234": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4216
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "6236": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6238": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6239": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6241": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6242": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4225
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "6243": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4245
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6244": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4245
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6245": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4201,
        4245
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6246": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 86,
      "value": "0x1"
    },
    "6248": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6249": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "ADD",
      "path": "8"
    },
    "6250": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6251": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6252": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6253": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6254": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6255": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6256": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "6289": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "ADD",
      "path": "8"
    },
    "6290": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4255,
        4279
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6291": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4125,
        4286
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6292": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3080,
        3120
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6293": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3042,
        3225
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BC"
    },
    "6296": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3042,
        3225
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6297": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3042,
        3225
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6298": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3149,
        3151
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6305": {
      "op": "SHL"
    },
    "6306": {
      "op": "SUB"
    },
    "6307": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3141,
        3151
      ],
      "op": "AND",
      "path": "8"
    },
    "6308": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3141,
        3145
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6315": {
      "op": "SHL"
    },
    "6316": {
      "op": "SUB"
    },
    "6317": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3141,
        3151
      ],
      "op": "AND",
      "path": "8"
    },
    "6318": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3141,
        3151
      ],
      "op": "EQ",
      "path": "8"
    },
    "6319": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3225
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18BC"
    },
    "6322": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3225
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6323": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3214
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 87,
      "value": "0x18BC"
    },
    "6326": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3200,
        3204
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6327": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3206,
        3213
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6328": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3199
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B42"
    },
    "6331": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3167,
        3214
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6332": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3214
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6339": {
      "op": "SHL"
    },
    "6340": {
      "op": "SUB"
    },
    "6341": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3238,
        3254
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6342": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3238,
        3254
      ],
      "op": "AND",
      "path": "8"
    },
    "6343": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3234,
        3413
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18D3"
    },
    "6346": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3234,
        3413
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6347": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3270,
        3315
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 88,
      "value": "0x7BE"
    },
    "6350": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3307,
        3314
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6351": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3270,
        3306
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BDF"
    },
    "6354": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3270,
        3315
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6355": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3234,
        3413
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6356": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3342,
        3346
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6363": {
      "op": "SHL"
    },
    "6364": {
      "op": "SUB"
    },
    "6365": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3336,
        3346
      ],
      "op": "AND",
      "path": "8"
    },
    "6366": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3336,
        3338
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6373": {
      "op": "SHL"
    },
    "6374": {
      "op": "SUB"
    },
    "6375": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3336,
        3346
      ],
      "op": "AND",
      "path": "8"
    },
    "6376": {
      "branch": 140,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3336,
        3346
      ],
      "op": "EQ",
      "path": "8"
    },
    "6377": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3332,
        3413
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7BE"
    },
    "6380": {
      "branch": 140,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3332,
        3413
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6381": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3362,
        3402
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 89,
      "value": "0x7BE"
    },
    "6384": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3390,
        3392
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6385": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3394,
        3401
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6386": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3362,
        3389
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C8E"
    },
    "6389": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3362,
        3402
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6391": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13403,
        13407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6399": {
      "op": "SHL"
    },
    "6400": {
      "op": "SUB"
    },
    "6401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13423,
        13436
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6402": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13423,
        13436
      ],
      "op": "AND",
      "path": "7"
    },
    "6403": {
      "op": "EXTCODESIZE"
    },
    "6404": {
      "op": "ISZERO"
    },
    "6405": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13419,
        14197
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19E9"
    },
    "6408": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13419,
        14197
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6409": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6411": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6412": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6419": {
      "op": "SHL"
    },
    "6420": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6421": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6428": {
      "op": "SHL"
    },
    "6429": {
      "op": "SUB"
    },
    "6430": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6431": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "AND",
      "path": "7"
    },
    "6432": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6433": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x150B7A02"
    },
    "6438": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x193A"
    },
    "6442": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6443": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6444": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6445": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13566,
        13570
      ],
      "op": "DUP10",
      "path": "7"
    },
    "6446": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13566,
        13570
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13592,
        13599
      ],
      "op": "DUP9",
      "path": "7"
    },
    "6448": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13592,
        13599
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6449": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13621,
        13626
      ],
      "op": "DUP9",
      "path": "7"
    },
    "6450": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13621,
        13626
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6451": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6453": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ADD",
      "path": "7"
    },
    "6454": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2360"
    },
    "6457": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6458": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6459": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6461": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6463": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6464": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6465": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6466": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SUB",
      "path": "7"
    },
    "6467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6468": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6470": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP8",
      "path": "7"
    },
    "6471": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "GAS",
      "path": "7"
    },
    "6472": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "CALL",
      "path": "7"
    },
    "6473": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6474": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "POP",
      "path": "7"
    },
    "6475": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "POP",
      "path": "7"
    },
    "6476": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "POP",
      "path": "7"
    },
    "6477": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6478": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6479": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1975"
    },
    "6482": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6483": {
      "op": "POP"
    },
    "6484": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6486": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6487": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6488": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6490": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6491": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6492": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6493": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ADD",
      "path": "7"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6496": {
      "op": "NOT"
    },
    "6497": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "AND",
      "path": "7"
    },
    "6498": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6499": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ADD",
      "path": "7"
    },
    "6500": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6501": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6502": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6503": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1972"
    },
    "6506": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6507": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6508": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ADD",
      "path": "7"
    },
    "6509": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6510": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x239D"
    },
    "6513": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6514": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6515": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "6517": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6518": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19CF"
    },
    "6521": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6522": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6523": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6524": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6525": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6526": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A3"
    },
    "6529": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6530": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6532": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6533": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6534": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "POP",
      "path": "7"
    },
    "6535": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6537": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "NOT",
      "path": "7"
    },
    "6538": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "6540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6541": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "ADD",
      "path": "7"
    },
    "6542": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "AND",
      "path": "7"
    },
    "6543": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6544": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "ADD",
      "path": "7"
    },
    "6545": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6547": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6548": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6549": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6550": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6551": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "6552": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6554": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6556": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6557": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "ADD",
      "path": "7"
    },
    "6558": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "6559": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19A8"
    },
    "6562": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6563": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6564": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "6566": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6567": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "POP",
      "path": "7"
    },
    "6568": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6569": {
      "op": "POP"
    },
    "6570": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13823,
        13836
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6571": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13823,
        13836
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6572": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13819,
        14131
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C7"
    },
    "6575": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13819,
        14131
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6576": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 90,
      "value": "0x40"
    },
    "6578": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6585": {
      "op": "SHL"
    },
    "6586": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6587": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6588": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6590": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "ADD",
      "path": "7"
    },
    "6591": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "6594": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6595": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22DF"
    },
    "6598": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        13865,
        13971
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6599": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13819,
        14131
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6600": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14083,
        14089
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6601": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14077,
        14090
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6602": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14068,
        14074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6603": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14064,
        14066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6605": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14060,
        14075
      ],
      "op": "ADD",
      "path": "7"
    },
    "6606": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14053,
        14091
      ],
      "op": "REVERT",
      "path": "7"
    },
    "6607": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6614": {
      "op": "SHL"
    },
    "6615": {
      "op": "SUB"
    },
    "6616": {
      "op": "NOT"
    },
    "6617": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13706,
        13757
      ],
      "op": "AND",
      "path": "7",
      "statement": 91
    },
    "6618": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6625": {
      "op": "SHL"
    },
    "6626": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13706,
        13757
      ],
      "op": "EQ",
      "path": "7"
    },
    "6627": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13706,
        13757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6628": {
      "op": "POP"
    },
    "6629": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13699,
        13757
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F7"
    },
    "6632": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13699,
        13757
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6633": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13419,
        14197
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6634": {
      "op": "POP"
    },
    "6635": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14182,
        14186
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 92,
      "value": "0x1"
    },
    "6637": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "6638": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "6639": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "POP",
      "path": "7"
    },
    "6640": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "POP",
      "path": "7"
    },
    "6641": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "POP",
      "path": "7"
    },
    "6642": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "POP",
      "path": "7"
    },
    "6643": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        13253,
        14203
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6644": {
      "fn": "ERC721._mint",
      "offset": [
        10121,
        10493
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6651": {
      "op": "SHL"
    },
    "6652": {
      "op": "SUB"
    },
    "6653": {
      "fn": "ERC721._mint",
      "offset": [
        10200,
        10216
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 93
    },
    "6654": {
      "branch": 134,
      "fn": "ERC721._mint",
      "offset": [
        10200,
        10216
      ],
      "op": "AND",
      "path": "7"
    },
    "6655": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A4A"
    },
    "6658": {
      "branch": 134,
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6659": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6661": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6668": {
      "op": "SHL"
    },
    "6669": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6670": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6673": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6675": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6676": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "ADD",
      "path": "7"
    },
    "6677": {
      "op": "DUP2"
    },
    "6678": {
      "op": "SWAP1"
    },
    "6679": {
      "op": "MSTORE"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6682": {
      "op": "DUP3"
    },
    "6683": {
      "op": "ADD"
    },
    "6684": {
      "op": "MSTORE"
    },
    "6685": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6720": {
      "op": "DUP3"
    },
    "6721": {
      "op": "ADD"
    },
    "6722": {
      "op": "MSTORE"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6725": {
      "op": "ADD"
    },
    "6726": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "6729": {
      "op": "JUMP"
    },
    "6730": {
      "fn": "ERC721._mint",
      "offset": [
        10192,
        10253
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6731": {
      "fn": "ERC721._exists",
      "offset": [
        8173,
        8177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6733": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6734": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6735": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6736": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "6738": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6740": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6741": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6743": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6744": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6745": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6752": {
      "op": "SHL"
    },
    "6753": {
      "op": "SUB"
    },
    "6754": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "AND",
      "path": "7"
    },
    "6755": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8226
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6756": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 94,
      "value": "0x1AAF"
    },
    "6759": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6760": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6762": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6769": {
      "op": "SHL"
    },
    "6770": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6771": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6774": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6776": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6777": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "ADD",
      "path": "7"
    },
    "6778": {
      "op": "MSTORE"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6783": {
      "op": "DUP3"
    },
    "6784": {
      "op": "ADD"
    },
    "6785": {
      "op": "MSTORE"
    },
    "6786": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6821": {
      "op": "DUP3"
    },
    "6822": {
      "op": "ADD"
    },
    "6823": {
      "op": "MSTORE"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6826": {
      "op": "ADD"
    },
    "6827": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x688"
    },
    "6830": {
      "op": "JUMP"
    },
    "6831": {
      "fn": "ERC721._mint",
      "offset": [
        10263,
        10321
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6832": {
      "fn": "ERC721._mint",
      "offset": [
        10332,
        10377
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 95,
      "value": "0x1ABB"
    },
    "6835": {
      "fn": "ERC721._mint",
      "offset": [
        10361,
        10362
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6837": {
      "fn": "ERC721._mint",
      "offset": [
        10365,
        10367
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6838": {
      "fn": "ERC721._mint",
      "offset": [
        10369,
        10376
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6839": {
      "fn": "ERC721._mint",
      "offset": [
        10332,
        10352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x183E"
    },
    "6842": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        10332,
        10377
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6843": {
      "fn": "ERC721._mint",
      "offset": [
        10332,
        10377
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6850": {
      "op": "SHL"
    },
    "6851": {
      "op": "SUB"
    },
    "6852": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 96
    },
    "6853": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "AND",
      "path": "7"
    },
    "6854": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6856": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6857": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6858": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6859": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10397
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "6861": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6863": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6864": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6866": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6867": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6868": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6869": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6870": {
      "fn": "ERC721._mint",
      "offset": [
        10405,
        10406
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "6872": {
      "fn": "ERC721._mint",
      "offset": [
        10405,
        10406
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6873": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10401
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6874": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AE4"
    },
    "6877": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6878": {
      "fn": "ERC721._mint",
      "offset": [
        10405,
        10406
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6879": {
      "fn": "ERC721._mint",
      "offset": [
        10405,
        10406
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6880": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2130"
    },
    "6883": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        10388,
        10406
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6884": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6885": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6886": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6887": {
      "fn": "ERC721._mint",
      "offset": [
        10388,
        10406
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6888": {
      "op": "POP"
    },
    "6889": {
      "op": "POP"
    },
    "6890": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 97,
      "value": "0x0"
    },
    "6892": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6893": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6894": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6895": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10423
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "6897": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6899": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6900": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6902": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6903": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6904": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6905": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6906": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6913": {
      "op": "SHL"
    },
    "6914": {
      "op": "SUB"
    },
    "6915": {
      "op": "NOT"
    },
    "6916": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "AND",
      "path": "7"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6923": {
      "op": "SHL"
    },
    "6924": {
      "op": "SUB"
    },
    "6925": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "DUP7",
      "path": "7"
    },
    "6926": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "AND",
      "path": "7"
    },
    "6927": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6928": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6929": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "OR",
      "path": "7"
    },
    "6930": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6931": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6932": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10437
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6933": {
      "fn": "ERC721._mint",
      "offset": [
        10453,
        10486
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 98
    },
    "6934": {
      "fn": "ERC721._mint",
      "offset": [
        10453,
        10486
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6935": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6936": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6937": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6938": {
      "fn": "ERC721._mint",
      "offset": [
        10453,
        10486
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6971": {
      "fn": "ERC721._mint",
      "offset": [
        10453,
        10486
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6972": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6973": {
      "fn": "ERC721._mint",
      "offset": [
        10416,
        10432
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6974": {
      "fn": "ERC721._mint",
      "offset": [
        10453,
        10486
      ],
      "op": "LOG4",
      "path": "7"
    },
    "6975": {
      "fn": "ERC721._mint",
      "offset": [
        10121,
        10493
      ],
      "op": "POP",
      "path": "7"
    },
    "6976": {
      "fn": "ERC721._mint",
      "offset": [
        10121,
        10493
      ],
      "op": "POP",
      "path": "7"
    },
    "6977": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        10121,
        10493
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6978": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4903,
        5885
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6979": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5177,
        5199
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6981": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5227,
        5228
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6983": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5202,
        5224
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B4F"
    },
    "6986": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5219,
        5223
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6987": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5202,
        5218
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCEE"
    },
    "6990": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5202,
        5224
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6991": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5202,
        5224
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6992": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5202,
        5228
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B59"
    },
    "6995": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5202,
        5228
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6996": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5202,
        5228
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6997": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5202,
        5228
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2119"
    },
    "7000": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5202,
        5228
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7001": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5202,
        5228
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7002": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5238,
        5256
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7004": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7005": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7006": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7007": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5276
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "7009": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7011": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7012": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7014": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7015": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7016": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5259,
        5285
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7017": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5177,
        5228
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7018": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5177,
        5228
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7019": {
      "op": "POP"
    },
    "7020": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5389,
        5417
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7021": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5389,
        5417
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7022": {
      "branch": 141,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5389,
        5417
      ],
      "op": "EQ",
      "path": "8"
    },
    "7023": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5708
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BAC"
    },
    "7026": {
      "branch": 141,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5708
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7033": {
      "op": "SHL"
    },
    "7034": {
      "op": "SUB"
    },
    "7035": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7036": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "AND",
      "path": "8"
    },
    "7037": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5433,
        5452
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7039": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7040": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7041": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7042": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5467
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "7044": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7046": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7047": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7048": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7049": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7051": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7052": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7053": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5473
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7054": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7055": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7056": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7057": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7058": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7059": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7060": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7061": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7062": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5455,
        5489
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7063": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5534
      ],
      "op": "DUP5",
      "path": "8",
      "statement": 99
    },
    "7064": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5534
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7065": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5534
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7066": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5534
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7067": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5534
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7068": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5534
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7069": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5548
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7070": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5548
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7071": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5504,
        5548
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7072": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5650
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 100
    },
    "7073": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5650
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7074": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5637
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "7076": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5650
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7077": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5650
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7078": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5650
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7079": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5650
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7080": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5650
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7081": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5663
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7082": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5663
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7083": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5620,
        5663
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7084": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5708
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7085": {
      "op": "POP"
    },
    "7086": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 101,
      "value": "0x0"
    },
    "7088": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7089": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7090": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7091": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5818
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "7093": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7095": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7096": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7097": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7098": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7100": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7101": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7102": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5801,
        5827
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7103": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5794,
        5827
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7104": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5794,
        5827
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7105": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5794,
        5827
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7112": {
      "op": "SHL"
    },
    "7113": {
      "op": "SUB"
    },
    "7114": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 102
    },
    "7115": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "7116": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "AND",
      "path": "8"
    },
    "7117": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7118": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7119": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "7121": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7122": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7123": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7124": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7125": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5862
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7126": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5878
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7127": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5878
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7128": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5878
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7129": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5878
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7130": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5878
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7131": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5878
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7132": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5844,
        5878
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7133": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5837,
        5878
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7134": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4903,
        5885
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7135": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6173,
        7234
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7136": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6447,
        6457
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "7138": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6447,
        6464
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7139": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6422,
        6444
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7141": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6422,
        6444
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7142": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6447,
        6468
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BF1"
    },
    "7145": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6447,
        6468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7146": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6467,
        6468
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "7148": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6467,
        6468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7149": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6447,
        6468
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2119"
    },
    "7152": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6447,
        6468
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7153": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6447,
        6468
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7154": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6478,
        6496
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7156": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7157": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7158": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7159": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6514
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "7161": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7163": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7164": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7166": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7167": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7168": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7169": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6877
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "7171": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7172": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7173": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6422,
        6468
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "7174": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6422,
        6468
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "7175": {
      "op": "POP"
    },
    "7176": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7177": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6499,
        6523
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7178": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6422,
        6468
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7179": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6422,
        6468
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7180": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7181": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "LT",
      "path": "8"
    },
    "7182": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C19"
    },
    "7185": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7186": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C19"
    },
    "7189": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21D0"
    },
    "7192": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6867,
        6893
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7193": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7194": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7195": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7197": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7198": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7200": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7202": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7203": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "ADD",
      "path": "8"
    },
    "7204": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6867,
        6893
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7205": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6845,
        6893
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7206": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6845,
        6893
      ],
      "op": "POP",
      "path": "8"
    },
    "7207": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6929,
        6940
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 103
    },
    "7208": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x8"
    },
    "7210": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6915,
        6925
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7211": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7212": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7213": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7214": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "LT",
      "path": "8"
    },
    "7215": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C3A"
    },
    "7218": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7219": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C3A"
    },
    "7222": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21D0"
    },
    "7225": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6904,
        6926
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7226": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7227": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7229": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7230": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7231": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7232": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7234": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7235": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7236": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7237": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7238": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7239": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6926
      ],
      "op": "ADD",
      "path": "8"
    },
    "7240": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6940
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7241": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6940
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7242": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6940
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "7243": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6904,
        6940
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7244": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 104
    },
    "7245": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7246": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7247": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7023
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x9"
    },
    "7249": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7250": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7251": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7252": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7254": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7255": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7256": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7036
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7257": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7049
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7258": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7049
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7259": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7008,
        7049
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7260": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7177,
        7201
      ],
      "op": "DUP6",
      "path": "8",
      "statement": 105
    },
    "7261": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7177,
        7201
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7262": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7177,
        7201
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7263": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7177,
        7201
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7264": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7177,
        7201
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7265": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7170,
        7201
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7266": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7221
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 106,
      "value": "0x8"
    },
    "7268": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7269": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7270": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7271": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C72"
    },
    "7274": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7275": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C72"
    },
    "7278": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23BA"
    },
    "7281": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7211,
        7227
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7282": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7283": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "7285": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7286": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "SUB",
      "path": "8"
    },
    "7287": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7288": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7289": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7290": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7292": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7293": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7295": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7297": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7298": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "ADD",
      "path": "8"
    },
    "7299": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7301": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7302": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7303": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7304": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7211,
        7227
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7305": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6244,
        7234
      ],
      "op": "POP",
      "path": "8"
    },
    "7306": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6244,
        7234
      ],
      "op": "POP",
      "path": "8"
    },
    "7307": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6244,
        7234
      ],
      "op": "POP",
      "path": "8"
    },
    "7308": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6173,
        7234
      ],
      "op": "POP",
      "path": "8"
    },
    "7309": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6173,
        7234
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7310": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3713,
        3930
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7311": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3797,
        3811
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7313": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3814,
        3834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1C99"
    },
    "7316": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3831,
        3833
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7317": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3814,
        3830
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCEE"
    },
    "7320": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3814,
        3834
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7321": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3814,
        3834
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7328": {
      "op": "SHL"
    },
    "7329": {
      "op": "SUB"
    },
    "7330": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 107
    },
    "7331": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "7332": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "AND",
      "path": "8"
    },
    "7333": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7335": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7336": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7337": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7338": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3856
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "7340": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "7342": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7343": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7344": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7345": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7347": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7348": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7349": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3860
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7350": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3868
      ],
      "op": "DUP7",
      "path": "8"
    },
    "7351": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3868
      ],
      "op": "DUP5",
      "path": "8"
    },
    "7352": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7353": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3868
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7354": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3868
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7355": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3868
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7356": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3868
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7357": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3868
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7358": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3878
      ],
      "op": "DUP6",
      "path": "8"
    },
    "7359": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3878
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7360": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3844,
        3878
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7361": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "SWAP4",
      "path": "8",
      "statement": 108
    },
    "7362": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7363": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7364": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3905
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x7"
    },
    "7366": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7367": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7368": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7369": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7370": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7371": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3914
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "7372": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7373": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7374": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7375": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3888,
        3923
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7376": {
      "op": "POP"
    },
    "7377": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3713,
        3930
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7378": {
      "op": "JUMPDEST"
    },
    "7379": {
      "op": "DUP3"
    },
    "7380": {
      "op": "DUP1"
    },
    "7381": {
      "op": "SLOAD"
    },
    "7382": {
      "op": "PUSH2",
      "value": "0x1CDE"
    },
    "7385": {
      "op": "SWAP1"
    },
    "7386": {
      "op": "PUSH2",
      "value": "0x207F"
    },
    "7389": {
      "jump": "i",
      "op": "JUMP"
    },
    "7390": {
      "op": "JUMPDEST"
    },
    "7391": {
      "op": "SWAP1"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7394": {
      "op": "MSTORE"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7399": {
      "op": "KECCAK256"
    },
    "7400": {
      "op": "SWAP1"
    },
    "7401": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7403": {
      "op": "ADD"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7406": {
      "op": "SWAP1"
    },
    "7407": {
      "op": "DIV"
    },
    "7408": {
      "op": "DUP2"
    },
    "7409": {
      "op": "ADD"
    },
    "7410": {
      "op": "SWAP3"
    },
    "7411": {
      "op": "DUP3"
    },
    "7412": {
      "op": "PUSH2",
      "value": "0x1D00"
    },
    "7415": {
      "op": "JUMPI"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7418": {
      "op": "DUP6"
    },
    "7419": {
      "op": "SSTORE"
    },
    "7420": {
      "op": "PUSH2",
      "value": "0x1D46"
    },
    "7423": {
      "op": "JUMP"
    },
    "7424": {
      "op": "JUMPDEST"
    },
    "7425": {
      "op": "DUP3"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7428": {
      "op": "LT"
    },
    "7429": {
      "op": "PUSH2",
      "value": "0x1D19"
    },
    "7432": {
      "op": "JUMPI"
    },
    "7433": {
      "op": "DUP1"
    },
    "7434": {
      "op": "MLOAD"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7437": {
      "op": "NOT"
    },
    "7438": {
      "op": "AND"
    },
    "7439": {
      "op": "DUP4"
    },
    "7440": {
      "op": "DUP1"
    },
    "7441": {
      "op": "ADD"
    },
    "7442": {
      "op": "OR"
    },
    "7443": {
      "op": "DUP6"
    },
    "7444": {
      "op": "SSTORE"
    },
    "7445": {
      "op": "PUSH2",
      "value": "0x1D46"
    },
    "7448": {
      "op": "JUMP"
    },
    "7449": {
      "op": "JUMPDEST"
    },
    "7450": {
      "op": "DUP3"
    },
    "7451": {
      "op": "DUP1"
    },
    "7452": {
      "op": "ADD"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7455": {
      "op": "ADD"
    },
    "7456": {
      "op": "DUP6"
    },
    "7457": {
      "op": "SSTORE"
    },
    "7458": {
      "op": "DUP3"
    },
    "7459": {
      "op": "ISZERO"
    },
    "7460": {
      "op": "PUSH2",
      "value": "0x1D46"
    },
    "7463": {
      "op": "JUMPI"
    },
    "7464": {
      "op": "SWAP2"
    },
    "7465": {
      "op": "DUP3"
    },
    "7466": {
      "op": "ADD"
    },
    "7467": {
      "op": "JUMPDEST"
    },
    "7468": {
      "op": "DUP3"
    },
    "7469": {
      "op": "DUP2"
    },
    "7470": {
      "op": "GT"
    },
    "7471": {
      "op": "ISZERO"
    },
    "7472": {
      "op": "PUSH2",
      "value": "0x1D46"
    },
    "7475": {
      "op": "JUMPI"
    },
    "7476": {
      "op": "DUP3"
    },
    "7477": {
      "op": "MLOAD"
    },
    "7478": {
      "op": "DUP3"
    },
    "7479": {
      "op": "SSTORE"
    },
    "7480": {
      "op": "SWAP2"
    },
    "7481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7483": {
      "op": "ADD"
    },
    "7484": {
      "op": "SWAP2"
    },
    "7485": {
      "op": "SWAP1"
    },
    "7486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7488": {
      "op": "ADD"
    },
    "7489": {
      "op": "SWAP1"
    },
    "7490": {
      "op": "PUSH2",
      "value": "0x1D2B"
    },
    "7493": {
      "op": "JUMP"
    },
    "7494": {
      "op": "JUMPDEST"
    },
    "7495": {
      "op": "POP"
    },
    "7496": {
      "op": "PUSH2",
      "value": "0x1D52"
    },
    "7499": {
      "op": "SWAP3"
    },
    "7500": {
      "op": "SWAP2"
    },
    "7501": {
      "op": "POP"
    },
    "7502": {
      "op": "PUSH2",
      "value": "0x1D56"
    },
    "7505": {
      "jump": "i",
      "op": "JUMP"
    },
    "7506": {
      "op": "JUMPDEST"
    },
    "7507": {
      "op": "POP"
    },
    "7508": {
      "op": "SWAP1"
    },
    "7509": {
      "jump": "o",
      "op": "JUMP"
    },
    "7510": {
      "op": "JUMPDEST"
    },
    "7511": {
      "op": "JUMPDEST"
    },
    "7512": {
      "op": "DUP1"
    },
    "7513": {
      "op": "DUP3"
    },
    "7514": {
      "op": "GT"
    },
    "7515": {
      "op": "ISZERO"
    },
    "7516": {
      "op": "PUSH2",
      "value": "0x1D52"
    },
    "7519": {
      "op": "JUMPI"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7522": {
      "op": "DUP2"
    },
    "7523": {
      "op": "SSTORE"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7526": {
      "op": "ADD"
    },
    "7527": {
      "op": "PUSH2",
      "value": "0x1D57"
    },
    "7530": {
      "op": "JUMP"
    },
    "7531": {
      "op": "JUMPDEST"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7538": {
      "op": "SHL"
    },
    "7539": {
      "op": "SUB"
    },
    "7540": {
      "op": "NOT"
    },
    "7541": {
      "op": "DUP2"
    },
    "7542": {
      "op": "AND"
    },
    "7543": {
      "op": "DUP2"
    },
    "7544": {
      "op": "EQ"
    },
    "7545": {
      "op": "PUSH2",
      "value": "0x8B4"
    },
    "7548": {
      "op": "JUMPI"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7551": {
      "op": "DUP1"
    },
    "7552": {
      "op": "REVERT"
    },
    "7553": {
      "op": "JUMPDEST"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7558": {
      "op": "DUP3"
    },
    "7559": {
      "op": "DUP5"
    },
    "7560": {
      "op": "SUB"
    },
    "7561": {
      "op": "SLT"
    },
    "7562": {
      "op": "ISZERO"
    },
    "7563": {
      "op": "PUSH2",
      "value": "0x1D93"
    },
    "7566": {
      "op": "JUMPI"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7569": {
      "op": "DUP1"
    },
    "7570": {
      "op": "REVERT"
    },
    "7571": {
      "op": "JUMPDEST"
    },
    "7572": {
      "op": "DUP2"
    },
    "7573": {
      "op": "CALLDATALOAD"
    },
    "7574": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "7577": {
      "op": "DUP2"
    },
    "7578": {
      "op": "PUSH2",
      "value": "0x1D6B"
    },
    "7581": {
      "jump": "i",
      "op": "JUMP"
    },
    "7582": {
      "op": "JUMPDEST"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7585": {
      "op": "JUMPDEST"
    },
    "7586": {
      "op": "DUP4"
    },
    "7587": {
      "op": "DUP2"
    },
    "7588": {
      "op": "LT"
    },
    "7589": {
      "op": "ISZERO"
    },
    "7590": {
      "op": "PUSH2",
      "value": "0x1DB9"
    },
    "7593": {
      "op": "JUMPI"
    },
    "7594": {
      "op": "DUP2"
    },
    "7595": {
      "op": "DUP2"
    },
    "7596": {
      "op": "ADD"
    },
    "7597": {
      "op": "MLOAD"
    },
    "7598": {
      "op": "DUP4"
    },
    "7599": {
      "op": "DUP3"
    },
    "7600": {
      "op": "ADD"
    },
    "7601": {
      "op": "MSTORE"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7604": {
      "op": "ADD"
    },
    "7605": {
      "op": "PUSH2",
      "value": "0x1DA1"
    },
    "7608": {
      "op": "JUMP"
    },
    "7609": {
      "op": "JUMPDEST"
    },
    "7610": {
      "op": "DUP4"
    },
    "7611": {
      "op": "DUP2"
    },
    "7612": {
      "op": "GT"
    },
    "7613": {
      "op": "ISZERO"
    },
    "7614": {
      "op": "PUSH2",
      "value": "0xF2B"
    },
    "7617": {
      "op": "JUMPI"
    },
    "7618": {
      "op": "POP"
    },
    "7619": {
      "op": "POP"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7622": {
      "op": "SWAP2"
    },
    "7623": {
      "op": "ADD"
    },
    "7624": {
      "op": "MSTORE"
    },
    "7625": {
      "jump": "o",
      "op": "JUMP"
    },
    "7626": {
      "op": "JUMPDEST"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7629": {
      "op": "DUP2"
    },
    "7630": {
      "op": "MLOAD"
    },
    "7631": {
      "op": "DUP1"
    },
    "7632": {
      "op": "DUP5"
    },
    "7633": {
      "op": "MSTORE"
    },
    "7634": {
      "op": "PUSH2",
      "value": "0x1DE2"
    },
    "7637": {
      "op": "DUP2"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7640": {
      "op": "DUP7"
    },
    "7641": {
      "op": "ADD"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7644": {
      "op": "DUP7"
    },
    "7645": {
      "op": "ADD"
    },
    "7646": {
      "op": "PUSH2",
      "value": "0x1D9E"
    },
    "7649": {
      "jump": "i",
      "op": "JUMP"
    },
    "7650": {
      "op": "JUMPDEST"
    },
    "7651": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7653": {
      "op": "ADD"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7656": {
      "op": "NOT"
    },
    "7657": {
      "op": "AND"
    },
    "7658": {
      "op": "SWAP3"
    },
    "7659": {
      "op": "SWAP1"
    },
    "7660": {
      "op": "SWAP3"
    },
    "7661": {
      "op": "ADD"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7664": {
      "op": "ADD"
    },
    "7665": {
      "op": "SWAP3"
    },
    "7666": {
      "op": "SWAP2"
    },
    "7667": {
      "op": "POP"
    },
    "7668": {
      "op": "POP"
    },
    "7669": {
      "jump": "o",
      "op": "JUMP"
    },
    "7670": {
      "op": "JUMPDEST"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7673": {
      "op": "DUP2"
    },
    "7674": {
      "op": "MSTORE"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7677": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7682": {
      "op": "DUP4"
    },
    "7683": {
      "op": "ADD"
    },
    "7684": {
      "op": "DUP5"
    },
    "7685": {
      "op": "PUSH2",
      "value": "0x1DCA"
    },
    "7688": {
      "jump": "i",
      "op": "JUMP"
    },
    "7689": {
      "op": "JUMPDEST"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7694": {
      "op": "DUP3"
    },
    "7695": {
      "op": "DUP5"
    },
    "7696": {
      "op": "SUB"
    },
    "7697": {
      "op": "SLT"
    },
    "7698": {
      "op": "ISZERO"
    },
    "7699": {
      "op": "PUSH2",
      "value": "0x1E1B"
    },
    "7702": {
      "op": "JUMPI"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7705": {
      "op": "DUP1"
    },
    "7706": {
      "op": "REVERT"
    },
    "7707": {
      "op": "JUMPDEST"
    },
    "7708": {
      "op": "POP"
    },
    "7709": {
      "op": "CALLDATALOAD"
    },
    "7710": {
      "op": "SWAP2"
    },
    "7711": {
      "op": "SWAP1"
    },
    "7712": {
      "op": "POP"
    },
    "7713": {
      "jump": "o",
      "op": "JUMP"
    },
    "7714": {
      "op": "JUMPDEST"
    },
    "7715": {
      "op": "DUP1"
    },
    "7716": {
      "op": "CALLDATALOAD"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "op": "SUB"
    },
    "7725": {
      "op": "DUP2"
    },
    "7726": {
      "op": "AND"
    },
    "7727": {
      "op": "DUP2"
    },
    "7728": {
      "op": "EQ"
    },
    "7729": {
      "op": "PUSH2",
      "value": "0x1E39"
    },
    "7732": {
      "op": "JUMPI"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7735": {
      "op": "DUP1"
    },
    "7736": {
      "op": "REVERT"
    },
    "7737": {
      "op": "JUMPDEST"
    },
    "7738": {
      "op": "SWAP2"
    },
    "7739": {
      "op": "SWAP1"
    },
    "7740": {
      "op": "POP"
    },
    "7741": {
      "jump": "o",
      "op": "JUMP"
    },
    "7742": {
      "op": "JUMPDEST"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7745": {
      "op": "DUP1"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7748": {
      "op": "DUP4"
    },
    "7749": {
      "op": "DUP6"
    },
    "7750": {
      "op": "SUB"
    },
    "7751": {
      "op": "SLT"
    },
    "7752": {
      "op": "ISZERO"
    },
    "7753": {
      "op": "PUSH2",
      "value": "0x1E51"
    },
    "7756": {
      "op": "JUMPI"
    },
    "7757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7759": {
      "op": "DUP1"
    },
    "7760": {
      "op": "REVERT"
    },
    "7761": {
      "op": "JUMPDEST"
    },
    "7762": {
      "op": "PUSH2",
      "value": "0x1E5A"
    },
    "7765": {
      "op": "DUP4"
    },
    "7766": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "7769": {
      "jump": "i",
      "op": "JUMP"
    },
    "7770": {
      "op": "JUMPDEST"
    },
    "7771": {
      "op": "SWAP5"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7774": {
      "op": "SWAP4"
    },
    "7775": {
      "op": "SWAP1"
    },
    "7776": {
      "op": "SWAP4"
    },
    "7777": {
      "op": "ADD"
    },
    "7778": {
      "op": "CALLDATALOAD"
    },
    "7779": {
      "op": "SWAP4"
    },
    "7780": {
      "op": "POP"
    },
    "7781": {
      "op": "POP"
    },
    "7782": {
      "op": "POP"
    },
    "7783": {
      "jump": "o",
      "op": "JUMP"
    },
    "7784": {
      "op": "JUMPDEST"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7787": {
      "op": "DUP1"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7792": {
      "op": "DUP5"
    },
    "7793": {
      "op": "DUP7"
    },
    "7794": {
      "op": "SUB"
    },
    "7795": {
      "op": "SLT"
    },
    "7796": {
      "op": "ISZERO"
    },
    "7797": {
      "op": "PUSH2",
      "value": "0x1E7D"
    },
    "7800": {
      "op": "JUMPI"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7803": {
      "op": "DUP1"
    },
    "7804": {
      "op": "REVERT"
    },
    "7805": {
      "op": "JUMPDEST"
    },
    "7806": {
      "op": "PUSH2",
      "value": "0x1E86"
    },
    "7809": {
      "op": "DUP5"
    },
    "7810": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "7813": {
      "jump": "i",
      "op": "JUMP"
    },
    "7814": {
      "op": "JUMPDEST"
    },
    "7815": {
      "op": "SWAP3"
    },
    "7816": {
      "op": "POP"
    },
    "7817": {
      "op": "PUSH2",
      "value": "0x1E94"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7822": {
      "op": "DUP6"
    },
    "7823": {
      "op": "ADD"
    },
    "7824": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "7827": {
      "jump": "i",
      "op": "JUMP"
    },
    "7828": {
      "op": "JUMPDEST"
    },
    "7829": {
      "op": "SWAP2"
    },
    "7830": {
      "op": "POP"
    },
    "7831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7833": {
      "op": "DUP5"
    },
    "7834": {
      "op": "ADD"
    },
    "7835": {
      "op": "CALLDATALOAD"
    },
    "7836": {
      "op": "SWAP1"
    },
    "7837": {
      "op": "POP"
    },
    "7838": {
      "op": "SWAP3"
    },
    "7839": {
      "op": "POP"
    },
    "7840": {
      "op": "SWAP3"
    },
    "7841": {
      "op": "POP"
    },
    "7842": {
      "op": "SWAP3"
    },
    "7843": {
      "jump": "o",
      "op": "JUMP"
    },
    "7844": {
      "op": "JUMPDEST"
    },
    "7845": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7852": {
      "op": "SHL"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7855": {
      "op": "MSTORE"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7860": {
      "op": "MSTORE"
    },
    "7861": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7865": {
      "op": "REVERT"
    },
    "7866": {
      "op": "JUMPDEST"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7869": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7878": {
      "op": "DUP1"
    },
    "7879": {
      "op": "DUP5"
    },
    "7880": {
      "op": "GT"
    },
    "7881": {
      "op": "ISZERO"
    },
    "7882": {
      "op": "PUSH2",
      "value": "0x1ED5"
    },
    "7885": {
      "op": "JUMPI"
    },
    "7886": {
      "op": "PUSH2",
      "value": "0x1ED5"
    },
    "7889": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "7892": {
      "jump": "i",
      "op": "JUMP"
    },
    "7893": {
      "op": "JUMPDEST"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7896": {
      "op": "MLOAD"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7899": {
      "op": "DUP6"
    },
    "7900": {
      "op": "ADD"
    },
    "7901": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7903": {
      "op": "NOT"
    },
    "7904": {
      "op": "SWAP1"
    },
    "7905": {
      "op": "DUP2"
    },
    "7906": {
      "op": "AND"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7909": {
      "op": "ADD"
    },
    "7910": {
      "op": "AND"
    },
    "7911": {
      "op": "DUP2"
    },
    "7912": {
      "op": "ADD"
    },
    "7913": {
      "op": "SWAP1"
    },
    "7914": {
      "op": "DUP3"
    },
    "7915": {
      "op": "DUP3"
    },
    "7916": {
      "op": "GT"
    },
    "7917": {
      "op": "DUP2"
    },
    "7918": {
      "op": "DUP4"
    },
    "7919": {
      "op": "LT"
    },
    "7920": {
      "op": "OR"
    },
    "7921": {
      "op": "ISZERO"
    },
    "7922": {
      "op": "PUSH2",
      "value": "0x1EFD"
    },
    "7925": {
      "op": "JUMPI"
    },
    "7926": {
      "op": "PUSH2",
      "value": "0x1EFD"
    },
    "7929": {
      "op": "PUSH2",
      "value": "0x1EA4"
    },
    "7932": {
      "jump": "i",
      "op": "JUMP"
    },
    "7933": {
      "op": "JUMPDEST"
    },
    "7934": {
      "op": "DUP2"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7937": {
      "op": "MSTORE"
    },
    "7938": {
      "op": "DUP1"
    },
    "7939": {
      "op": "SWAP4"
    },
    "7940": {
      "op": "POP"
    },
    "7941": {
      "op": "DUP6"
    },
    "7942": {
      "op": "DUP2"
    },
    "7943": {
      "op": "MSTORE"
    },
    "7944": {
      "op": "DUP7"
    },
    "7945": {
      "op": "DUP7"
    },
    "7946": {
      "op": "DUP7"
    },
    "7947": {
      "op": "ADD"
    },
    "7948": {
      "op": "GT"
    },
    "7949": {
      "op": "ISZERO"
    },
    "7950": {
      "op": "PUSH2",
      "value": "0x1F16"
    },
    "7953": {
      "op": "JUMPI"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7956": {
      "op": "DUP1"
    },
    "7957": {
      "op": "REVERT"
    },
    "7958": {
      "op": "JUMPDEST"
    },
    "7959": {
      "op": "DUP6"
    },
    "7960": {
      "op": "DUP6"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7963": {
      "op": "DUP4"
    },
    "7964": {
      "op": "ADD"
    },
    "7965": {
      "op": "CALLDATACOPY"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7970": {
      "op": "DUP8"
    },
    "7971": {
      "op": "DUP4"
    },
    "7972": {
      "op": "ADD"
    },
    "7973": {
      "op": "ADD"
    },
    "7974": {
      "op": "MSTORE"
    },
    "7975": {
      "op": "POP"
    },
    "7976": {
      "op": "POP"
    },
    "7977": {
      "op": "POP"
    },
    "7978": {
      "op": "SWAP4"
    },
    "7979": {
      "op": "SWAP3"
    },
    "7980": {
      "op": "POP"
    },
    "7981": {
      "op": "POP"
    },
    "7982": {
      "op": "POP"
    },
    "7983": {
      "jump": "o",
      "op": "JUMP"
    },
    "7984": {
      "op": "JUMPDEST"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7989": {
      "op": "DUP3"
    },
    "7990": {
      "op": "DUP5"
    },
    "7991": {
      "op": "SUB"
    },
    "7992": {
      "op": "SLT"
    },
    "7993": {
      "op": "ISZERO"
    },
    "7994": {
      "op": "PUSH2",
      "value": "0x1F42"
    },
    "7997": {
      "op": "JUMPI"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8000": {
      "op": "DUP1"
    },
    "8001": {
      "op": "REVERT"
    },
    "8002": {
      "op": "JUMPDEST"
    },
    "8003": {
      "op": "DUP2"
    },
    "8004": {
      "op": "CALLDATALOAD"
    },
    "8005": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8014": {
      "op": "DUP2"
    },
    "8015": {
      "op": "GT"
    },
    "8016": {
      "op": "ISZERO"
    },
    "8017": {
      "op": "PUSH2",
      "value": "0x1F59"
    },
    "8020": {
      "op": "JUMPI"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8023": {
      "op": "DUP1"
    },
    "8024": {
      "op": "REVERT"
    },
    "8025": {
      "op": "JUMPDEST"
    },
    "8026": {
      "op": "DUP3"
    },
    "8027": {
      "op": "ADD"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8030": {
      "op": "DUP2"
    },
    "8031": {
      "op": "ADD"
    },
    "8032": {
      "op": "DUP5"
    },
    "8033": {
      "op": "SGT"
    },
    "8034": {
      "op": "PUSH2",
      "value": "0x1F6A"
    },
    "8037": {
      "op": "JUMPI"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8040": {
      "op": "DUP1"
    },
    "8041": {
      "op": "REVERT"
    },
    "8042": {
      "op": "JUMPDEST"
    },
    "8043": {
      "op": "PUSH2",
      "value": "0x13F7"
    },
    "8046": {
      "op": "DUP5"
    },
    "8047": {
      "op": "DUP3"
    },
    "8048": {
      "op": "CALLDATALOAD"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8051": {
      "op": "DUP5"
    },
    "8052": {
      "op": "ADD"
    },
    "8053": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "8056": {
      "jump": "i",
      "op": "JUMP"
    },
    "8057": {
      "op": "JUMPDEST"
    },
    "8058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8062": {
      "op": "DUP3"
    },
    "8063": {
      "op": "DUP5"
    },
    "8064": {
      "op": "SUB"
    },
    "8065": {
      "op": "SLT"
    },
    "8066": {
      "op": "ISZERO"
    },
    "8067": {
      "op": "PUSH2",
      "value": "0x1F8B"
    },
    "8070": {
      "op": "JUMPI"
    },
    "8071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8073": {
      "op": "DUP1"
    },
    "8074": {
      "op": "REVERT"
    },
    "8075": {
      "op": "JUMPDEST"
    },
    "8076": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "8079": {
      "op": "DUP3"
    },
    "8080": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "8083": {
      "jump": "i",
      "op": "JUMP"
    },
    "8084": {
      "op": "JUMPDEST"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8087": {
      "op": "DUP1"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8090": {
      "op": "DUP4"
    },
    "8091": {
      "op": "DUP6"
    },
    "8092": {
      "op": "SUB"
    },
    "8093": {
      "op": "SLT"
    },
    "8094": {
      "op": "ISZERO"
    },
    "8095": {
      "op": "PUSH2",
      "value": "0x1FA7"
    },
    "8098": {
      "op": "JUMPI"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8101": {
      "op": "DUP1"
    },
    "8102": {
      "op": "REVERT"
    },
    "8103": {
      "op": "JUMPDEST"
    },
    "8104": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8107": {
      "op": "DUP4"
    },
    "8108": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "8111": {
      "jump": "i",
      "op": "JUMP"
    },
    "8112": {
      "op": "JUMPDEST"
    },
    "8113": {
      "op": "SWAP2"
    },
    "8114": {
      "op": "POP"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8117": {
      "op": "DUP4"
    },
    "8118": {
      "op": "ADD"
    },
    "8119": {
      "op": "CALLDATALOAD"
    },
    "8120": {
      "op": "DUP1"
    },
    "8121": {
      "op": "ISZERO"
    },
    "8122": {
      "op": "ISZERO"
    },
    "8123": {
      "op": "DUP2"
    },
    "8124": {
      "op": "EQ"
    },
    "8125": {
      "op": "PUSH2",
      "value": "0x1FC5"
    },
    "8128": {
      "op": "JUMPI"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8131": {
      "op": "DUP1"
    },
    "8132": {
      "op": "REVERT"
    },
    "8133": {
      "op": "JUMPDEST"
    },
    "8134": {
      "op": "DUP1"
    },
    "8135": {
      "op": "SWAP2"
    },
    "8136": {
      "op": "POP"
    },
    "8137": {
      "op": "POP"
    },
    "8138": {
      "op": "SWAP3"
    },
    "8139": {
      "op": "POP"
    },
    "8140": {
      "op": "SWAP3"
    },
    "8141": {
      "op": "SWAP1"
    },
    "8142": {
      "op": "POP"
    },
    "8143": {
      "jump": "o",
      "op": "JUMP"
    },
    "8144": {
      "op": "JUMPDEST"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8147": {
      "op": "DUP1"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8150": {
      "op": "DUP1"
    },
    "8151": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8153": {
      "op": "DUP6"
    },
    "8154": {
      "op": "DUP8"
    },
    "8155": {
      "op": "SUB"
    },
    "8156": {
      "op": "SLT"
    },
    "8157": {
      "op": "ISZERO"
    },
    "8158": {
      "op": "PUSH2",
      "value": "0x1FE6"
    },
    "8161": {
      "op": "JUMPI"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8164": {
      "op": "DUP1"
    },
    "8165": {
      "op": "REVERT"
    },
    "8166": {
      "op": "JUMPDEST"
    },
    "8167": {
      "op": "PUSH2",
      "value": "0x1FEF"
    },
    "8170": {
      "op": "DUP6"
    },
    "8171": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "8174": {
      "jump": "i",
      "op": "JUMP"
    },
    "8175": {
      "op": "JUMPDEST"
    },
    "8176": {
      "op": "SWAP4"
    },
    "8177": {
      "op": "POP"
    },
    "8178": {
      "op": "PUSH2",
      "value": "0x1FFD"
    },
    "8181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8183": {
      "op": "DUP7"
    },
    "8184": {
      "op": "ADD"
    },
    "8185": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "8188": {
      "jump": "i",
      "op": "JUMP"
    },
    "8189": {
      "op": "JUMPDEST"
    },
    "8190": {
      "op": "SWAP3"
    },
    "8191": {
      "op": "POP"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8194": {
      "op": "DUP6"
    },
    "8195": {
      "op": "ADD"
    },
    "8196": {
      "op": "CALLDATALOAD"
    },
    "8197": {
      "op": "SWAP2"
    },
    "8198": {
      "op": "POP"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8201": {
      "op": "DUP6"
    },
    "8202": {
      "op": "ADD"
    },
    "8203": {
      "op": "CALLDATALOAD"
    },
    "8204": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8213": {
      "op": "DUP2"
    },
    "8214": {
      "op": "GT"
    },
    "8215": {
      "op": "ISZERO"
    },
    "8216": {
      "op": "PUSH2",
      "value": "0x2020"
    },
    "8219": {
      "op": "JUMPI"
    },
    "8220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8222": {
      "op": "DUP1"
    },
    "8223": {
      "op": "REVERT"
    },
    "8224": {
      "op": "JUMPDEST"
    },
    "8225": {
      "op": "DUP6"
    },
    "8226": {
      "op": "ADD"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8229": {
      "op": "DUP2"
    },
    "8230": {
      "op": "ADD"
    },
    "8231": {
      "op": "DUP8"
    },
    "8232": {
      "op": "SGT"
    },
    "8233": {
      "op": "PUSH2",
      "value": "0x2031"
    },
    "8236": {
      "op": "JUMPI"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8239": {
      "op": "DUP1"
    },
    "8240": {
      "op": "REVERT"
    },
    "8241": {
      "op": "JUMPDEST"
    },
    "8242": {
      "op": "PUSH2",
      "value": "0x2040"
    },
    "8245": {
      "op": "DUP8"
    },
    "8246": {
      "op": "DUP3"
    },
    "8247": {
      "op": "CALLDATALOAD"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8250": {
      "op": "DUP5"
    },
    "8251": {
      "op": "ADD"
    },
    "8252": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "8255": {
      "jump": "i",
      "op": "JUMP"
    },
    "8256": {
      "op": "JUMPDEST"
    },
    "8257": {
      "op": "SWAP2"
    },
    "8258": {
      "op": "POP"
    },
    "8259": {
      "op": "POP"
    },
    "8260": {
      "op": "SWAP3"
    },
    "8261": {
      "op": "SWAP6"
    },
    "8262": {
      "op": "SWAP2"
    },
    "8263": {
      "op": "SWAP5"
    },
    "8264": {
      "op": "POP"
    },
    "8265": {
      "op": "SWAP3"
    },
    "8266": {
      "op": "POP"
    },
    "8267": {
      "jump": "o",
      "op": "JUMP"
    },
    "8268": {
      "op": "JUMPDEST"
    },
    "8269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8271": {
      "op": "DUP1"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8274": {
      "op": "DUP4"
    },
    "8275": {
      "op": "DUP6"
    },
    "8276": {
      "op": "SUB"
    },
    "8277": {
      "op": "SLT"
    },
    "8278": {
      "op": "ISZERO"
    },
    "8279": {
      "op": "PUSH2",
      "value": "0x205F"
    },
    "8282": {
      "op": "JUMPI"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8285": {
      "op": "DUP1"
    },
    "8286": {
      "op": "REVERT"
    },
    "8287": {
      "op": "JUMPDEST"
    },
    "8288": {
      "op": "PUSH2",
      "value": "0x2068"
    },
    "8291": {
      "op": "DUP4"
    },
    "8292": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "8295": {
      "jump": "i",
      "op": "JUMP"
    },
    "8296": {
      "op": "JUMPDEST"
    },
    "8297": {
      "op": "SWAP2"
    },
    "8298": {
      "op": "POP"
    },
    "8299": {
      "op": "PUSH2",
      "value": "0x2076"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8304": {
      "op": "DUP5"
    },
    "8305": {
      "op": "ADD"
    },
    "8306": {
      "op": "PUSH2",
      "value": "0x1E22"
    },
    "8309": {
      "jump": "i",
      "op": "JUMP"
    },
    "8310": {
      "op": "JUMPDEST"
    },
    "8311": {
      "op": "SWAP1"
    },
    "8312": {
      "op": "POP"
    },
    "8313": {
      "op": "SWAP3"
    },
    "8314": {
      "op": "POP"
    },
    "8315": {
      "op": "SWAP3"
    },
    "8316": {
      "op": "SWAP1"
    },
    "8317": {
      "op": "POP"
    },
    "8318": {
      "jump": "o",
      "op": "JUMP"
    },
    "8319": {
      "op": "JUMPDEST"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8322": {
      "op": "DUP2"
    },
    "8323": {
      "op": "DUP2"
    },
    "8324": {
      "op": "SHR"
    },
    "8325": {
      "op": "SWAP1"
    },
    "8326": {
      "op": "DUP3"
    },
    "8327": {
      "op": "AND"
    },
    "8328": {
      "op": "DUP1"
    },
    "8329": {
      "op": "PUSH2",
      "value": "0x2093"
    },
    "8332": {
      "op": "JUMPI"
    },
    "8333": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8335": {
      "op": "DUP3"
    },
    "8336": {
      "op": "AND"
    },
    "8337": {
      "op": "SWAP2"
    },
    "8338": {
      "op": "POP"
    },
    "8339": {
      "op": "JUMPDEST"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8342": {
      "op": "DUP3"
    },
    "8343": {
      "op": "LT"
    },
    "8344": {
      "op": "DUP2"
    },
    "8345": {
      "op": "EQ"
    },
    "8346": {
      "op": "ISZERO"
    },
    "8347": {
      "op": "PUSH2",
      "value": "0x20B4"
    },
    "8350": {
      "op": "JUMPI"
    },
    "8351": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8358": {
      "op": "SHL"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8361": {
      "op": "MSTORE"
    },
    "8362": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8366": {
      "op": "MSTORE"
    },
    "8367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8371": {
      "op": "REVERT"
    },
    "8372": {
      "op": "JUMPDEST"
    },
    "8373": {
      "op": "POP"
    },
    "8374": {
      "op": "SWAP2"
    },
    "8375": {
      "op": "SWAP1"
    },
    "8376": {
      "op": "POP"
    },
    "8377": {
      "jump": "o",
      "op": "JUMP"
    },
    "8378": {
      "op": "JUMPDEST"
    },
    "8379": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8384": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8386": {
      "op": "SHL"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8389": {
      "op": "MSTORE"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8394": {
      "op": "MSTORE"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8399": {
      "op": "REVERT"
    },
    "8400": {
      "op": "JUMPDEST"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8403": {
      "op": "DUP2"
    },
    "8404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8406": {
      "op": "NOT"
    },
    "8407": {
      "op": "DIV"
    },
    "8408": {
      "op": "DUP4"
    },
    "8409": {
      "op": "GT"
    },
    "8410": {
      "op": "DUP3"
    },
    "8411": {
      "op": "ISZERO"
    },
    "8412": {
      "op": "ISZERO"
    },
    "8413": {
      "op": "AND"
    },
    "8414": {
      "op": "ISZERO"
    },
    "8415": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8418": {
      "op": "JUMPI"
    },
    "8419": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8422": {
      "op": "PUSH2",
      "value": "0x20BA"
    },
    "8425": {
      "jump": "i",
      "op": "JUMP"
    },
    "8426": {
      "op": "JUMPDEST"
    },
    "8427": {
      "op": "POP"
    },
    "8428": {
      "op": "MUL"
    },
    "8429": {
      "op": "SWAP1"
    },
    "8430": {
      "jump": "o",
      "op": "JUMP"
    },
    "8431": {
      "op": "JUMPDEST"
    },
    "8432": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8439": {
      "op": "SHL"
    },
    "8440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8442": {
      "op": "MSTORE"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8447": {
      "op": "MSTORE"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8452": {
      "op": "REVERT"
    },
    "8453": {
      "op": "JUMPDEST"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8456": {
      "op": "DUP3"
    },
    "8457": {
      "op": "PUSH2",
      "value": "0x2114"
    },
    "8460": {
      "op": "JUMPI"
    },
    "8461": {
      "op": "PUSH2",
      "value": "0x2114"
    },
    "8464": {
      "op": "PUSH2",
      "value": "0x20EF"
    },
    "8467": {
      "jump": "i",
      "op": "JUMP"
    },
    "8468": {
      "op": "JUMPDEST"
    },
    "8469": {
      "op": "POP"
    },
    "8470": {
      "op": "DIV"
    },
    "8471": {
      "op": "SWAP1"
    },
    "8472": {
      "jump": "o",
      "op": "JUMP"
    },
    "8473": {
      "op": "JUMPDEST"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8476": {
      "op": "DUP3"
    },
    "8477": {
      "op": "DUP3"
    },
    "8478": {
      "op": "LT"
    },
    "8479": {
      "op": "ISZERO"
    },
    "8480": {
      "op": "PUSH2",
      "value": "0x212B"
    },
    "8483": {
      "op": "JUMPI"
    },
    "8484": {
      "op": "PUSH2",
      "value": "0x212B"
    },
    "8487": {
      "op": "PUSH2",
      "value": "0x20BA"
    },
    "8490": {
      "jump": "i",
      "op": "JUMP"
    },
    "8491": {
      "op": "JUMPDEST"
    },
    "8492": {
      "op": "POP"
    },
    "8493": {
      "op": "SUB"
    },
    "8494": {
      "op": "SWAP1"
    },
    "8495": {
      "jump": "o",
      "op": "JUMP"
    },
    "8496": {
      "op": "JUMPDEST"
    },
    "8497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8499": {
      "op": "DUP3"
    },
    "8500": {
      "op": "NOT"
    },
    "8501": {
      "op": "DUP3"
    },
    "8502": {
      "op": "GT"
    },
    "8503": {
      "op": "ISZERO"
    },
    "8504": {
      "op": "PUSH2",
      "value": "0x2143"
    },
    "8507": {
      "op": "JUMPI"
    },
    "8508": {
      "op": "PUSH2",
      "value": "0x2143"
    },
    "8511": {
      "op": "PUSH2",
      "value": "0x20BA"
    },
    "8514": {
      "jump": "i",
      "op": "JUMP"
    },
    "8515": {
      "op": "JUMPDEST"
    },
    "8516": {
      "op": "POP"
    },
    "8517": {
      "op": "ADD"
    },
    "8518": {
      "op": "SWAP1"
    },
    "8519": {
      "jump": "o",
      "op": "JUMP"
    },
    "8520": {
      "op": "JUMPDEST"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8523": {
      "op": "DUP1"
    },
    "8524": {
      "op": "DUP3"
    },
    "8525": {
      "op": "MSTORE"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "8528": {
      "op": "SWAP1"
    },
    "8529": {
      "op": "DUP3"
    },
    "8530": {
      "op": "ADD"
    },
    "8531": {
      "op": "MSTORE"
    },
    "8532": {
      "op": "PUSH32",
      "value": "0x4D656D62657273686970733A206E6F74207472616E7366657261626C65000000"
    },
    "8565": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8567": {
      "op": "DUP3"
    },
    "8568": {
      "op": "ADD"
    },
    "8569": {
      "op": "MSTORE"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8572": {
      "op": "ADD"
    },
    "8573": {
      "op": "SWAP1"
    },
    "8574": {
      "jump": "o",
      "op": "JUMP"
    },
    "8575": {
      "op": "JUMPDEST"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8578": {
      "op": "DUP1"
    },
    "8579": {
      "op": "DUP3"
    },
    "8580": {
      "op": "MSTORE"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "8583": {
      "op": "SWAP1"
    },
    "8584": {
      "op": "DUP3"
    },
    "8585": {
      "op": "ADD"
    },
    "8586": {
      "op": "MSTORE"
    },
    "8587": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8622": {
      "op": "DUP3"
    },
    "8623": {
      "op": "ADD"
    },
    "8624": {
      "op": "MSTORE"
    },
    "8625": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "8643": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "8645": {
      "op": "SHL"
    },
    "8646": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8648": {
      "op": "DUP3"
    },
    "8649": {
      "op": "ADD"
    },
    "8650": {
      "op": "MSTORE"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8653": {
      "op": "ADD"
    },
    "8654": {
      "op": "SWAP1"
    },
    "8655": {
      "jump": "o",
      "op": "JUMP"
    },
    "8656": {
      "op": "JUMPDEST"
    },
    "8657": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8662": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8664": {
      "op": "SHL"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8667": {
      "op": "MSTORE"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8672": {
      "op": "MSTORE"
    },
    "8673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8677": {
      "op": "REVERT"
    },
    "8678": {
      "op": "JUMPDEST"
    },
    "8679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8681": {
      "op": "DUP1"
    },
    "8682": {
      "op": "DUP3"
    },
    "8683": {
      "op": "MSTORE"
    },
    "8684": {
      "op": "DUP2"
    },
    "8685": {
      "op": "DUP2"
    },
    "8686": {
      "op": "ADD"
    },
    "8687": {
      "op": "MSTORE"
    },
    "8688": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8721": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8723": {
      "op": "DUP3"
    },
    "8724": {
      "op": "ADD"
    },
    "8725": {
      "op": "MSTORE"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8728": {
      "op": "ADD"
    },
    "8729": {
      "op": "SWAP1"
    },
    "8730": {
      "jump": "o",
      "op": "JUMP"
    },
    "8731": {
      "op": "JUMPDEST"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8734": {
      "op": "DUP5"
    },
    "8735": {
      "op": "MLOAD"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8738": {
      "op": "PUSH2",
      "value": "0x222E"
    },
    "8741": {
      "op": "DUP3"
    },
    "8742": {
      "op": "DUP6"
    },
    "8743": {
      "op": "DUP4"
    },
    "8744": {
      "op": "DUP11"
    },
    "8745": {
      "op": "ADD"
    },
    "8746": {
      "op": "PUSH2",
      "value": "0x1D9E"
    },
    "8749": {
      "jump": "i",
      "op": "JUMP"
    },
    "8750": {
      "op": "JUMPDEST"
    },
    "8751": {
      "op": "DUP6"
    },
    "8752": {
      "op": "MLOAD"
    },
    "8753": {
      "op": "SWAP2"
    },
    "8754": {
      "op": "DUP5"
    },
    "8755": {
      "op": "ADD"
    },
    "8756": {
      "op": "SWAP2"
    },
    "8757": {
      "op": "PUSH2",
      "value": "0x2241"
    },
    "8760": {
      "op": "DUP2"
    },
    "8761": {
      "op": "DUP5"
    },
    "8762": {
      "op": "DUP5"
    },
    "8763": {
      "op": "DUP11"
    },
    "8764": {
      "op": "ADD"
    },
    "8765": {
      "op": "PUSH2",
      "value": "0x1D9E"
    },
    "8768": {
      "jump": "i",
      "op": "JUMP"
    },
    "8769": {
      "op": "JUMPDEST"
    },
    "8770": {
      "op": "DUP6"
    },
    "8771": {
      "op": "SLOAD"
    },
    "8772": {
      "op": "SWAP3"
    },
    "8773": {
      "op": "ADD"
    },
    "8774": {
      "op": "SWAP2"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8777": {
      "op": "SWAP1"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8780": {
      "op": "DUP2"
    },
    "8781": {
      "op": "DUP2"
    },
    "8782": {
      "op": "SHR"
    },
    "8783": {
      "op": "SWAP1"
    },
    "8784": {
      "op": "DUP1"
    },
    "8785": {
      "op": "DUP4"
    },
    "8786": {
      "op": "AND"
    },
    "8787": {
      "op": "DUP1"
    },
    "8788": {
      "op": "PUSH2",
      "value": "0x225E"
    },
    "8791": {
      "op": "JUMPI"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8794": {
      "op": "DUP4"
    },
    "8795": {
      "op": "AND"
    },
    "8796": {
      "op": "SWAP3"
    },
    "8797": {
      "op": "POP"
    },
    "8798": {
      "op": "JUMPDEST"
    },
    "8799": {
      "op": "DUP6"
    },
    "8800": {
      "op": "DUP4"
    },
    "8801": {
      "op": "LT"
    },
    "8802": {
      "op": "DUP2"
    },
    "8803": {
      "op": "EQ"
    },
    "8804": {
      "op": "ISZERO"
    },
    "8805": {
      "op": "PUSH2",
      "value": "0x227C"
    },
    "8808": {
      "op": "JUMPI"
    },
    "8809": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8814": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8816": {
      "op": "SHL"
    },
    "8817": {
      "op": "DUP6"
    },
    "8818": {
      "op": "MSTORE"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8823": {
      "op": "MSTORE"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8826": {
      "op": "DUP6"
    },
    "8827": {
      "op": "REVERT"
    },
    "8828": {
      "op": "JUMPDEST"
    },
    "8829": {
      "op": "DUP1"
    },
    "8830": {
      "op": "DUP1"
    },
    "8831": {
      "op": "ISZERO"
    },
    "8832": {
      "op": "PUSH2",
      "value": "0x2290"
    },
    "8835": {
      "op": "JUMPI"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8838": {
      "op": "DUP2"
    },
    "8839": {
      "op": "EQ"
    },
    "8840": {
      "op": "PUSH2",
      "value": "0x22A1"
    },
    "8843": {
      "op": "JUMPI"
    },
    "8844": {
      "op": "PUSH2",
      "value": "0x22CE"
    },
    "8847": {
      "op": "JUMP"
    },
    "8848": {
      "op": "JUMPDEST"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8851": {
      "op": "NOT"
    },
    "8852": {
      "op": "DUP6"
    },
    "8853": {
      "op": "AND"
    },
    "8854": {
      "op": "DUP9"
    },
    "8855": {
      "op": "MSTORE"
    },
    "8856": {
      "op": "DUP4"
    },
    "8857": {
      "op": "DUP9"
    },
    "8858": {
      "op": "ADD"
    },
    "8859": {
      "op": "SWAP6"
    },
    "8860": {
      "op": "POP"
    },
    "8861": {
      "op": "PUSH2",
      "value": "0x22CE"
    },
    "8864": {
      "op": "JUMP"
    },
    "8865": {
      "op": "JUMPDEST"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8868": {
      "op": "DUP12"
    },
    "8869": {
      "op": "DUP2"
    },
    "8870": {
      "op": "MSTORE"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8873": {
      "op": "SWAP1"
    },
    "8874": {
      "op": "KECCAK256"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8877": {
      "op": "JUMPDEST"
    },
    "8878": {
      "op": "DUP6"
    },
    "8879": {
      "op": "DUP2"
    },
    "8880": {
      "op": "LT"
    },
    "8881": {
      "op": "ISZERO"
    },
    "8882": {
      "op": "PUSH2",
      "value": "0x22C6"
    },
    "8885": {
      "op": "JUMPI"
    },
    "8886": {
      "op": "DUP2"
    },
    "8887": {
      "op": "SLOAD"
    },
    "8888": {
      "op": "DUP11"
    },
    "8889": {
      "op": "DUP3"
    },
    "8890": {
      "op": "ADD"
    },
    "8891": {
      "op": "MSTORE"
    },
    "8892": {
      "op": "SWAP1"
    },
    "8893": {
      "op": "DUP5"
    },
    "8894": {
      "op": "ADD"
    },
    "8895": {
      "op": "SWAP1"
    },
    "8896": {
      "op": "DUP9"
    },
    "8897": {
      "op": "ADD"
    },
    "8898": {
      "op": "PUSH2",
      "value": "0x22AD"
    },
    "8901": {
      "op": "JUMP"
    },
    "8902": {
      "op": "JUMPDEST"
    },
    "8903": {
      "op": "POP"
    },
    "8904": {
      "op": "POP"
    },
    "8905": {
      "op": "DUP4"
    },
    "8906": {
      "op": "DUP9"
    },
    "8907": {
      "op": "ADD"
    },
    "8908": {
      "op": "SWAP6"
    },
    "8909": {
      "op": "POP"
    },
    "8910": {
      "op": "JUMPDEST"
    },
    "8911": {
      "op": "POP"
    },
    "8912": {
      "op": "SWAP4"
    },
    "8913": {
      "op": "SWAP12"
    },
    "8914": {
      "op": "SWAP11"
    },
    "8915": {
      "op": "POP"
    },
    "8916": {
      "op": "POP"
    },
    "8917": {
      "op": "POP"
    },
    "8918": {
      "op": "POP"
    },
    "8919": {
      "op": "POP"
    },
    "8920": {
      "op": "POP"
    },
    "8921": {
      "op": "POP"
    },
    "8922": {
      "op": "POP"
    },
    "8923": {
      "op": "POP"
    },
    "8924": {
      "op": "POP"
    },
    "8925": {
      "op": "POP"
    },
    "8926": {
      "jump": "o",
      "op": "JUMP"
    },
    "8927": {
      "op": "JUMPDEST"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8930": {
      "op": "DUP1"
    },
    "8931": {
      "op": "DUP3"
    },
    "8932": {
      "op": "MSTORE"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8935": {
      "op": "SWAP1"
    },
    "8936": {
      "op": "DUP3"
    },
    "8937": {
      "op": "ADD"
    },
    "8938": {
      "op": "MSTORE"
    },
    "8939": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8974": {
      "op": "DUP3"
    },
    "8975": {
      "op": "ADD"
    },
    "8976": {
      "op": "MSTORE"
    },
    "8977": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "8998": {
      "op": "SHL"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9001": {
      "op": "DUP3"
    },
    "9002": {
      "op": "ADD"
    },
    "9003": {
      "op": "MSTORE"
    },
    "9004": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9006": {
      "op": "ADD"
    },
    "9007": {
      "op": "SWAP1"
    },
    "9008": {
      "jump": "o",
      "op": "JUMP"
    },
    "9009": {
      "op": "JUMPDEST"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9014": {
      "op": "NOT"
    },
    "9015": {
      "op": "DUP3"
    },
    "9016": {
      "op": "EQ"
    },
    "9017": {
      "op": "ISZERO"
    },
    "9018": {
      "op": "PUSH2",
      "value": "0x2345"
    },
    "9021": {
      "op": "JUMPI"
    },
    "9022": {
      "op": "PUSH2",
      "value": "0x2345"
    },
    "9025": {
      "op": "PUSH2",
      "value": "0x20BA"
    },
    "9028": {
      "jump": "i",
      "op": "JUMP"
    },
    "9029": {
      "op": "JUMPDEST"
    },
    "9030": {
      "op": "POP"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9033": {
      "op": "ADD"
    },
    "9034": {
      "op": "SWAP1"
    },
    "9035": {
      "jump": "o",
      "op": "JUMP"
    },
    "9036": {
      "op": "JUMPDEST"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9039": {
      "op": "DUP3"
    },
    "9040": {
      "op": "PUSH2",
      "value": "0x235B"
    },
    "9043": {
      "op": "JUMPI"
    },
    "9044": {
      "op": "PUSH2",
      "value": "0x235B"
    },
    "9047": {
      "op": "PUSH2",
      "value": "0x20EF"
    },
    "9050": {
      "jump": "i",
      "op": "JUMP"
    },
    "9051": {
      "op": "JUMPDEST"
    },
    "9052": {
      "op": "POP"
    },
    "9053": {
      "op": "MOD"
    },
    "9054": {
      "op": "SWAP1"
    },
    "9055": {
      "jump": "o",
      "op": "JUMP"
    },
    "9056": {
      "op": "JUMPDEST"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9063": {
      "op": "SHL"
    },
    "9064": {
      "op": "SUB"
    },
    "9065": {
      "op": "DUP6"
    },
    "9066": {
      "op": "DUP2"
    },
    "9067": {
      "op": "AND"
    },
    "9068": {
      "op": "DUP3"
    },
    "9069": {
      "op": "MSTORE"
    },
    "9070": {
      "op": "DUP5"
    },
    "9071": {
      "op": "AND"
    },
    "9072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9074": {
      "op": "DUP3"
    },
    "9075": {
      "op": "ADD"
    },
    "9076": {
      "op": "MSTORE"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9079": {
      "op": "DUP2"
    },
    "9080": {
      "op": "ADD"
    },
    "9081": {
      "op": "DUP4"
    },
    "9082": {
      "op": "SWAP1"
    },
    "9083": {
      "op": "MSTORE"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9088": {
      "op": "DUP3"
    },
    "9089": {
      "op": "ADD"
    },
    "9090": {
      "op": "DUP2"
    },
    "9091": {
      "op": "SWAP1"
    },
    "9092": {
      "op": "MSTORE"
    },
    "9093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9095": {
      "op": "SWAP1"
    },
    "9096": {
      "op": "PUSH2",
      "value": "0x2393"
    },
    "9099": {
      "op": "SWAP1"
    },
    "9100": {
      "op": "DUP4"
    },
    "9101": {
      "op": "ADD"
    },
    "9102": {
      "op": "DUP5"
    },
    "9103": {
      "op": "PUSH2",
      "value": "0x1DCA"
    },
    "9106": {
      "jump": "i",
      "op": "JUMP"
    },
    "9107": {
      "op": "JUMPDEST"
    },
    "9108": {
      "op": "SWAP7"
    },
    "9109": {
      "op": "SWAP6"
    },
    "9110": {
      "op": "POP"
    },
    "9111": {
      "op": "POP"
    },
    "9112": {
      "op": "POP"
    },
    "9113": {
      "op": "POP"
    },
    "9114": {
      "op": "POP"
    },
    "9115": {
      "op": "POP"
    },
    "9116": {
      "jump": "o",
      "op": "JUMP"
    },
    "9117": {
      "op": "JUMPDEST"
    },
    "9118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9122": {
      "op": "DUP3"
    },
    "9123": {
      "op": "DUP5"
    },
    "9124": {
      "op": "SUB"
    },
    "9125": {
      "op": "SLT"
    },
    "9126": {
      "op": "ISZERO"
    },
    "9127": {
      "op": "PUSH2",
      "value": "0x23AF"
    },
    "9130": {
      "op": "JUMPI"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9133": {
      "op": "DUP1"
    },
    "9134": {
      "op": "REVERT"
    },
    "9135": {
      "op": "JUMPDEST"
    },
    "9136": {
      "op": "DUP2"
    },
    "9137": {
      "op": "MLOAD"
    },
    "9138": {
      "op": "PUSH2",
      "value": "0x1096"
    },
    "9141": {
      "op": "DUP2"
    },
    "9142": {
      "op": "PUSH2",
      "value": "0x1D6B"
    },
    "9145": {
      "jump": "i",
      "op": "JUMP"
    },
    "9146": {
      "op": "JUMPDEST"
    },
    "9147": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9152": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9154": {
      "op": "SHL"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9157": {
      "op": "MSTORE"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9162": {
      "op": "MSTORE"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9167": {
      "op": "REVERT"
    }
  },
  "sha1": "3c91bc4fe36de436df674d21272623415ed40b73",
  "source": "// SPDX-License-Identifier: MIT\n\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract NFT is ERC721Enumerable, Ownable {\n\n    using Strings for uint256;\n\n    uint256 public cost = 1 ether;\n    uint256 public maxSupply = 20;\n\n    string baseURI;\n    string public baseExtension = \".json\";\n\n    address public artist;\n    uint256 public royalityFee;\n\n\n    bool public transferable_;\n\n    // Events\n    event Sale(address from, address to, uint256 value);\n\n    event ToggleTransferable(bool transferable);\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _initBaseURI,\n        uint256 _royalityFee,\n        address _artist,\n        bool _transferable\n    ) ERC721(_name, _symbol) {\n        setBaseURI(_initBaseURI);\n        royalityFee = _royalityFee;\n        artist = _artist;\n        transferable_ = _transferable;\n    }\n\n\n\n    // External functions\n    function toggleTransferable() external onlyOwner returns (bool) {\n        if (transferable_) {\n            transferable_ = false;\n        } else {\n            transferable_ = true;\n        }\n        emit ToggleTransferable(transferable_);\n        return transferable_;\n    }\n\n\n    // Public functions\n    function transferable() public view returns (bool) {\n        return transferable_;\n    }\n\n    function mint() public payable {\n        uint256 supply = totalSupply();\n        require(supply <= maxSupply);\n\n        if (msg.sender != owner()) {\n            require(msg.value >= cost);\n\n            // Pay royality to artist, and remaining to deployer of contract\n\n            uint256 royality = (msg.value * royalityFee) / 100;\n            _payRoyality(royality);\n\n            (bool success2, ) = payable(owner()).call{\n                value: (msg.value - royality)\n            }(\"\");\n            require(success2);\n        }\n\n        _safeMint(msg.sender, supply + 1);\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n\n        string memory currentBaseURI = _baseURI();\n        return\n            bytes(currentBaseURI).length > 0\n                ? string(\n                    abi.encodePacked(\n                        currentBaseURI,\n                        tokenId.toString(),\n                        baseExtension\n                    )\n                )\n                : \"\";\n    }\n\n    // Added isTransferable only\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable override isTransferable{\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        if (msg.value > 0) {\n            uint256 royality = (msg.value * royalityFee) / 100;\n            _payRoyality(royality);\n\n            (bool success2, ) = payable(from).call{value: msg.value - royality}(\n                \"\"\n            );\n            require(success2);\n\n            emit Sale(from, to, msg.value);\n        }\n\n        _transfer(from, to, tokenId);\n    }\n\n    // Added isTransferable only\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable override isTransferable{\n        if (msg.value > 0) {\n            uint256 royality = (msg.value * royalityFee) / 100;\n            _payRoyality(royality);\n\n            (bool success2, ) = payable(from).call{value: msg.value - royality}(\n                \"\"\n            );\n            require(success2);\n\n            emit Sale(from, to, msg.value);\n        }\n\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    // Added isTransferable only\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable override isTransferable {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        if (msg.value > 0) {\n            uint256 royality = (msg.value * royalityFee) / 100;\n            _payRoyality(royality);\n\n            (bool success2, ) = payable(from).call{value: msg.value - royality}(\n                \"\"\n            );\n            require(success2);\n\n            emit Sale(from, to, msg.value);\n        }\n\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    // Internal functions\n    function _baseURI() internal view virtual override returns (string memory) {\n        return baseURI;\n    }\n\n    function _payRoyality(uint256 _royalityFee) internal {\n        (bool success1, ) = payable(artist).call{value: _royalityFee}(\"\");\n        require(success1);\n    }\n\n    // Owner functions\n    function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        baseURI = _newBaseURI;\n    }\n\n    function setRoyalityFee(uint256 _royalityFee) public onlyOwner {\n        royalityFee = _royalityFee;\n    }\n\n    // Modifiers\n    modifier isTransferable() {\n        require(transferable() == true, \"Memberships: not transferable\");\n        _;\n    }\n}\n",
  "sourceMap": "279:7:13:-:0;257:29;;319:2;292:29;;348:37;176:5124;348:37;;176:5124;348:37;;;-1:-1:-1;;;348:37:13;;;;;;;;;;:::i;:::-;;607:362;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1807:13:7;;811:5:13;;818:7;;1807:13:7;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1830:17:7;;;;:7;;:17;;;;;:::i;:::-;;1741:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;837:24:13::1;848:12:::0;837:10:::1;:24::i;:::-;871:11;:26:::0;;;;907:6:::1;:16:::0;;-1:-1:-1;;;;;;907:16:13::1;-1:-1:-1::0;;;;;907:16:13;;;::::1;::::0;;;::::1;::::0;;933:13:::1;:29:::0;;-1:-1:-1;;933:29:13::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;176:5124:13;;-1:-1:-1;;176:5124:13;640:96:3;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;4943:102:13:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;2488:2:14;1240:68:0;;;2470:21:14;;;2507:18;;;2500:30;2566:34;2546:18;;;2539:62;2618:18;;1240:68:0;;;;;;;;5017:21:13;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;:::-;;4943:102:::0;:::o;176:5124::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;176:5124:13;;;-1:-1:-1;176:5124:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:14:o;1036:164::-;1112:13;;1161;;1154:21;1144:32;;1134:60;;1190:1;1187;1180:12;1134:60;1036:164;;;:::o;1205:1076::-;1347:6;1355;1363;1371;1379;1387;1440:3;1428:9;1419:7;1415:23;1411:33;1408:53;;;1457:1;1454;1447:12;1408:53;1484:16;;-1:-1:-1;;;;;1549:14:14;;;1546:34;;;1576:1;1573;1566:12;1546:34;1599:61;1652:7;1643:6;1632:9;1628:22;1599:61;:::i;:::-;1589:71;;1706:2;1695:9;1691:18;1685:25;1669:41;;1735:2;1725:8;1722:16;1719:36;;;1751:1;1748;1741:12;1719:36;1774:63;1829:7;1818:8;1807:9;1803:24;1774:63;:::i;:::-;1764:73;;1883:2;1872:9;1868:18;1862:25;1846:41;;1912:2;1902:8;1899:16;1896:36;;;1928:1;1925;1918:12;1896:36;;1951:63;2006:7;1995:8;1984:9;1980:24;1951:63;:::i;:::-;2054:2;2039:18;;2033:25;2101:3;2086:19;;2080:26;1941:73;;-1:-1:-1;2033:25:14;-1:-1:-1;2080:26:14;-1:-1:-1;;;;;;2135:31:14;;2125:42;;2115:70;;2181:1;2178;2171:12;2115:70;2204:5;-1:-1:-1;2228:47:14;2270:3;2255:19;;2228:47;:::i;:::-;2218:57;;1205:1076;;;;;;;;:::o;2647:380::-;2726:1;2722:12;;;;2769;;;2790:61;;2844:4;2836:6;2832:17;2822:27;;2790:61;2897:2;2889:6;2886:14;2866:18;2863:38;2860:161;;;2943:10;2938:3;2934:20;2931:1;2924:31;2978:4;2975:1;2968:15;3006:4;3003:1;2996:15;2860:161;;2647:380;;;:::o;:::-;176:5124:13;;;;;;",
  "sourcePath": "contracts/NFT.sol",
  "type": "contract"
}