{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC721/IERC721Receiver.sol",
    "11": "contracts/IERC721Metadata.sol",
    "2": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Address.sol",
    "3": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "4": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Strings.sol",
    "5": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/introspection/ERC165.sol",
    "6": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/introspection/IERC165.sol",
    "7": "contracts/ERC721.sol",
    "9": "contracts/IERC721.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        2200
      ],
      "Context": [
        2222
      ],
      "ERC165": [
        2449
      ],
      "ERC721": [
        830
      ],
      "IERC165": [
        2461
      ],
      "IERC721": [
        1284
      ],
      "IERC721Metadata": [
        1342
      ],
      "IERC721Receiver": [
        1903
      ],
      "Strings": [
        2425
      ]
    },
    "id": 831,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:7"
      },
      {
        "absolutePath": "contracts/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 831,
        "sourceUnit": 1285,
        "src": "387:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 831,
        "sourceUnit": 1904,
        "src": "411:66:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 831,
        "sourceUnit": 1343,
        "src": "478:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 831,
        "sourceUnit": 2201,
        "src": "510:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 831,
        "sourceUnit": 2223,
        "src": "562:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 831,
        "sourceUnit": 2426,
        "src": "614:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dex/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 831,
        "sourceUnit": 2450,
        "src": "666:64:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2222,
              "src": "998:7:7"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "998:7:7"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2449,
              "src": "1007:6:7"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "1007:6:7"
          },
          {
            "baseName": {
              "id": 14,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1284,
              "src": "1015:7:7"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "1015:7:7"
          },
          {
            "baseName": {
              "id": 16,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1342,
              "src": "1024:15:7"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "1024:15:7"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "732:246:7",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 830,
        "linearizedBaseContracts": [
          830,
          1342,
          1284,
          2449,
          2461,
          2222
        ],
        "name": "ERC721",
        "nameLocation": "988:6:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20,
            "libraryName": {
              "id": 18,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2200,
              "src": "1052:7:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1046:26:7",
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1064:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 23,
            "libraryName": {
              "id": 21,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2425,
              "src": "1083:7:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1077:26:7",
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1095:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1142:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 830,
            "src": "1127:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1127:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1189:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 830,
            "src": "1174:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 26,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1174:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 31,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "1285:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 830,
            "src": "1249:43:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1257:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1249:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1268:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1379:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 830,
            "src": "1343:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1351:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1343:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 33,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1362:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1480:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 830,
            "src": "1444:51:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 36,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1452:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1444:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1463:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1603:18:7",
            "nodeType": "VariableDeclaration",
            "scope": 830,
            "src": "1550:71:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 44,
              "keyType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1558:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1550:44:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 43,
                "keyType": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1577:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1569:24:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 42,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1588:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1797:57:7",
              "statements": [
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1807:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1815:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1807:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:13:7"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1830:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1840:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1830:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:17:7"
                }
              ]
            },
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "1628:108:7",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 62,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1767:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1753:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1788:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1774:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1774:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:44:7"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:0:7"
            },
            "scope": 830,
            "src": "1741:113:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2448,
              2460
            ],
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "2073:192:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "2102:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 75,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1284,
                                "src": "2122:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1284_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1284_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 74,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2117:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2117:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1284",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "2117:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2102:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "2158:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 81,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1342,
                                "src": "2178:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1342_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1342_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 80,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2173:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2173:21:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1342",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "2173:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2158:48:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2102:104:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 88,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "2246:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 86,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "2222:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$830_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2448,
                        "src": "2222:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2222:36:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2102:156:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 72,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "2083:175:7"
                }
              ]
            },
            "documentation": {
              "id": 63,
              "nodeType": "StructuredDocumentation",
              "src": "1860:56:7",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1930:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 69,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 67,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2449,
                  "src": "2029:6:7"
                },
                {
                  "id": 68,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2461,
                  "src": "2037:7:7"
                }
              ],
              "src": "2020:25:7"
            },
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1955:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1948:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:20:7"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2063:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:6:7"
            },
            "scope": 830,
            "src": "1921:344:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1209
            ],
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "2449:158:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 103,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "2480:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2497:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2489:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 104,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2489:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2489:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2480:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2513:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2459:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2459:108:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2459:108:7"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 112,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2584:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 114,
                    "indexExpression": {
                      "id": 113,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "2594:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2584:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101,
                  "id": 115,
                  "nodeType": "Return",
                  "src": "2577:23:7"
                }
              ]
            },
            "documentation": {
              "id": 94,
              "nodeType": "StructuredDocumentation",
              "src": "2271:48:7",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2333:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 98,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2410:8:7"
            },
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2351:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "2343:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2343:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2342:15:7"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "2436:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2435:9:7"
            },
            "scope": 830,
            "src": "2324:283:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1217
            ],
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "2789:188:7",
              "statements": [
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2807:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "2799:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2799:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "baseExpression": {
                      "id": 128,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2815:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 130,
                    "indexExpression": {
                      "id": 129,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "2823:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2815:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2799:32:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 133,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "2862:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2879:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2871:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 134,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2871:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2871:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2862:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2895:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2841:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2841:107:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:107:7"
                },
                {
                  "expression": {
                    "id": 142,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "2965:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 143,
                  "nodeType": "Return",
                  "src": "2958:12:7"
                }
              ]
            },
            "documentation": {
              "id": 118,
              "nodeType": "StructuredDocumentation",
              "src": "2613:46:7",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2673:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 122,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2750:8:7"
            },
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2689:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "2681:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2680:17:7"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "2776:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2775:9:7"
            },
            "scope": 830,
            "src": "2664:313:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1327
            ],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "3108:29:7",
              "statements": [
                {
                  "expression": {
                    "id": 152,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "3125:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 151,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "3118:12:7"
                }
              ]
            },
            "documentation": {
              "id": 146,
              "nodeType": "StructuredDocumentation",
              "src": "2983:51:7",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "3048:4:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 148,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3075:8:7"
            },
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3052:2:7"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3093:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3093:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3092:15:7"
            },
            "scope": 830,
            "src": "3039:98:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1333
            ],
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "3272:31:7",
              "statements": [
                {
                  "expression": {
                    "id": 162,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "3289:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 161,
                  "id": 163,
                  "nodeType": "Return",
                  "src": "3282:14:7"
                }
              ]
            },
            "documentation": {
              "id": 156,
              "nodeType": "StructuredDocumentation",
              "src": "3143:53:7",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3210:6:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 158,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3239:8:7"
            },
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3216:2:7"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "3257:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3257:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3256:15:7"
            },
            "scope": 830,
            "src": "3201:102:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1341
            ],
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "3501:319:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 176,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "3540:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 175,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "3532:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3532:16:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3562:49:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3511:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3511:110:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3511:110:7"
                },
                {
                  "assignments": [
                    182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 182,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3646:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 206,
                      "src": "3632:21:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 181,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3632:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 185,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 183,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "3656:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3656:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3632:34:7"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 188,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "3701:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3695:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 186,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3695:5:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3695:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3695:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3719:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3695:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3811:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3695:118:7",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 197,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "3763:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 198,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 168,
                                  "src": "3772:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2307,
                                "src": "3772:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3772:18:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 195,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3746:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3746:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3746:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3739:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3739:6:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3739:53:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 173,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "3676:137:7"
                }
              ]
            },
            "documentation": {
              "id": 166,
              "nodeType": "StructuredDocumentation",
              "src": "3309:55:7",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3378:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3456:8:7"
            },
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3395:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "3387:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3386:17:7"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "3482:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3481:15:7"
            },
            "scope": 830,
            "src": "3369:451:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "4127:26:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4144:2:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 212,
                  "id": 214,
                  "nodeType": "Return",
                  "src": "4137:9:7"
                }
              ]
            },
            "documentation": {
              "id": 208,
              "nodeType": "StructuredDocumentation",
              "src": "3826:230:7",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "4070:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4078:2:7"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "4112:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4112:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4111:15:7"
            },
            "scope": 830,
            "src": "4061:92:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1245
            ],
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "4280:331:7",
              "statements": [
                {
                  "assignments": [
                    226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 226,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4298:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 258,
                      "src": "4290:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 225,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4290:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 229,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "4321:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 227,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "4306:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 145,
                      "src": "4306:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4306:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4290:39:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 233,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "4347:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 234,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "4353:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4347:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4360:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4339:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 240,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2212,
                              "src": "4428:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4428:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 242,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4444:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4428:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 245,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "4470:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 246,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2212,
                                "src": "4477:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4477:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 244,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "4453:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4453:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4428:62:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4504:58:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4407:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4407:165:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:165:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "4592:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 255,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "4596:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 253,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "4583:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "4583:21:7"
                }
              ]
            },
            "documentation": {
              "id": 217,
              "nodeType": "StructuredDocumentation",
              "src": "4159:46:7",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4219:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 223,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4271:8:7"
            },
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4235:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "4227:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4227:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4247:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "4239:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4226:29:7"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4280:0:7"
            },
            "scope": 830,
            "src": "4210:401:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1253
            ],
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "4801:166:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 270,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "4840:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 269,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "4832:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4832:16:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4862:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4811:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:107:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "4811:107:7"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 275,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4936:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 277,
                    "indexExpression": {
                      "id": 276,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "4952:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4936:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 267,
                  "id": 278,
                  "nodeType": "Return",
                  "src": "4929:31:7"
                }
              ]
            },
            "documentation": {
              "id": 260,
              "nodeType": "StructuredDocumentation",
              "src": "4617:50:7",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4681:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 264,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4762:8:7"
            },
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4701:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "4693:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4693:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4692:17:7"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "4788:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4788:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4787:9:7"
            },
            "scope": 830,
            "src": "4672:295:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1261
            ],
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "5146:69:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 290,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2212,
                          "src": "5175:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5175:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 292,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "5189:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 293,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "5199:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 289,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 756,
                      "src": "5156:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:52:7"
                }
              ]
            },
            "documentation": {
              "id": 281,
              "nodeType": "StructuredDocumentation",
              "src": "4973:56:7",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "5043:17:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 287,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5133:8:7"
            },
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5069:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "5061:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5061:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "5084:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "5079:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5079:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5060:33:7"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5146:0:7"
            },
            "scope": 830,
            "src": "5034:181:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1271
            ],
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "5428:59:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 308,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "5445:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 310,
                      "indexExpression": {
                        "id": 309,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "5464:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5445:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 312,
                    "indexExpression": {
                      "id": 311,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "5471:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5445:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 307,
                  "id": 313,
                  "nodeType": "Return",
                  "src": "5438:42:7"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "5221:55:7",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "5290:16:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5392:8:7"
            },
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5315:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "5307:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5330:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "5322:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5322:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5306:33:7"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "5418:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5418:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5417:6:7"
            },
            "scope": 830,
            "src": "5281:206:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1237
            ],
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "5676:245:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 328,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2212,
                              "src": "5778:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5778:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 330,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "5792:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 327,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "5759:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5759:41:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5814:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5738:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5738:137:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "5738:137:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 336,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "5896:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 337,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5902:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 338,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "5906:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 335,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "5886:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5886:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "5886:28:7"
                }
              ]
            },
            "documentation": {
              "id": 316,
              "nodeType": "StructuredDocumentation",
              "src": "5493:51:7",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5558:12:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 324,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5667:8:7"
            },
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5588:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "5580:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5580:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5610:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "5602:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5602:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5630:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "5622:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5622:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5570:73:7"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5676:0:7"
            },
            "scope": 830,
            "src": "5549:372:7",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1227
            ],
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "6118:56:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "6145:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 355,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "6151:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 356,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "6155:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6164:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 353,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        361,
                        391
                      ],
                      "referencedDeclaration": 391,
                      "src": "6128:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6128:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "6128:39:7"
                }
              ]
            },
            "documentation": {
              "id": 343,
              "nodeType": "StructuredDocumentation",
              "src": "5927:55:7",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5996:16:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 351,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6109:8:7"
            },
            "parameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6030:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "6022:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6022:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6052:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "6044:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6044:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6072:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "6064:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6064:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6012:73:7"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6118:0:7"
            },
            "scope": 830,
            "src": "5987:187:7",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1283
            ],
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "6399:203:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 376,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2212,
                              "src": "6449:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6449:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 378,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "6463:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 375,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "6430:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6430:41:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6485:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6409:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6409:137:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "6409:137:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 384,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "6570:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 385,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "6576:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 386,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "6580:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 387,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "6589:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 383,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "6556:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6556:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "6556:39:7"
                }
              ]
            },
            "documentation": {
              "id": 362,
              "nodeType": "StructuredDocumentation",
              "src": "6180:55:7",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "6249:16:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 372,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6390:8:7"
            },
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6283:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "6275:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6275:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6305:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "6297:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6297:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6325:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "6317:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6317:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6355:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "6342:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6342:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6265:101:7"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6399:0:7"
            },
            "scope": 830,
            "src": "6240:362:7",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "7605:200:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 404,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "7625:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 405,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "7631:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 406,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "7635:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 403,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "7615:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7615:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "7615:28:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 411,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "7697:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 412,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "7703:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 413,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "7707:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 414,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "7716:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 410,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "7674:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7674:48:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7736:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7653:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:145:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:145:7"
                }
              ]
            },
            "documentation": {
              "id": 392,
              "nodeType": "StructuredDocumentation",
              "src": "6608:851:7",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "7473:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7504:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "7496:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7496:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7526:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "7518:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7518:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7546:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "7538:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7538:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "7576:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "7563:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7563:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7486:101:7"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7605:0:7"
            },
            "scope": 830,
            "src": "7464:341:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "8179:54:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 428,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "8196:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 430,
                      "indexExpression": {
                        "id": 429,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "8204:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8196:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8224:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8216:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8216:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8216:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8196:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 427,
                  "id": 436,
                  "nodeType": "Return",
                  "src": "8189:37:7"
                }
              ]
            },
            "documentation": {
              "id": 421,
              "nodeType": "StructuredDocumentation",
              "src": "7811:292:7",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "8117:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8133:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "8125:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8125:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8124:17:7"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "8173:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8173:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8172:6:7"
            },
            "scope": 830,
            "src": "8108:125:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "8526:303:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 450,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "8565:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 449,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "8557:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8557:16:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8587:46:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8536:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8536:107:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "8536:107:7"
                },
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8661:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "8653:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 455,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8653:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 461,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 459,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "8684:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 457,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "8669:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 145,
                      "src": "8669:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8669:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8653:39:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 462,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "8710:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 463,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "8721:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8710:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 466,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "8754:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 465,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "8742:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8742:20:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 468,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "8766:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8742:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8710:63:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 472,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "8806:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 473,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "8813:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 471,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "8789:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8789:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8710:111:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 476,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8709:113:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 447,
                  "id": 477,
                  "nodeType": "Return",
                  "src": "8702:120:7"
                }
              ]
            },
            "documentation": {
              "id": 439,
              "nodeType": "StructuredDocumentation",
              "src": "8239:147:7",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "8400:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8427:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "8419:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8444:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "8436:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8436:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8418:34:7"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "8516:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8516:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8515:6:7"
            },
            "scope": 830,
            "src": "8391:438:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "9224:43:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 488,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "9244:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 489,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "9248:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9257:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 487,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        494,
                        523
                      ],
                      "referencedDeclaration": 523,
                      "src": "9234:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9234:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "9234:26:7"
                }
              ]
            },
            "documentation": {
              "id": 480,
              "nodeType": "StructuredDocumentation",
              "src": "8835:319:7",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "9168:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9186:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "9178:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9178:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9198:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "9190:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9190:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9177:29:7"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9224:0:7"
            },
            "scope": 830,
            "src": "9159:108:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "9603:196:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "9619:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 506,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "9623:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 504,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "9613:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9613:18:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "9613:18:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9693:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9685:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 511,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9685:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9685:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 515,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "9697:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 516,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "9701:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 517,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 501,
                            "src": "9710:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 510,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "9662:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9662:54:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9730:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9641:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9641:151:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "9641:151:7"
                }
              ]
            },
            "documentation": {
              "id": 495,
              "nodeType": "StructuredDocumentation",
              "src": "9273:210:7",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "9497:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9524:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "9516:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9516:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9544:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "9536:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9536:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9574:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "9561:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9561:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9506:79:7"
            },
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9603:0:7"
            },
            "scope": 830,
            "src": "9488:311:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "10182:311:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 532,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "10200:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10214:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10206:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 533,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10206:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10206:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10200:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10218:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10192:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10192:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "10192:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10271:17:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 543,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "10280:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 542,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "10272:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10272:16:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10290:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10263:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10263:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "10263:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10361:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10353:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 550,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10353:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10353:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 554,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "10365:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 555,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "10369:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 549,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "10332:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10332:45:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "10332:45:7"
                },
                {
                  "expression": {
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 558,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "10388:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 560,
                      "indexExpression": {
                        "id": 559,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "10398:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10388:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10405:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10388:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "10388:18:7"
                },
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 564,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "10416:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 566,
                      "indexExpression": {
                        "id": 565,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "10424:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10416:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 567,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "10435:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10416:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "10416:21:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10470:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10462:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 571,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10462:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10462:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 575,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "10474:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 576,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "10478:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 570,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "10453:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10453:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 578,
                  "nodeType": "EmitStatement",
                  "src": "10448:38:7"
                }
              ]
            },
            "documentation": {
              "id": 524,
              "nodeType": "StructuredDocumentation",
              "src": "9805:311:7",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10130:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10144:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "10136:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10136:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10156:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "10148:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10148:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10135:29:7"
            },
            "returnParameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10182:0:7"
            },
            "scope": 830,
            "src": "10121:372:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "10759:299:7",
              "statements": [
                {
                  "assignments": [
                    587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 587,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "10777:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "10769:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 586,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10769:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 592,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 590,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "10800:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 588,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "10785:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 145,
                      "src": "10785:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10785:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10769:39:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 594,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "10840:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10855:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10847:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 595,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10847:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10847:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 599,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "10859:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 593,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "10819:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10819:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "10819:48:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10922:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10914:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 603,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10914:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10914:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 607,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "10926:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 602,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "10905:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10905:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "10905:29:7"
                },
                {
                  "expression": {
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 610,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "10945:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 612,
                      "indexExpression": {
                        "id": 611,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "10955:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10945:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10965:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10945:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "10945:21:7"
                },
                {
                  "expression": {
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10976:23:7",
                    "subExpression": {
                      "baseExpression": {
                        "id": 616,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "10983:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 618,
                      "indexExpression": {
                        "id": 617,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "10991:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10983:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "10976:23:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 622,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "11024:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11039:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11031:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 623,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11031:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11031:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 627,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "11043:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 621,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "11015:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11015:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 629,
                  "nodeType": "EmitStatement",
                  "src": "11010:41:7"
                }
              ]
            },
            "documentation": {
              "id": 581,
              "nodeType": "StructuredDocumentation",
              "src": "10499:206:7",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10719:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10733:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "10725:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10725:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10724:17:7"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10759:0:7"
            },
            "scope": 830,
            "src": "10710:348:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 699,
              "nodeType": "Block",
              "src": "11491:485:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 644,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "11537:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 642,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 830,
                              "src": "11522:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 145,
                            "src": "11522:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11522:23:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 646,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "11549:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11522:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11567:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11501:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11501:119:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "11501:119:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 652,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 636,
                          "src": "11638:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11652:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11644:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 653,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11644:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11644:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11638:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11656:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 651,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11630:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11630:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 660,
                  "nodeType": "ExpressionStatement",
                  "src": "11630:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 662,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11727:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 663,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "11733:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 664,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "11737:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 661,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "11706:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11706:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "11706:39:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11824:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11816:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 668,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11816:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11816:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 672,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "11828:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 667,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "11807:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11807:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "11807:29:7"
                },
                {
                  "expression": {
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 675,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "11847:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 677,
                      "indexExpression": {
                        "id": 676,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11857:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11847:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11866:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11847:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "11847:20:7"
                },
                {
                  "expression": {
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 681,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "11877:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 683,
                      "indexExpression": {
                        "id": 682,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "11887:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11877:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11894:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11877:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "11877:18:7"
                },
                {
                  "expression": {
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 687,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "11905:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 689,
                      "indexExpression": {
                        "id": 688,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "11913:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11905:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 690,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "11924:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11905:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "11905:21:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 694,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "11951:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 695,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "11957:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 696,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "11961:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 693,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "11942:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11942:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "EmitStatement",
                  "src": "11937:32:7"
                }
              ]
            },
            "documentation": {
              "id": 632,
              "nodeType": "StructuredDocumentation",
              "src": "11064:313:7",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "11391:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11418:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "11410:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11410:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11440:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "11432:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11432:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11460:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "11452:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11452:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11400:73:7"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11491:0:7"
            },
            "scope": 830,
            "src": "11382:594:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "12151:107:7",
              "statements": [
                {
                  "expression": {
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 708,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "12161:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 710,
                      "indexExpression": {
                        "id": 709,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "12177:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12161:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 711,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "12188:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12161:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "12161:29:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 717,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 705,
                            "src": "12229:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 715,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "12214:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$830_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 145,
                          "src": "12214:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12214:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 719,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "12239:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 720,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "12243:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 714,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "12205:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12205:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "EmitStatement",
                  "src": "12200:51:7"
                }
              ]
            },
            "documentation": {
              "id": 701,
              "nodeType": "StructuredDocumentation",
              "src": "11982:100:7",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "12096:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12113:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "12105:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12105:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12125:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "12117:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12117:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12104:29:7"
            },
            "returnParameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12151:0:7"
            },
            "scope": 830,
            "src": "12087:171:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 755,
              "nodeType": "Block",
              "src": "12516:184:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 735,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "12534:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 736,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 729,
                          "src": "12543:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12534:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12553:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12526:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12526:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "12526:55:7"
                },
                {
                  "expression": {
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 741,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "12591:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 744,
                        "indexExpression": {
                          "id": 742,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "12610:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12591:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 745,
                      "indexExpression": {
                        "id": 743,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "12617:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12591:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 746,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "12629:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12591:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "12591:46:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 750,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "12667:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 751,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "12674:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 752,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "12684:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 749,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1201,
                      "src": "12652:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12652:41:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "EmitStatement",
                  "src": "12647:46:7"
                }
              ]
            },
            "documentation": {
              "id": 725,
              "nodeType": "StructuredDocumentation",
              "src": "12264:124:7",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 756,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "12402:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "12438:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "12430:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12430:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12461:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "12453:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12453:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "12484:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "12479:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12479:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12420:78:7"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12516:0:7"
            },
            "scope": 830,
            "src": "12393:307:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 817,
              "nodeType": "Block",
              "src": "13409:794:7",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 770,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "13423:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1923,
                      "src": "13423:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13423:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 815,
                    "nodeType": "Block",
                    "src": "14161:36:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14182:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 769,
                        "id": 814,
                        "nodeType": "Return",
                        "src": "14175:11:7"
                      }
                    ]
                  },
                  "id": 816,
                  "nodeType": "IfStatement",
                  "src": "13419:778:7",
                  "trueBody": {
                    "id": 812,
                    "nodeType": "Block",
                    "src": "13440:715:7",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 792,
                              "nodeType": "Block",
                              "src": "13681:91:7",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 790,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 786,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 784,
                                      "src": "13706:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 787,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1903,
                                          "src": "13716:15:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1903_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 788,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1902,
                                        "src": "13716:32:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 789,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13716:41:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13706:51:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 769,
                                  "id": 791,
                                  "nodeType": "Return",
                                  "src": "13699:58:7"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 793,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 785,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 784,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "13673:6:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 793,
                                  "src": "13666:13:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 783,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13666:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13665:15:7"
                            },
                            "src": "13657:115:7"
                          },
                          {
                            "block": {
                              "id": 809,
                              "nodeType": "Block",
                              "src": "13801:344:7",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 797,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 795,
                                        "src": "13823:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 798,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "13823:13:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 799,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13840:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "13823:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 807,
                                    "nodeType": "Block",
                                    "src": "13996:135:7",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "14027:86:7",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "14064:2:7",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14068:6:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14060:3:7"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14060:15:7"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14083:6:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14077:5:7"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14077:13:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14053:6:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14053:38:7"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "14053:38:7"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 795,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14068:6:7",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 795,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14083:6:7",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 806,
                                        "nodeType": "InlineAssembly",
                                        "src": "14018:95:7"
                                      }
                                    ]
                                  },
                                  "id": 808,
                                  "nodeType": "IfStatement",
                                  "src": "13819:312:7",
                                  "trueBody": {
                                    "id": 805,
                                    "nodeType": "Block",
                                    "src": "13843:147:7",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 802,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13897:52:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 801,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13865:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 803,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13865:106:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 804,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13865:106:7"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 810,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 796,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 795,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13793:6:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 810,
                                  "src": "13780:19:7",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 794,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13780:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13779:21:7"
                            },
                            "src": "13773:372:7"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 777,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2212,
                                "src": "13532:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13532:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 779,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "13566:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 780,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "13592:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 781,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "13621:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 774,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "13490:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 773,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1903,
                                "src": "13474:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1903_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13474:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$1903",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1902,
                            "src": "13474:36:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13474:170:7",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 811,
                        "nodeType": "TryStatement",
                        "src": "13454:691:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 757,
              "nodeType": "StructuredDocumentation",
              "src": "12706:542:7",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "13262:22:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13302:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "13294:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13294:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13324:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "13316:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13316:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13344:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "13336:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13336:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "13374:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "13361:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13361:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13284:101:7"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "13403:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13403:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13402:6:7"
            },
            "scope": 830,
            "src": "13253:950:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 828,
              "nodeType": "Block",
              "src": "14879:2:7",
              "statements": []
            },
            "documentation": {
              "id": 819,
              "nodeType": "StructuredDocumentation",
              "src": "14209:545:7",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "14768:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14806:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "14798:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14798:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14828:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "14820:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14820:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14848:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "14840:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14840:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14788:73:7"
            },
            "returnParameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14879:0:7"
            },
            "scope": 830,
            "src": "14759:122:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 831,
        "src": "979:13904:7",
        "usedErrors": []
      }
    ],
    "src": "92:14792:7"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001557380380620015578339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6112c580620002926000396000f3fe6080604052600436106100c25760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610201578063b88d4fde14610221578063c87b56dd14610234578063e985e9c51461025457600080fd5b80636352211e1461019e57806370a08231146101be57806395d89b41146101ec57600080fd5b806301ffc9a7146100c757806306fdde03146100fc578063081812fc1461011e578063095ea7b31461015657806323b872dd1461017857806342842e0e1461018b575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610dd5565b61029d565b60405190151581526020015b60405180910390f35b34801561010857600080fd5b506101116102ef565b6040516100f39190610e4a565b34801561012a57600080fd5b5061013e610139366004610e5d565b610381565b6040516001600160a01b0390911681526020016100f3565b34801561016257600080fd5b50610176610171366004610e92565b61041b565b005b610176610186366004610ebc565b610531565b610176610199366004610ebc565b610562565b3480156101aa57600080fd5b5061013e6101b9366004610e5d565b61057d565b3480156101ca57600080fd5b506101de6101d9366004610ef8565b6105f4565b6040519081526020016100f3565b3480156101f857600080fd5b5061011161067b565b34801561020d57600080fd5b5061017661021c366004610f13565b61068a565b61017661022f366004610f65565b610699565b34801561024057600080fd5b5061011161024f366004610e5d565b6106d1565b34801561026057600080fd5b506100e761026f366004611041565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102ce57506001600160e01b03198216635b5e139f60e01b145b806102e957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102fe90611074565b80601f016020809104026020016040519081016040528092919081815260200182805461032a90611074565b80156103775780601f1061034c57610100808354040283529160200191610377565b820191906000526020600020905b81548152906001019060200180831161035a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103ff5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104268261057d565b9050806001600160a01b0316836001600160a01b031614156104945760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103f6565b336001600160a01b03821614806104b057506104b0813361026f565b6105225760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103f6565b61052c83836107b9565b505050565b61053b3382610827565b6105575760405162461bcd60e51b81526004016103f6906110af565b61052c83838361091e565b61052c83838360405180602001604052806000815250610699565b6000818152600260205260408120546001600160a01b0316806102e95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103f6565b60006001600160a01b03821661065f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103f6565b506001600160a01b031660009081526003602052604090205490565b6060600180546102fe90611074565b610695338383610abe565b5050565b6106a33383610827565b6106bf5760405162461bcd60e51b81526004016103f6906110af565b6106cb84848484610b8d565b50505050565b6000818152600260205260409020546060906001600160a01b03166107505760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103f6565b600061076760408051602081019091526000815290565b9050600081511161078757604051806020016040528060008152506107b2565b8061079184610bc0565b6040516020016107a2929190611100565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107ee8261057d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108a05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103f6565b60006108ab8361057d565b9050806001600160a01b0316846001600160a01b031614806108e65750836001600160a01b03166108db84610381565b6001600160a01b0316145b8061091657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166109318261057d565b6001600160a01b0316146109995760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103f6565b6001600160a01b0382166109fb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f6565b610a066000826107b9565b6001600160a01b0383166000908152600360205260408120805460019290610a2f908490611145565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a5d90849061115c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610b205760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b9884848461091e565b610ba484848484610cbe565b6106cb5760405162461bcd60e51b81526004016103f690611174565b606081610be45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c0e5780610bf8816111c6565b9150610c079050600a836111f7565b9150610be8565b60008167ffffffffffffffff811115610c2957610c29610f4f565b6040519080825280601f01601f191660200182016040528015610c53576020820181803683370190505b5090505b841561091657610c68600183611145565b9150610c75600a8661120b565b610c8090603061115c565b60f81b818381518110610c9557610c9561121f565b60200101906001600160f81b031916908160001a905350610cb7600a866111f7565b9450610c57565b60006001600160a01b0384163b15610db157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d02903390899088908890600401611235565b6020604051808303816000875af1925050508015610d3d575060408051601f3d908101601f19168201909252610d3a91810190611272565b60015b610d97573d808015610d6b576040519150601f19603f3d011682016040523d82523d6000602084013e610d70565b606091505b508051610d8f5760405162461bcd60e51b81526004016103f690611174565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610916565b506001949350505050565b6001600160e01b031981168114610dd257600080fd5b50565b600060208284031215610de757600080fd5b81356107b281610dbc565b60005b83811015610e0d578181015183820152602001610df5565b838111156106cb5750506000910152565b60008151808452610e36816020860160208601610df2565b601f01601f19169290920160200192915050565b6020815260006107b26020830184610e1e565b600060208284031215610e6f57600080fd5b5035919050565b80356001600160a01b0381168114610e8d57600080fd5b919050565b60008060408385031215610ea557600080fd5b610eae83610e76565b946020939093013593505050565b600080600060608486031215610ed157600080fd5b610eda84610e76565b9250610ee860208501610e76565b9150604084013590509250925092565b600060208284031215610f0a57600080fd5b6107b282610e76565b60008060408385031215610f2657600080fd5b610f2f83610e76565b915060208301358015158114610f4457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f7b57600080fd5b610f8485610e76565b9350610f9260208601610e76565b925060408501359150606085013567ffffffffffffffff80821115610fb657600080fd5b818701915087601f830112610fca57600080fd5b813581811115610fdc57610fdc610f4f565b604051601f8201601f19908116603f0116810190838211818310171561100457611004610f4f565b816040528281528a602084870101111561101d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561105457600080fd5b61105d83610e76565b915061106b60208401610e76565b90509250929050565b600181811c9082168061108857607f821691505b602082108114156110a957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611112818460208801610df2565b835190830190611126818360208801610df2565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111575761115761112f565b500390565b6000821982111561116f5761116f61112f565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156111da576111da61112f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611206576112066111e1565b500490565b60008261121a5761121a6111e1565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061126890830184610e1e565b9695505050505050565b60006020828403121561128457600080fd5b81516107b281610dbc56fea2646970667358221220dff577db71604a70b14ef1bea9263833b2958a4fd2afc34f90ef48172d2beb6a64736f6c634300080b0033",
  "bytecodeSha1": "3aa123a33d186f1f00affb05bb2796b3bbfc908d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "1": {},
      "11": {},
      "2": {},
      "3": {},
      "4": {
        "Strings.toString": {
          "62": [
            601,
            611,
            false
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {
        "ERC721._safeTransfer": {
          "61": [
            7674,
            7722,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "60": [
            12534,
            12551,
            true
          ]
        },
        "ERC721._transfer": {
          "58": [
            11522,
            11553,
            true
          ],
          "59": [
            11638,
            11654,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            4347,
            4358,
            true
          ],
          "51": [
            4428,
            4449,
            true
          ],
          "52": [
            4453,
            4490,
            true
          ]
        },
        "ERC721.balanceOf": {
          "55": [
            2480,
            2499,
            true
          ]
        },
        "ERC721.ownerOf": {
          "54": [
            2862,
            2881,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "56": [
            6430,
            6471,
            true
          ]
        },
        "ERC721.tokenURI": {
          "57": [
            3695,
            3720,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            5759,
            5800,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "1": {},
      "11": {},
      "2": {
        "Address.isContract": {
          "46": [
            1126,
            1141
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "4": {
        "Strings.toString": {
          "40": [
            627,
            637
          ],
          "41": [
            743,
            751
          ],
          "42": [
            765,
            775
          ],
          "43": [
            877,
            888
          ],
          "44": [
            902,
            958
          ],
          "45": [
            972,
            983
          ]
        }
      },
      "5": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      },
      "6": {},
      "7": {
        "ERC721._approve": {
          "24": [
            12161,
            12190
          ],
          "25": [
            12200,
            12251
          ]
        },
        "ERC721._baseURI": {
          "22": [
            4137,
            4146
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            13865,
            13971
          ],
          "48": [
            13699,
            13757
          ],
          "49": [
            14175,
            14186
          ]
        },
        "ERC721._exists": {
          "4": [
            8189,
            8226
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            8536,
            8643
          ],
          "27": [
            8702,
            8822
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            7615,
            7643
          ],
          "39": [
            7653,
            7798
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            12526,
            12581
          ],
          "36": [
            12591,
            12637
          ],
          "37": [
            12647,
            12693
          ]
        },
        "ERC721._transfer": {
          "28": [
            11501,
            11620
          ],
          "29": [
            11630,
            11695
          ],
          "30": [
            11807,
            11836
          ],
          "31": [
            11847,
            11867
          ],
          "32": [
            11877,
            11895
          ],
          "33": [
            11905,
            11926
          ],
          "34": [
            11937,
            11969
          ]
        },
        "ERC721.approve": {
          "7": [
            4339,
            4396
          ],
          "9": [
            4407,
            4572
          ],
          "10": [
            4583,
            4604
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            2459,
            2567
          ],
          "16": [
            2577,
            2600
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4811,
            4918
          ],
          "6": [
            4929,
            4960
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            5438,
            5480
          ]
        },
        "ERC721.name": {
          "3": [
            3118,
            3130
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2841,
            2948
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            6128,
            6167
          ],
          "19": [
            6409,
            6546
          ],
          "20": [
            6556,
            6595
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            5156,
            5208
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            2083,
            2258
          ]
        },
        "ERC721.symbol": {
          "17": [
            3282,
            3296
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            3511,
            3621
          ],
          "23": [
            3676,
            3813
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            5738,
            5875
          ],
          "12": [
            5886,
            5914
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC165",
    "IERC721",
    "IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Strings"
  ],
  "deployedBytecode": "6080604052600436106100c25760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610201578063b88d4fde14610221578063c87b56dd14610234578063e985e9c51461025457600080fd5b80636352211e1461019e57806370a08231146101be57806395d89b41146101ec57600080fd5b806301ffc9a7146100c757806306fdde03146100fc578063081812fc1461011e578063095ea7b31461015657806323b872dd1461017857806342842e0e1461018b575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610dd5565b61029d565b60405190151581526020015b60405180910390f35b34801561010857600080fd5b506101116102ef565b6040516100f39190610e4a565b34801561012a57600080fd5b5061013e610139366004610e5d565b610381565b6040516001600160a01b0390911681526020016100f3565b34801561016257600080fd5b50610176610171366004610e92565b61041b565b005b610176610186366004610ebc565b610531565b610176610199366004610ebc565b610562565b3480156101aa57600080fd5b5061013e6101b9366004610e5d565b61057d565b3480156101ca57600080fd5b506101de6101d9366004610ef8565b6105f4565b6040519081526020016100f3565b3480156101f857600080fd5b5061011161067b565b34801561020d57600080fd5b5061017661021c366004610f13565b61068a565b61017661022f366004610f65565b610699565b34801561024057600080fd5b5061011161024f366004610e5d565b6106d1565b34801561026057600080fd5b506100e761026f366004611041565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102ce57506001600160e01b03198216635b5e139f60e01b145b806102e957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102fe90611074565b80601f016020809104026020016040519081016040528092919081815260200182805461032a90611074565b80156103775780601f1061034c57610100808354040283529160200191610377565b820191906000526020600020905b81548152906001019060200180831161035a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103ff5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104268261057d565b9050806001600160a01b0316836001600160a01b031614156104945760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103f6565b336001600160a01b03821614806104b057506104b0813361026f565b6105225760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103f6565b61052c83836107b9565b505050565b61053b3382610827565b6105575760405162461bcd60e51b81526004016103f6906110af565b61052c83838361091e565b61052c83838360405180602001604052806000815250610699565b6000818152600260205260408120546001600160a01b0316806102e95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103f6565b60006001600160a01b03821661065f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103f6565b506001600160a01b031660009081526003602052604090205490565b6060600180546102fe90611074565b610695338383610abe565b5050565b6106a33383610827565b6106bf5760405162461bcd60e51b81526004016103f6906110af565b6106cb84848484610b8d565b50505050565b6000818152600260205260409020546060906001600160a01b03166107505760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103f6565b600061076760408051602081019091526000815290565b9050600081511161078757604051806020016040528060008152506107b2565b8061079184610bc0565b6040516020016107a2929190611100565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107ee8261057d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108a05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103f6565b60006108ab8361057d565b9050806001600160a01b0316846001600160a01b031614806108e65750836001600160a01b03166108db84610381565b6001600160a01b0316145b8061091657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166109318261057d565b6001600160a01b0316146109995760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103f6565b6001600160a01b0382166109fb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f6565b610a066000826107b9565b6001600160a01b0383166000908152600360205260408120805460019290610a2f908490611145565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a5d90849061115c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610b205760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b9884848461091e565b610ba484848484610cbe565b6106cb5760405162461bcd60e51b81526004016103f690611174565b606081610be45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c0e5780610bf8816111c6565b9150610c079050600a836111f7565b9150610be8565b60008167ffffffffffffffff811115610c2957610c29610f4f565b6040519080825280601f01601f191660200182016040528015610c53576020820181803683370190505b5090505b841561091657610c68600183611145565b9150610c75600a8661120b565b610c8090603061115c565b60f81b818381518110610c9557610c9561121f565b60200101906001600160f81b031916908160001a905350610cb7600a866111f7565b9450610c57565b60006001600160a01b0384163b15610db157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d02903390899088908890600401611235565b6020604051808303816000875af1925050508015610d3d575060408051601f3d908101601f19168201909252610d3a91810190611272565b60015b610d97573d808015610d6b576040519150601f19603f3d011682016040523d82523d6000602084013e610d70565b606091505b508051610d8f5760405162461bcd60e51b81526004016103f690611174565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610916565b506001949350505050565b6001600160e01b031981168114610dd257600080fd5b50565b600060208284031215610de757600080fd5b81356107b281610dbc565b60005b83811015610e0d578181015183820152602001610df5565b838111156106cb5750506000910152565b60008151808452610e36816020860160208601610df2565b601f01601f19169290920160200192915050565b6020815260006107b26020830184610e1e565b600060208284031215610e6f57600080fd5b5035919050565b80356001600160a01b0381168114610e8d57600080fd5b919050565b60008060408385031215610ea557600080fd5b610eae83610e76565b946020939093013593505050565b600080600060608486031215610ed157600080fd5b610eda84610e76565b9250610ee860208501610e76565b9150604084013590509250925092565b600060208284031215610f0a57600080fd5b6107b282610e76565b60008060408385031215610f2657600080fd5b610f2f83610e76565b915060208301358015158114610f4457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f7b57600080fd5b610f8485610e76565b9350610f9260208601610e76565b925060408501359150606085013567ffffffffffffffff80821115610fb657600080fd5b818701915087601f830112610fca57600080fd5b813581811115610fdc57610fdc610f4f565b604051601f8201601f19908116603f0116810190838211818310171561100457611004610f4f565b816040528281528a602084870101111561101d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561105457600080fd5b61105d83610e76565b915061106b60208401610e76565b90509250929050565b600181811c9082168061108857607f821691505b602082108114156110a957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611112818460208801610df2565b835190830190611126818360208801610df2565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111575761115761112f565b500390565b6000821982111561116f5761116f61112f565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156111da576111da61112f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611206576112066111e1565b500490565b60008261121a5761121a6111e1565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061126890830184610e1e565b9695505050505050565b60006020828403121561128457600080fd5b81516107b281610dbc56fea2646970667358221220dff577db71604a70b14ef1bea9263833b2958a4fd2afc34f90ef48172d2beb6a64736f6c634300080b0033",
  "deployedSourceMap": "979:13904:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1921:344;;;;;;;;;;-1:-1:-1;1921:344:7;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;1921:344:7;;;;;;;;3039:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4672:295::-;;;;;;;;;;-1:-1:-1;4672:295:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:14;;;1674:51;;1662:2;1647:18;4672:295:7;1528:203:14;4210:401:7;;;;;;;;;;-1:-1:-1;4210:401:7;;;;;:::i;:::-;;:::i;:::-;;5549:372;;;;;;:::i;:::-;;:::i;5987:187::-;;;;;;:::i;:::-;;:::i;2664:313::-;;;;;;;;;;-1:-1:-1;2664:313:7;;;;;:::i;:::-;;:::i;2324:283::-;;;;;;;;;;-1:-1:-1;2324:283:7;;;;;:::i;:::-;;:::i;:::-;;;2843:25:14;;;2831:2;2816:18;2324:283:7;2697:177:14;3201:102:7;;;;;;;;;;;;;:::i;5034:181::-;;;;;;;;;;-1:-1:-1;5034:181:7;;;;;:::i;:::-;;:::i;6240:362::-;;;;;;:::i;:::-;;:::i;3369:451::-;;;;;;;;;;-1:-1:-1;3369:451:7;;;;;:::i;:::-;;:::i;5281:206::-;;;;;;;;;;-1:-1:-1;5281:206:7;;;;;:::i;:::-;-1:-1:-1;;;;;5445:25:7;;;5418:4;5445:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5281:206;1921:344;2063:4;-1:-1:-1;;;;;;2102:40:7;;-1:-1:-1;;;2102:40:7;;:104;;-1:-1:-1;;;;;;;2158:48:7;;-1:-1:-1;;;2158:48:7;2102:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:5;;;2222:36:7;2083:175;1921:344;-1:-1:-1;;1921:344:7:o;3039:98::-;3093:13;3125:5;3118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3039:98;:::o;4672:295::-;4788:7;8196:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8196:16:7;4811:107;;;;-1:-1:-1;;;4811:107:7;;5358:2:14;4811:107:7;;;5340:21:14;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:14;;;5480:42;5539:19;;4811:107:7;;;;;;;;;-1:-1:-1;4936:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;4936:24:7;;4672:295::o;4210:401::-;4290:13;4306:23;4321:7;4306:14;:23::i;:::-;4290:39;;4353:5;-1:-1:-1;;;;;4347:11:7;:2;-1:-1:-1;;;;;4347:11:7;;;4339:57;;;;-1:-1:-1;;;4339:57:7;;5771:2:14;4339:57:7;;;5753:21:14;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:14;;;5893:31;5941:19;;4339:57:7;5569:397:14;4339:57:7;719:10:3;-1:-1:-1;;;;;4428:21:7;;;;:62;;-1:-1:-1;4453:37:7;4470:5;719:10:3;5281:206:7;:::i;4453:37::-;4407:165;;;;-1:-1:-1;;;4407:165:7;;6173:2:14;4407:165:7;;;6155:21:14;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;4407:165:7;5971:420:14;4407:165:7;4583:21;4592:2;4596:7;4583:8;:21::i;:::-;4280:331;4210:401;;:::o;5549:372::-;5759:41;719:10:3;5792:7:7;5759:18;:41::i;:::-;5738:137;;;;-1:-1:-1;;;5738:137:7;;;;;;;:::i;:::-;5886:28;5896:4;5902:2;5906:7;5886:9;:28::i;5987:187::-;6128:39;6145:4;6151:2;6155:7;6128:39;;;;;;;;;;;;:16;:39::i;2664:313::-;2776:7;2815:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2815:16:7;2862:19;2841:107;;;;-1:-1:-1;;;2841:107:7;;7016:2:14;2841:107:7;;;6998:21:14;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:14;;;7138:39;7194:19;;2841:107:7;6814:405:14;2324:283:7;2436:7;-1:-1:-1;;;;;2480:19:7;;2459:108;;;;-1:-1:-1;;;2459:108:7;;7426:2:14;2459:108:7;;;7408:21:14;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:14;;;7548:40;7605:19;;2459:108:7;7224:406:14;2459:108:7;-1:-1:-1;;;;;;2584:16:7;;;;;:9;:16;;;;;;;2324:283::o;3201:102::-;3257:13;3289:7;3282:14;;;;;:::i;5034:181::-;5156:52;719:10:3;5189:8:7;5199;5156:18;:52::i;:::-;5034:181;;:::o;6240:362::-;6430:41;719:10:3;6463:7:7;6430:18;:41::i;:::-;6409:137;;;;-1:-1:-1;;;6409:137:7;;;;;;;:::i;:::-;6556:39;6570:4;6576:2;6580:7;6589:5;6556:13;:39::i;:::-;6240:362;;;;:::o;3369:451::-;8173:4;8196:16;;;:7;:16;;;;;;3482:13;;-1:-1:-1;;;;;8196:16:7;3511:110;;;;-1:-1:-1;;;3511:110:7;;7837:2:14;3511:110:7;;;7819:21:14;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:14;;;7959:45;8021:19;;3511:110:7;7635:411:14;3511:110:7;3632:21;3656:10;4137:9;;;;;;;;;-1:-1:-1;4137:9:7;;;4061:92;3656:10;3632:34;;3719:1;3701:7;3695:21;:25;:118;;;;;;;;;;;;;;;;;3763:7;3772:18;:7;:16;:18::i;:::-;3746:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3695:118;3676:137;3369:451;-1:-1:-1;;;3369:451:7:o;12087:171::-;12161:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12161:29:7;-1:-1:-1;;;;;12161:29:7;;;;;;;;:24;;12214:23;12161:24;12214:14;:23::i;:::-;-1:-1:-1;;;;;12205:46:7;;;;;;;;;;;12087:171;;:::o;8391:438::-;8516:4;8196:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8196:16:7;8536:107;;;;-1:-1:-1;;;8536:107:7;;8728:2:14;8536:107:7;;;8710:21:14;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:14;;;8850:42;8909:19;;8536:107:7;8526:408:14;8536:107:7;8653:13;8669:23;8684:7;8669:14;:23::i;:::-;8653:39;;8721:5;-1:-1:-1;;;;;8710:16:7;:7;-1:-1:-1;;;;;8710:16:7;;:63;;;;8766:7;-1:-1:-1;;;;;8742:31:7;:20;8754:7;8742:11;:20::i;:::-;-1:-1:-1;;;;;8742:31:7;;8710:63;:111;;;-1:-1:-1;;;;;;5445:25:7;;;5418:4;5445:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8789:32;8702:120;8391:438;-1:-1:-1;;;;8391:438:7:o;11382:594::-;11549:4;-1:-1:-1;;;;;11522:31:7;:23;11537:7;11522:14;:23::i;:::-;-1:-1:-1;;;;;11522:31:7;;11501:119;;;;-1:-1:-1;;;11501:119:7;;9141:2:14;11501:119:7;;;9123:21:14;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:14;;;9263:39;9319:19;;11501:119:7;8939:405:14;11501:119:7;-1:-1:-1;;;;;11638:16:7;;11630:65;;;;-1:-1:-1;;;11630:65:7;;9551:2:14;11630:65:7;;;9533:21:14;9590:2;9570:18;;;9563:30;9629:34;9609:18;;;9602:62;-1:-1:-1;;;9680:18:14;;;9673:34;9724:19;;11630:65:7;9349:400:14;11630:65:7;11807:29;11824:1;11828:7;11807:8;:29::i;:::-;-1:-1:-1;;;;;11847:15:7;;;;;;:9;:15;;;;;:20;;11866:1;;11847:15;:20;;11866:1;;11847:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11877:13:7;;;;;;:9;:13;;;;;:18;;11894:1;;11877:13;:18;;11894:1;;11877:18;:::i;:::-;;;;-1:-1:-1;;11905:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11905:21:7;-1:-1:-1;;;;;11905:21:7;;;;;;;;;11942:27;;11905:16;;11942:27;;;;;;;11382:594;;;:::o;12393:307::-;12543:8;-1:-1:-1;;;;;12534:17:7;:5;-1:-1:-1;;;;;12534:17:7;;;12526:55;;;;-1:-1:-1;;;12526:55:7;;10351:2:14;12526:55:7;;;10333:21:14;10390:2;10370:18;;;10363:30;10429:27;10409:18;;;10402:55;10474:18;;12526:55:7;10149:349:14;12526:55:7;-1:-1:-1;;;;;12591:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12591:46:7;;;;;;;;;;12652:41;;540::14;;;12652::7;;513:18:14;12652:41:7;;;;;;;12393:307;;;:::o;7464:341::-;7615:28;7625:4;7631:2;7635:7;7615:9;:28::i;:::-;7674:48;7697:4;7703:2;7707:7;7716:5;7674:22;:48::i;:::-;7653:145;;;;-1:-1:-1;;;7653:145:7;;;;;;;:::i;328:703:4:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:4;;;;;;;;;;;;-1:-1:-1;;;627:10:4;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:4;;-1:-1:-1;773:2:4;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:4;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:4;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:4;;;;;;;;-1:-1:-1;972:11:4;981:2;972:11;;:::i;:::-;;;844:150;;13253:950:7;13403:4;-1:-1:-1;;;;;13423:13:7;;1087:20:2;1133:8;13419:778:7;;13474:170;;-1:-1:-1;;;13474:170:7;;-1:-1:-1;;;;;13474:36:7;;;;;:170;;719:10:3;;13566:4:7;;13592:7;;13621:5;;13474:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13474:170:7;;;;;;;;-1:-1:-1;;13474:170:7;;;;;;;;;;;;:::i;:::-;;;13454:691;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13823:13:7;;13819:312;;13865:106;;-1:-1:-1;;;13865:106:7;;;;;;;:::i;13819:312::-;14083:6;14077:13;14068:6;14064:2;14060:15;14053:38;13454:691;-1:-1:-1;;;;;;13706:51:7;-1:-1:-1;;;13706:51:7;;-1:-1:-1;13699:58:7;;13419:778;-1:-1:-1;14182:4:7;13253:950;;;;;;:::o;14:131:14:-;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:14;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:14;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:14:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:14;;1343:180;-1:-1:-1;1343:180:14:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:14;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:14:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:14;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:14;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:14:o;9754:127::-;9815:10;9810:3;9806:20;9803:1;9796:31;9846:4;9843:1;9836:15;9870:4;9867:1;9860:15;9886:125;9926:4;9954:1;9951;9948:8;9945:34;;;9959:18;;:::i;:::-;-1:-1:-1;9996:9:14;;9886:125::o;10016:128::-;10056:3;10087:1;10083:6;10080:1;10077:13;10074:39;;;10093:18;;:::i;:::-;-1:-1:-1;10129:9:14;;10016:128::o;10503:414::-;10705:2;10687:21;;;10744:2;10724:18;;;10717:30;10783:34;10778:2;10763:18;;10756:62;-1:-1:-1;;;10849:2:14;10834:18;;10827:48;10907:3;10892:19;;10503:414::o;10922:135::-;10961:3;-1:-1:-1;;10982:17:14;;10979:43;;;11002:18;;:::i;:::-;-1:-1:-1;11049:1:14;11038:13;;10922:135::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:120;11234:1;11260;11250:35;;11265:18;;:::i;:::-;-1:-1:-1;11299:9:14;;11194:120::o;11319:112::-;11351:1;11377;11367:35;;11382:18;;:::i;:::-;-1:-1:-1;11416:9:14;;11319:112::o;11436:127::-;11497:10;11492:3;11488:20;11485:1;11478:31;11528:4;11525:1;11518:15;11552:4;11549:1;11542:15;11568:489;-1:-1:-1;;;;;11837:15:14;;;11819:34;;11889:15;;11884:2;11869:18;;11862:43;11936:2;11921:18;;11914:34;;;11984:3;11979:2;11964:18;;11957:31;;;11762:4;;12005:46;;12031:19;;12023:6;12005:46;:::i;:::-;11997:54;11568:489;-1:-1:-1;;;;;;11568:489:14:o;12062:249::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:30;12275:5;12251:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    979,
    14883
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x67B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xF13 JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST PUSH2 0x176 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE7 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2CE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2E9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2FE SWAP1 PUSH2 0x1074 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32A SWAP1 PUSH2 0x1074 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x377 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x377 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP3 PUSH2 0x57D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F6 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x4B0 JUMPI POP PUSH2 0x4B0 DUP2 CALLER PUSH2 0x26F JUMP JUMPDEST PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 PUSH2 0x7B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x53B CALLER DUP3 PUSH2 0x827 JUMP JUMPDEST PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F6 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 DUP4 PUSH2 0x91E JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x699 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2FE SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x695 CALLER DUP4 DUP4 PUSH2 0xABE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6A3 CALLER DUP4 PUSH2 0x827 JUMP JUMPDEST PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F6 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x6CB DUP5 DUP5 DUP5 DUP5 PUSH2 0xB8D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x767 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7B2 JUMP JUMPDEST DUP1 PUSH2 0x791 DUP5 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7A2 SWAP3 SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x7EE DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AB DUP4 PUSH2 0x57D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x8E6 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DB DUP5 PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x916 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x931 DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0xA06 PUSH1 0x0 DUP3 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA2F SWAP1 DUP5 SWAP1 PUSH2 0x1145 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA5D SWAP1 DUP5 SWAP1 PUSH2 0x115C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB98 DUP5 DUP5 DUP5 PUSH2 0x91E JUMP JUMPDEST PUSH2 0xBA4 DUP5 DUP5 DUP5 DUP5 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F6 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xBE4 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xC0E JUMPI DUP1 PUSH2 0xBF8 DUP2 PUSH2 0x11C6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC07 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x11F7 JUMP JUMPDEST SWAP2 POP PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC29 JUMPI PUSH2 0xC29 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC53 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x916 JUMPI PUSH2 0xC68 PUSH1 0x1 DUP4 PUSH2 0x1145 JUMP JUMPDEST SWAP2 POP PUSH2 0xC75 PUSH1 0xA DUP7 PUSH2 0x120B JUMP JUMPDEST PUSH2 0xC80 SWAP1 PUSH1 0x30 PUSH2 0x115C JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC95 JUMPI PUSH2 0xC95 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xCB7 PUSH1 0xA DUP7 PUSH2 0x11F7 JUMP JUMPDEST SWAP5 POP PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD02 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD3D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD3A SWAP2 DUP2 ADD SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD97 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD6B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F6 SWAP1 PUSH2 0x1174 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x916 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7B2 DUP2 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6CB JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE36 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7B2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEAE DUP4 PUSH2 0xE76 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDA DUP5 PUSH2 0xE76 JUMP JUMPDEST SWAP3 POP PUSH2 0xEE8 PUSH1 0x20 DUP6 ADD PUSH2 0xE76 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B2 DUP3 PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2F DUP4 PUSH2 0xE76 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF84 DUP6 PUSH2 0xE76 JUMP JUMPDEST SWAP4 POP PUSH2 0xF92 PUSH1 0x20 DUP7 ADD PUSH2 0xE76 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xFDC JUMPI PUSH2 0xFDC PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1004 JUMPI PUSH2 0x1004 PUSH2 0xF4F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x101D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x105D DUP4 PUSH2 0xE76 JUMP JUMPDEST SWAP2 POP PUSH2 0x106B PUSH1 0x20 DUP5 ADD PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1088 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1112 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDF2 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1126 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDF2 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1157 JUMPI PUSH2 0x1157 PUSH2 0x112F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x116F JUMPI PUSH2 0x116F PUSH2 0x112F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x11DA JUMPI PUSH2 0x11DA PUSH2 0x112F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1206 JUMPI PUSH2 0x1206 PUSH2 0x11E1 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x121A JUMPI PUSH2 0x121A PUSH2 0x11E1 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1268 SWAP1 DUP4 ADD DUP5 PUSH2 0xE1E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7B2 DUP2 PUSH2 0xDBC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF CREATE2 PUSH24 0xDB71604A70B14EF1BEA9263833B2958A4FD2AFC34F90EF48 OR 0x2D 0x2B 0xEB PUSH11 0x64736F6C634300080B0033 ",
  "pcMap": {
    "0": {
      "offset": [
        979,
        14883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC2"
    },
    "12": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "SHR",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6352211E"
    },
    "25": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "GT",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA22CB465"
    },
    "36": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "GT",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "42": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA22CB465"
    },
    "47": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "48": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x201"
    },
    "51": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB88D4FDE"
    },
    "58": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x221"
    },
    "62": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "63": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "64": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xC87B56DD"
    },
    "69": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "70": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x234"
    },
    "73": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "74": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "75": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE985E9C5"
    },
    "80": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "81": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x254"
    },
    "84": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "85": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "REVERT",
      "path": "7"
    },
    "89": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "90": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "91": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6352211E"
    },
    "96": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "97": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19E"
    },
    "100": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "101": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "102": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "107": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "108": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BE"
    },
    "111": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "118": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "119": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EC"
    },
    "122": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "123": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "REVERT",
      "path": "7"
    },
    "127": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "128": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "129": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1FFC9A7"
    },
    "134": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "135": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC7"
    },
    "138": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "139": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "140": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "145": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "146": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFC"
    },
    "149": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "150": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "151": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x81812FC"
    },
    "156": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "157": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11E"
    },
    "160": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "161": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "162": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95EA7B3"
    },
    "167": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "168": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x156"
    },
    "171": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "178": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "179": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x178"
    },
    "182": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "183": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "184": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x42842E0E"
    },
    "189": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "EQ",
      "path": "7"
    },
    "190": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18B"
    },
    "193": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "194": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "195": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "197": {
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "DUP1",
      "path": "7"
    },
    "198": {
      "first_revert": true,
      "fn": null,
      "offset": [
        979,
        14883
      ],
      "op": "REVERT",
      "path": "7"
    },
    "199": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "200": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "201": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "202": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "203": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3"
    },
    "206": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "209": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "210": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "REVERT",
      "path": "7"
    },
    "211": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "212": {
      "op": "POP"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDD5"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMP",
      "path": "7"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29D"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMP",
      "path": "7"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "SUB",
      "path": "7"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "RETURN",
      "path": "7"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "254": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "DUP1",
      "path": "7"
    },
    "255": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x108"
    },
    "259": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "262": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "DUP1",
      "path": "7"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "REVERT",
      "path": "7"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "265": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "POP",
      "path": "7"
    },
    "266": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x111"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EF"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMP",
      "path": "7"
    },
    "273": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "274": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "276": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "277": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3"
    },
    "280": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "281": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "282": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE4A"
    },
    "285": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMP",
      "path": "7"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "DUP1",
      "path": "7"
    },
    "289": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "290": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12A"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "294": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "296": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "DUP1",
      "path": "7"
    },
    "297": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "REVERT",
      "path": "7"
    },
    "298": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "299": {
      "op": "POP"
    },
    "300": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13E"
    },
    "303": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x139"
    },
    "306": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "307": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "309": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5D"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMP",
      "path": "7"
    },
    "313": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "314": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x381"
    },
    "317": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMP",
      "path": "7"
    },
    "318": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "319": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "321": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "328": {
      "op": "SHL"
    },
    "329": {
      "op": "SUB"
    },
    "330": {
      "op": "SWAP1"
    },
    "331": {
      "op": "SWAP2"
    },
    "332": {
      "op": "AND"
    },
    "333": {
      "op": "DUP2"
    },
    "334": {
      "op": "MSTORE"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "337": {
      "op": "ADD"
    },
    "338": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3"
    },
    "341": {
      "op": "JUMP"
    },
    "342": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "343": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "344": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "DUP1",
      "path": "7"
    },
    "345": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "346": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "349": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "350": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "352": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "DUP1",
      "path": "7"
    },
    "353": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "REVERT",
      "path": "7"
    },
    "354": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "355": {
      "op": "POP"
    },
    "356": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x176"
    },
    "359": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x171"
    },
    "362": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "363": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "365": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE92"
    },
    "368": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "369": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "370": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41B"
    },
    "373": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "374": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "375": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "STOP",
      "path": "7"
    },
    "376": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "377": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x176"
    },
    "380": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x186"
    },
    "383": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "384": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "386": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEBC"
    },
    "389": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5549,
        5921
      ],
      "op": "JUMP",
      "path": "7"
    },
    "390": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "391": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x531"
    },
    "394": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5549,
        5921
      ],
      "op": "JUMP",
      "path": "7"
    },
    "395": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "396": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x176"
    },
    "399": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x199"
    },
    "402": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "405": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEBC"
    },
    "408": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5987,
        6174
      ],
      "op": "JUMP",
      "path": "7"
    },
    "409": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "410": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x562"
    },
    "413": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5987,
        6174
      ],
      "op": "JUMP",
      "path": "7"
    },
    "414": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "415": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "416": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "417": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "418": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AA"
    },
    "421": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "422": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "424": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "DUP1",
      "path": "7"
    },
    "425": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "REVERT",
      "path": "7"
    },
    "426": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "427": {
      "op": "POP"
    },
    "428": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13E"
    },
    "431": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B9"
    },
    "434": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "435": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "437": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5D"
    },
    "440": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMP",
      "path": "7"
    },
    "441": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "442": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57D"
    },
    "445": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMP",
      "path": "7"
    },
    "446": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "447": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "448": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "DUP1",
      "path": "7"
    },
    "449": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "450": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CA"
    },
    "453": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "454": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "456": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "DUP1",
      "path": "7"
    },
    "457": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "REVERT",
      "path": "7"
    },
    "458": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "459": {
      "op": "POP"
    },
    "460": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DE"
    },
    "463": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D9"
    },
    "466": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "467": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "469": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF8"
    },
    "472": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMP",
      "path": "7"
    },
    "473": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "474": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F4"
    },
    "477": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMP",
      "path": "7"
    },
    "478": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "479": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "481": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "482": {
      "op": "SWAP1"
    },
    "483": {
      "op": "DUP2"
    },
    "484": {
      "op": "MSTORE"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "487": {
      "op": "ADD"
    },
    "488": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3"
    },
    "491": {
      "op": "JUMP"
    },
    "492": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "493": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "494": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "DUP1",
      "path": "7"
    },
    "495": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "496": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F8"
    },
    "499": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "500": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "502": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "DUP1",
      "path": "7"
    },
    "503": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "REVERT",
      "path": "7"
    },
    "504": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "505": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "POP",
      "path": "7"
    },
    "506": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x111"
    },
    "509": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x67B"
    },
    "512": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMP",
      "path": "7"
    },
    "513": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "514": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "515": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "DUP1",
      "path": "7"
    },
    "516": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "517": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20D"
    },
    "520": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "521": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "523": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "DUP1",
      "path": "7"
    },
    "524": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "REVERT",
      "path": "7"
    },
    "525": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "526": {
      "op": "POP"
    },
    "527": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x176"
    },
    "530": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21C"
    },
    "533": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "534": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "536": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF13"
    },
    "539": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMP",
      "path": "7"
    },
    "540": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "541": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x68A"
    },
    "544": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMP",
      "path": "7"
    },
    "545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "546": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x176"
    },
    "549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22F"
    },
    "552": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF65"
    },
    "558": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6240,
        6602
      ],
      "op": "JUMP",
      "path": "7"
    },
    "559": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "560": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x699"
    },
    "563": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6240,
        6602
      ],
      "op": "JUMP",
      "path": "7"
    },
    "564": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "566": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "DUP1",
      "path": "7"
    },
    "567": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "568": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x240"
    },
    "571": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "572": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "574": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "DUP1",
      "path": "7"
    },
    "575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "REVERT",
      "path": "7"
    },
    "576": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x111"
    },
    "581": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x24F"
    },
    "584": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "585": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "587": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5D"
    },
    "590": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3369,
        3820
      ],
      "op": "JUMP",
      "path": "7"
    },
    "591": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D1"
    },
    "595": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3369,
        3820
      ],
      "op": "JUMP",
      "path": "7"
    },
    "596": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "597": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "598": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "DUP1",
      "path": "7"
    },
    "599": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "600": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x260"
    },
    "603": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "604": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "606": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "DUP1",
      "path": "7"
    },
    "607": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "REVERT",
      "path": "7"
    },
    "608": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "609": {
      "op": "POP"
    },
    "610": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7"
    },
    "613": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26F"
    },
    "616": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "617": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "619": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1041"
    },
    "622": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMP",
      "path": "7"
    },
    "623": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "op": "SUB"
    },
    "632": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 0
    },
    "633": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP3",
      "path": "7"
    },
    "634": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "AND",
      "path": "7"
    },
    "635": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5418,
        5422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "637": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "638": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP2",
      "path": "7"
    },
    "639": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "640": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5463
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "642": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "644": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "645": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP2",
      "path": "7"
    },
    "646": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "647": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "649": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP1",
      "path": "7"
    },
    "650": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP4",
      "path": "7"
    },
    "651": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "652": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "653": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "654": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "655": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "AND",
      "path": "7"
    },
    "656": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "DUP3",
      "path": "7"
    },
    "657": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "658": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "659": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "660": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "661": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "662": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "663": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "664": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "666": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "AND",
      "path": "7"
    },
    "667": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "668": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMP",
      "path": "7"
    },
    "669": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "670": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2063,
        2067
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "678": {
      "op": "SHL"
    },
    "679": {
      "op": "SUB"
    },
    "680": {
      "op": "NOT"
    },
    "681": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2142
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 1
    },
    "682": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2142
      ],
      "op": "AND",
      "path": "7"
    },
    "683": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2142
      ],
      "op": "EQ",
      "path": "7"
    },
    "692": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2142
      ],
      "op": "DUP1",
      "path": "7"
    },
    "693": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2206
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CE"
    },
    "696": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2206
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "op": "SUB"
    },
    "706": {
      "op": "NOT"
    },
    "707": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2158,
        2206
      ],
      "op": "DUP3",
      "path": "7"
    },
    "708": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2158,
        2206
      ],
      "op": "AND",
      "path": "7"
    },
    "709": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2158,
        2206
      ],
      "op": "EQ",
      "path": "7"
    },
    "718": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2206
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "719": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2258
      ],
      "op": "DUP1",
      "path": "7"
    },
    "720": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2258
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E9"
    },
    "723": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2102,
        2258
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "730": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "732": {
      "op": "SHL"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "SUB"
    },
    "741": {
      "op": "NOT"
    },
    "742": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 2
    },
    "743": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "5"
    },
    "744": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "5"
    },
    "745": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2222,
        2258
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "746": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        2083,
        2258
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "747": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1921,
        2265
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "748": {
      "op": "POP"
    },
    "749": {
      "op": "POP"
    },
    "750": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1921,
        2265
      ],
      "op": "JUMP",
      "path": "7"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "752": {
      "fn": "ERC721.name",
      "offset": [
        3093,
        3106
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        3125,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x0"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "758": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FE"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1074"
    },
    "765": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMP",
      "path": "7"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DIV",
      "path": "7"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MUL",
      "path": "7"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "779": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "780": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "782": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "783": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "784": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "785": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "786": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "788": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "789": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "790": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "791": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "792": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "793": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "794": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "795": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "796": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "798": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "799": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "800": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "801": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "802": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32A"
    },
    "805": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "806": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1074"
    },
    "809": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMP",
      "path": "7"
    },
    "810": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "811": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "812": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "813": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x377"
    },
    "816": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "817": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "818": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "820": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "LT",
      "path": "7"
    },
    "821": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34C"
    },
    "824": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "825": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "828": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "829": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP4",
      "path": "7"
    },
    "830": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "831": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DIV",
      "path": "7"
    },
    "832": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MUL",
      "path": "7"
    },
    "833": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP4",
      "path": "7"
    },
    "834": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "835": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "836": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "838": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "839": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "840": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x377"
    },
    "843": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMP",
      "path": "7"
    },
    "844": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "845": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "846": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "847": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "848": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "849": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "851": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "852": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "854": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "856": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "857": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "858": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "859": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "860": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "861": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP2",
      "path": "7"
    },
    "862": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "863": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "864": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "866": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "867": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "868": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "870": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "871": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP1",
      "path": "7"
    },
    "872": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP4",
      "path": "7"
    },
    "873": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "GT",
      "path": "7"
    },
    "874": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35A"
    },
    "877": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "878": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "879": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "880": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SUB",
      "path": "7"
    },
    "881": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "883": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "AND",
      "path": "7"
    },
    "884": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "DUP3",
      "path": "7"
    },
    "885": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "ADD",
      "path": "7"
    },
    "886": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "887": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "888": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "889": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "890": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "891": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "892": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "893": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "894": {
      "fn": "ERC721.name",
      "offset": [
        3118,
        3130
      ],
      "op": "POP",
      "path": "7"
    },
    "895": {
      "fn": "ERC721.name",
      "offset": [
        3039,
        3137
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "896": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        3039,
        3137
      ],
      "op": "JUMP",
      "path": "7"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4788,
        4795
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "900": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 4
    },
    "901": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "902": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "903": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "905": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "907": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "908": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "910": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "911": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "912": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "op": "SUB"
    },
    "921": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "AND",
      "path": "7"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 5,
      "value": "0x3FF"
    },
    "925": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "926": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "928": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "DUP2",
      "path": "7"
    },
    "937": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "940": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "942": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "DUP3",
      "path": "7"
    },
    "943": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "ADD",
      "path": "7"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "949": {
      "op": "DUP3"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1008": {
      "op": "DUP3"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1015": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1017": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1018": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1019": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1020": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "SUB",
      "path": "7"
    },
    "1021": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1022": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "1023": {
      "fn": "ERC721.getApproved",
      "offset": [
        4811,
        4918
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x0"
    },
    "1027": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1028": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1029": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1030": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4951
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1032": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1034": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1035": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1037": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1038": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1039": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "AND",
      "path": "7"
    },
    "1049": {
      "fn": "ERC721.getApproved",
      "offset": [
        4936,
        4960
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1050": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4672,
        4967
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1052": {
      "fn": "ERC721.approve",
      "offset": [
        4290,
        4303
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1054": {
      "fn": "ERC721.approve",
      "offset": [
        4306,
        4329
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x426"
    },
    "1057": {
      "fn": "ERC721.approve",
      "offset": [
        4321,
        4328
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1058": {
      "fn": "ERC721.approve",
      "offset": [
        4306,
        4320
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57D"
    },
    "1061": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4306,
        4329
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1062": {
      "fn": "ERC721.approve",
      "offset": [
        4306,
        4329
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1063": {
      "fn": "ERC721.approve",
      "offset": [
        4290,
        4329
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1064": {
      "fn": "ERC721.approve",
      "offset": [
        4290,
        4329
      ],
      "op": "POP",
      "path": "7"
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        4353,
        4358
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 7
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1072": {
      "op": "SHL"
    },
    "1073": {
      "op": "SUB"
    },
    "1074": {
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4358
      ],
      "op": "AND",
      "path": "7"
    },
    "1075": {
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4349
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1082": {
      "op": "SHL"
    },
    "1083": {
      "op": "SUB"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4358
      ],
      "op": "AND",
      "path": "7"
    },
    "1085": {
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4358
      ],
      "op": "EQ",
      "path": "7"
    },
    "1086": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        4347,
        4358
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x494"
    },
    "1090": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1093": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1105": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1107": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1108": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "ADD",
      "path": "7"
    },
    "1109": {
      "op": "MSTORE"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1114": {
      "op": "DUP3"
    },
    "1115": {
      "op": "ADD"
    },
    "1116": {
      "op": "MSTORE"
    },
    "1117": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1152": {
      "op": "DUP3"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1162": {
      "op": "DUP3"
    },
    "1163": {
      "op": "ADD"
    },
    "1164": {
      "op": "MSTORE"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1167": {
      "op": "ADD"
    },
    "1168": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "1171": {
      "op": "JUMP"
    },
    "1172": {
      "fn": "ERC721.approve",
      "offset": [
        4339,
        4396
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1173": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 8
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4449
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 9
    },
    "1183": {
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4449
      ],
      "op": "AND",
      "path": "7"
    },
    "1184": {
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4449
      ],
      "op": "EQ",
      "path": "7"
    },
    "1185": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4449
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1186": {
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B0"
    },
    "1189": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        4428,
        4490
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1190": {
      "op": "POP"
    },
    "1191": {
      "fn": "ERC721.approve",
      "offset": [
        4453,
        4490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B0"
    },
    "1194": {
      "fn": "ERC721.approve",
      "offset": [
        4470,
        4475
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1195": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1196": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5281,
        5487
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26F"
    },
    "1199": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        5281,
        5487
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1200": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        4453,
        4490
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x522"
    },
    "1204": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1205": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1216": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1219": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1221": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1222": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "ADD",
      "path": "7"
    },
    "1223": {
      "op": "MSTORE"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1228": {
      "op": "DUP3"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1266": {
      "op": "DUP3"
    },
    "1267": {
      "op": "ADD"
    },
    "1268": {
      "op": "MSTORE"
    },
    "1269": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "MSTORE"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "1313": {
      "op": "JUMP"
    },
    "1314": {
      "fn": "ERC721.approve",
      "offset": [
        4407,
        4572
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1315": {
      "fn": "ERC721.approve",
      "offset": [
        4583,
        4604
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 10,
      "value": "0x52C"
    },
    "1318": {
      "fn": "ERC721.approve",
      "offset": [
        4592,
        4594
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1319": {
      "fn": "ERC721.approve",
      "offset": [
        4596,
        4603
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1320": {
      "fn": "ERC721.approve",
      "offset": [
        4583,
        4591
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7B9"
    },
    "1323": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        4583,
        4604
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1324": {
      "fn": "ERC721.approve",
      "offset": [
        4583,
        4604
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1325": {
      "fn": "ERC721.approve",
      "offset": [
        4280,
        4611
      ],
      "op": "POP",
      "path": "7"
    },
    "1326": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "POP",
      "path": "7"
    },
    "1327": {
      "fn": "ERC721.approve",
      "offset": [
        4210,
        4611
      ],
      "op": "POP",
      "path": "7"
    },
    "1328": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        4210,
        4611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1329": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5549,
        5921
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1330": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5759,
        5800
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 11,
      "value": "0x53B"
    },
    "1333": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1334": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5792,
        5799
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1335": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5759,
        5777
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x827"
    },
    "1338": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5759,
        5800
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1339": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        5759,
        5800
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1340": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x557"
    },
    "1343": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1346": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1355": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1356": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1358": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "ADD",
      "path": "7"
    },
    "1359": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "1362": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1363": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10AF"
    },
    "1366": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5738,
        5875
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1367": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5738,
        5875
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1368": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5886,
        5914
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 12,
      "value": "0x52C"
    },
    "1371": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5896,
        5900
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1372": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5902,
        5904
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1373": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5906,
        5913
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1374": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5886,
        5895
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x91E"
    },
    "1377": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5886,
        5914
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1378": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5987,
        6174
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1379": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 13,
      "value": "0x52C"
    },
    "1382": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6145,
        6149
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6151,
        6153
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1384": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6155,
        6162
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1385": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1387": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1388": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1389": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1391": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "ADD",
      "path": "7"
    },
    "1392": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1394": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1395": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1396": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1399": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1400": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6167
      ],
      "op": "POP",
      "path": "7"
    },
    "1401": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6128,
        6144
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x699"
    },
    "1404": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6128,
        6167
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1405": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2664,
        2977
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1406": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2776,
        2783
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1408": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1409": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1410": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1411": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2822
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1413": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1415": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1416": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1418": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1419": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1420": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1427": {
      "op": "SHL"
    },
    "1428": {
      "op": "SUB"
    },
    "1429": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2815,
        2831
      ],
      "op": "AND",
      "path": "7"
    },
    "1430": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2862,
        2881
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 14
    },
    "1431": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E9"
    },
    "1434": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1435": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1437": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1444": {
      "op": "SHL"
    },
    "1445": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1446": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1449": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1451": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1452": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "ADD",
      "path": "7"
    },
    "1453": {
      "op": "MSTORE"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1496": {
      "op": "DUP3"
    },
    "1497": {
      "op": "ADD"
    },
    "1498": {
      "op": "MSTORE"
    },
    "1499": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1514": {
      "op": "DUP3"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "op": "MSTORE"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2841,
        2948
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "1523": {
      "op": "JUMP"
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1525": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2436,
        2443
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "op": "SUB"
    },
    "1535": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2480,
        2499
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 15
    },
    "1536": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2480,
        2499
      ],
      "op": "AND",
      "path": "7"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x65F"
    },
    "1540": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1541": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1543": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1552": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1555": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1557": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1558": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "ADD",
      "path": "7"
    },
    "1559": {
      "op": "MSTORE"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1564": {
      "op": "DUP3"
    },
    "1565": {
      "op": "ADD"
    },
    "1566": {
      "op": "MSTORE"
    },
    "1567": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1602": {
      "op": "DUP3"
    },
    "1603": {
      "op": "ADD"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1618": {
      "op": "SHL"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1621": {
      "op": "DUP3"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "1630": {
      "op": "JUMP"
    },
    "1631": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2459,
        2567
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1632": {
      "op": "POP"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "op": "SUB"
    },
    "1641": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "AND",
      "path": "7",
      "statement": 16
    },
    "1642": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1644": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1645": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1646": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1647": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2593
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1649": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1651": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1652": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1654": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1655": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1656": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1657": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2584,
        2600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1658": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        2324,
        2607
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1659": {
      "fn": "ERC721.symbol",
      "offset": [
        3201,
        3303
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1660": {
      "fn": "ERC721.symbol",
      "offset": [
        3257,
        3270
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1662": {
      "fn": "ERC721.symbol",
      "offset": [
        3289,
        3296
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 17,
      "value": "0x1"
    },
    "1664": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1665": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1666": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FE"
    },
    "1669": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1670": {
      "fn": "ERC721.symbol",
      "offset": [
        3282,
        3296
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1074"
    },
    "1673": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        3282,
        3296
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1674": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1675": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5156,
        5208
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 18,
      "value": "0x695"
    },
    "1678": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5189,
        5197
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5199,
        5207
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1681": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5156,
        5174
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xABE"
    },
    "1684": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        5156,
        5208
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1685": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5156,
        5208
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1686": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "POP",
      "path": "7"
    },
    "1687": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        5034,
        5215
      ],
      "op": "POP",
      "path": "7"
    },
    "1688": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        5034,
        5215
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1690": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6430,
        6471
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 19,
      "value": "0x6A3"
    },
    "1693": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1694": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6463,
        6470
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1695": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6430,
        6448
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x827"
    },
    "1698": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6430,
        6471
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1699": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6430,
        6471
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1700": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6BF"
    },
    "1703": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1706": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1715": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1716": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "ADD",
      "path": "7"
    },
    "1719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "1722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1723": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10AF"
    },
    "1726": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6409,
        6546
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6409,
        6546
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6556,
        6595
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 20,
      "value": "0x6CB"
    },
    "1731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6570,
        6574
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1732": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6576,
        6578
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1733": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6580,
        6587
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1734": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6589,
        6594
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1735": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6556,
        6569
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8D"
    },
    "1738": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        6556,
        6595
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1739": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6556,
        6595
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1740": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "POP",
      "path": "7"
    },
    "1741": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "POP",
      "path": "7"
    },
    "1742": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "POP",
      "path": "7"
    },
    "1743": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        6240,
        6602
      ],
      "op": "POP",
      "path": "7"
    },
    "1744": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        6240,
        6602
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1745": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1746": {
      "fn": "ERC721._exists",
      "offset": [
        8173,
        8177
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1748": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1749": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1750": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1751": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1753": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1755": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1756": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1758": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1759": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1760": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1761": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3482,
        3495
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3482,
        3495
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "op": "SUB"
    },
    "1772": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "AND",
      "path": "7"
    },
    "1773": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 21,
      "value": "0x750"
    },
    "1776": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1788": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1791": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1794": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "ADD",
      "path": "7"
    },
    "1795": {
      "op": "MSTORE"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "ADD"
    },
    "1802": {
      "op": "MSTORE"
    },
    "1803": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1838": {
      "op": "DUP3"
    },
    "1839": {
      "op": "ADD"
    },
    "1840": {
      "op": "MSTORE"
    },
    "1841": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1862": {
      "op": "DUP3"
    },
    "1863": {
      "op": "ADD"
    },
    "1864": {
      "op": "MSTORE"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "1871": {
      "op": "JUMP"
    },
    "1872": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3511,
        3621
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1873": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3632,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1875": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3656,
        3666
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x767"
    },
    "1878": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 22,
      "value": "0x40"
    },
    "1880": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1881": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1882": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1884": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1885": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "ADD",
      "path": "7"
    },
    "1886": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1887": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1888": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1891": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1892": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1893": {
      "fn": "ERC721._baseURI",
      "offset": [
        4137,
        4146
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1894": {
      "fn": "ERC721._baseURI",
      "offset": [
        4061,
        4153
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1895": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3656,
        3666
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1896": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3632,
        3666
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3632,
        3666
      ],
      "op": "POP",
      "path": "7"
    },
    "1898": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3719,
        3720
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 23,
      "value": "0x0"
    },
    "1900": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3701,
        3708
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1901": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3716
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1902": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3720
      ],
      "op": "GT",
      "path": "7"
    },
    "1903": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x787"
    },
    "1906": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1907": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1909": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1910": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1911": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1913": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "ADD",
      "path": "7"
    },
    "1914": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1916": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1917": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1918": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1920": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1921": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1922": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "POP",
      "path": "7"
    },
    "1923": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7B2"
    },
    "1926": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1927": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1928": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3763,
        3770
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1929": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3772,
        3790
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x791"
    },
    "1932": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3772,
        3779
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3772,
        3788
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBC0"
    },
    "1936": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3772,
        3790
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3772,
        3790
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1938": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1940": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1941": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1943": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "ADD",
      "path": "7"
    },
    "1944": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7A2"
    },
    "1947": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1948": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1949": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1950": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1100"
    },
    "1953": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3746,
        3791
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1954": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1955": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1957": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1958": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1962": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "SUB",
      "path": "7"
    },
    "1963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "SUB",
      "path": "7"
    },
    "1964": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1965": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1967": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1969": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3746,
        3791
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1970": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3695,
        3813
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1971": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3676,
        3813
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1972": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3369,
        3820
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1973": {
      "op": "POP"
    },
    "1974": {
      "op": "POP"
    },
    "1975": {
      "op": "POP"
    },
    "1976": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        3369,
        3820
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1977": {
      "fn": "ERC721._approve",
      "offset": [
        12087,
        12258
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1978": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 24,
      "value": "0x0"
    },
    "1980": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1981": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1982": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1983": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1985": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1987": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1988": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1990": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1991": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1992": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1993": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2000": {
      "op": "SHL"
    },
    "2001": {
      "op": "SUB"
    },
    "2002": {
      "op": "NOT"
    },
    "2003": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "AND",
      "path": "7"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "op": "SUB"
    },
    "2012": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2013": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "AND",
      "path": "7"
    },
    "2014": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2015": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2016": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "OR",
      "path": "7"
    },
    "2017": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2018": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2019": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12190
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2020": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2021": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2022": {
      "fn": "ERC721._approve",
      "offset": [
        12214,
        12237
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 25,
      "value": "0x7EE"
    },
    "2025": {
      "fn": "ERC721._approve",
      "offset": [
        12161,
        12185
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2026": {
      "fn": "ERC721._approve",
      "offset": [
        12214,
        12228
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57D"
    },
    "2029": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        12214,
        12237
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2030": {
      "fn": "ERC721._approve",
      "offset": [
        12214,
        12237
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2037": {
      "op": "SHL"
    },
    "2038": {
      "op": "SUB"
    },
    "2039": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "AND",
      "path": "7"
    },
    "2040": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2073": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2075": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2076": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2078": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2079": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2080": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2081": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "SUB",
      "path": "7"
    },
    "2082": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2083": {
      "fn": "ERC721._approve",
      "offset": [
        12205,
        12251
      ],
      "op": "LOG4",
      "path": "7"
    },
    "2084": {
      "fn": "ERC721._approve",
      "offset": [
        12087,
        12258
      ],
      "op": "POP",
      "path": "7"
    },
    "2085": {
      "fn": "ERC721._approve",
      "offset": [
        12087,
        12258
      ],
      "op": "POP",
      "path": "7"
    },
    "2086": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        12087,
        12258
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2087": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8391,
        8829
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2088": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8516,
        8520
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2090": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2091": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2092": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2093": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8203
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2095": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2097": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2098": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2100": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2101": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2102": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "SUB"
    },
    "2111": {
      "fn": "ERC721._exists",
      "offset": [
        8196,
        8212
      ],
      "op": "AND",
      "path": "7"
    },
    "2112": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 26,
      "value": "0x8A0"
    },
    "2115": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2116": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2118": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2127": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2130": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2133": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "ADD",
      "path": "7"
    },
    "2134": {
      "op": "MSTORE"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2139": {
      "op": "DUP3"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "op": "MSTORE"
    },
    "2142": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2177": {
      "op": "DUP3"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "MSTORE"
    },
    "2180": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2195": {
      "op": "SHL"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2198": {
      "op": "DUP3"
    },
    "2199": {
      "op": "ADD"
    },
    "2200": {
      "op": "MSTORE"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2203": {
      "op": "ADD"
    },
    "2204": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "2207": {
      "op": "JUMP"
    },
    "2208": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8536,
        8643
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2209": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8653,
        8666
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2211": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8669,
        8692
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8AB"
    },
    "2214": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8684,
        8691
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2215": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8669,
        8683
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57D"
    },
    "2218": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8669,
        8692
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2219": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8669,
        8692
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2220": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8653,
        8692
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2221": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8653,
        8692
      ],
      "op": "POP",
      "path": "7"
    },
    "2222": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8721,
        8726
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 27
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8726
      ],
      "op": "AND",
      "path": "7"
    },
    "2232": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8717
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "op": "SUB"
    },
    "2241": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8726
      ],
      "op": "AND",
      "path": "7"
    },
    "2242": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8726
      ],
      "op": "EQ",
      "path": "7"
    },
    "2243": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2244": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8E6"
    },
    "2247": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2248": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "POP",
      "path": "7"
    },
    "2249": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8766,
        8773
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2256": {
      "op": "SHL"
    },
    "2257": {
      "op": "SUB"
    },
    "2258": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8773
      ],
      "op": "AND",
      "path": "7"
    },
    "2259": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8762
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8DB"
    },
    "2262": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8754,
        8761
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2263": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8753
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x381"
    },
    "2266": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8742,
        8762
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2267": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8762
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2274": {
      "op": "SHL"
    },
    "2275": {
      "op": "SUB"
    },
    "2276": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8773
      ],
      "op": "AND",
      "path": "7"
    },
    "2277": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8742,
        8773
      ],
      "op": "EQ",
      "path": "7"
    },
    "2278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8821
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2280": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8821
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x916"
    },
    "2283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8710,
        8821
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2284": {
      "op": "POP"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "SUB"
    },
    "2293": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2294": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2295": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "AND",
      "path": "7"
    },
    "2296": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5418,
        5422
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2298": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2299": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2300": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2301": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5463
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2303": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2305": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2306": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2307": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2308": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2310": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2311": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2312": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5470
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2313": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2314": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2315": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "AND",
      "path": "7"
    },
    "2316": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2317": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2318": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2319": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2320": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2321": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2322": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2323": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2325": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        5445,
        5480
      ],
      "op": "AND",
      "path": "7"
    },
    "2326": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8789,
        8821
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2327": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8702,
        8822
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2328": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8391,
        8829
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2329": {
      "op": "POP"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "op": "POP"
    },
    "2333": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        8391,
        8829
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2334": {
      "fn": "ERC721._transfer",
      "offset": [
        11382,
        11976
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2335": {
      "fn": "ERC721._transfer",
      "offset": [
        11549,
        11553
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 28
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11553
      ],
      "op": "AND",
      "path": "7"
    },
    "2345": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11545
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x931"
    },
    "2348": {
      "fn": "ERC721._transfer",
      "offset": [
        11537,
        11544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2349": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11536
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x57D"
    },
    "2352": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11522,
        11545
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2353": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11545
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11553
      ],
      "op": "AND",
      "path": "7"
    },
    "2363": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        11522,
        11553
      ],
      "op": "EQ",
      "path": "7"
    },
    "2364": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x999"
    },
    "2367": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2368": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2370": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2379": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2382": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2384": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2385": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "ADD",
      "path": "7"
    },
    "2386": {
      "op": "MSTORE"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2391": {
      "op": "DUP3"
    },
    "2392": {
      "op": "ADD"
    },
    "2393": {
      "op": "MSTORE"
    },
    "2394": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2429": {
      "op": "DUP3"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2444": {
      "op": "SHL"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2447": {
      "op": "DUP3"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "op": "MSTORE"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2452": {
      "op": "ADD"
    },
    "2453": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "2456": {
      "op": "JUMP"
    },
    "2457": {
      "fn": "ERC721._transfer",
      "offset": [
        11501,
        11620
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2464": {
      "op": "SHL"
    },
    "2465": {
      "op": "SUB"
    },
    "2466": {
      "fn": "ERC721._transfer",
      "offset": [
        11638,
        11654
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 29
    },
    "2467": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        11638,
        11654
      ],
      "op": "AND",
      "path": "7"
    },
    "2468": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9FB"
    },
    "2471": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2475": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2481": {
      "op": "SHL"
    },
    "2482": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2483": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2488": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "ADD",
      "path": "7"
    },
    "2490": {
      "op": "MSTORE"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2493": {
      "op": "DUP1"
    },
    "2494": {
      "op": "DUP3"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "MSTORE"
    },
    "2535": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2545": {
      "op": "DUP3"
    },
    "2546": {
      "op": "ADD"
    },
    "2547": {
      "op": "MSTORE"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "2554": {
      "op": "JUMP"
    },
    "2555": {
      "fn": "ERC721._transfer",
      "offset": [
        11630,
        11695
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2556": {
      "fn": "ERC721._transfer",
      "offset": [
        11807,
        11836
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 30,
      "value": "0xA06"
    },
    "2559": {
      "fn": "ERC721._transfer",
      "offset": [
        11824,
        11825
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2561": {
      "fn": "ERC721._transfer",
      "offset": [
        11828,
        11835
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2562": {
      "fn": "ERC721._transfer",
      "offset": [
        11807,
        11815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7B9"
    },
    "2565": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11807,
        11836
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2566": {
      "fn": "ERC721._transfer",
      "offset": [
        11807,
        11836
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2573": {
      "op": "SHL"
    },
    "2574": {
      "op": "SUB"
    },
    "2575": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 31
    },
    "2576": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "AND",
      "path": "7"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2582": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2589": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2590": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2591": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2592": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2593": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11867
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2595": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11867
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2596": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11862
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2597": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2F"
    },
    "2600": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2601": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11867
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2602": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2603": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1145"
    },
    "2606": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11847,
        11867
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2607": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2608": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2609": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2610": {
      "fn": "ERC721._transfer",
      "offset": [
        11847,
        11867
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2611": {
      "op": "POP"
    },
    "2612": {
      "op": "POP"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 32
    },
    "2622": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "AND",
      "path": "7"
    },
    "2623": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2625": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11886
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2632": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2633": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2635": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2636": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2637": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2638": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2639": {
      "fn": "ERC721._transfer",
      "offset": [
        11894,
        11895
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2641": {
      "fn": "ERC721._transfer",
      "offset": [
        11894,
        11895
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2642": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11890
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2643": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA5D"
    },
    "2646": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2647": {
      "fn": "ERC721._transfer",
      "offset": [
        11894,
        11895
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2648": {
      "fn": "ERC721._transfer",
      "offset": [
        11894,
        11895
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2649": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115C"
    },
    "2652": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11877,
        11895
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2653": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2654": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        11877,
        11895
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x0"
    },
    "2661": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2662": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2663": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2664": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11912
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2668": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2669": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2674": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2675": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "op": "NOT"
    },
    "2685": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "AND",
      "path": "7"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2695": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2696": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "AND",
      "path": "7"
    },
    "2697": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2698": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2699": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "OR",
      "path": "7"
    },
    "2700": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2701": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11926
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2703": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 34
    },
    "2704": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2705": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2706": {
      "fn": "ERC721._transfer",
      "offset": [
        11905,
        11921
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2707": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2708": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2709": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "AND",
      "path": "7"
    },
    "2710": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2711": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2744": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2745": {
      "fn": "ERC721._transfer",
      "offset": [
        11942,
        11969
      ],
      "op": "LOG4",
      "path": "7"
    },
    "2746": {
      "fn": "ERC721._transfer",
      "offset": [
        11382,
        11976
      ],
      "op": "POP",
      "path": "7"
    },
    "2747": {
      "fn": "ERC721._transfer",
      "offset": [
        11382,
        11976
      ],
      "op": "POP",
      "path": "7"
    },
    "2748": {
      "fn": "ERC721._transfer",
      "offset": [
        11382,
        11976
      ],
      "op": "POP",
      "path": "7"
    },
    "2749": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        11382,
        11976
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12393,
        12700
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2751": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12543,
        12551
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 35
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "op": "SUB"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12551
      ],
      "op": "AND",
      "path": "7"
    },
    "2761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12539
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "op": "SUB"
    },
    "2770": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12551
      ],
      "op": "AND",
      "path": "7"
    },
    "2771": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12551
      ],
      "op": "EQ",
      "path": "7"
    },
    "2772": {
      "branch": 60,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12534,
        12551
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2773": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB20"
    },
    "2776": {
      "branch": 60,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2777": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2786": {
      "op": "SHL"
    },
    "2787": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2788": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2791": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2793": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2794": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "ADD",
      "path": "7"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2800": {
      "op": "DUP3"
    },
    "2801": {
      "op": "ADD"
    },
    "2802": {
      "op": "MSTORE"
    },
    "2803": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2838": {
      "op": "DUP3"
    },
    "2839": {
      "op": "ADD"
    },
    "2840": {
      "op": "MSTORE"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2843": {
      "op": "ADD"
    },
    "2844": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "2847": {
      "op": "JUMP"
    },
    "2848": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12526,
        12581
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "op": "SUB"
    },
    "2857": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 36
    },
    "2858": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2859": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "AND",
      "path": "7"
    },
    "2860": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2862": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2863": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2864": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2865": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2867": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2869": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2870": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2871": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2872": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2874": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2875": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2876": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12616
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2877": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2878": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2879": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "AND",
      "path": "7"
    },
    "2880": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2881": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2882": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2883": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2884": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2885": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2886": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2887": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2888": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2889": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12626
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2890": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2891": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2894": {
      "op": "NOT"
    },
    "2895": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "AND",
      "path": "7"
    },
    "2896": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2897": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2898": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2899": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2900": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2901": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "OR",
      "path": "7"
    },
    "2902": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2903": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2904": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12591,
        12637
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2905": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 37
    },
    "2906": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2907": {
      "op": "SWAP2"
    },
    "2908": {
      "op": "DUP3"
    },
    "2909": {
      "op": "MSTORE"
    },
    "2910": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2943": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2944": {
      "op": "ADD"
    },
    "2945": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2947": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2948": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2949": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2950": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SUB",
      "path": "7"
    },
    "2951": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2952": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12652,
        12693
      ],
      "op": "LOG3",
      "path": "7"
    },
    "2953": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12393,
        12700
      ],
      "op": "POP",
      "path": "7"
    },
    "2954": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12393,
        12700
      ],
      "op": "POP",
      "path": "7"
    },
    "2955": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        12393,
        12700
      ],
      "op": "POP",
      "path": "7"
    },
    "2956": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        12393,
        12700
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2957": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7464,
        7805
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2958": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7615,
        7643
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 38,
      "value": "0xB98"
    },
    "2961": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7625,
        7629
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2962": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7631,
        7633
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2963": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7635,
        7642
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2964": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7615,
        7624
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x91E"
    },
    "2967": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7615,
        7643
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2968": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7615,
        7643
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2969": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7674,
        7722
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 39,
      "value": "0xBA4"
    },
    "2972": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7697,
        7701
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2973": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7703,
        7705
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2974": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7707,
        7714
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2975": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7716,
        7721
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2976": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7674,
        7696
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCBE"
    },
    "2979": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7674,
        7722
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2980": {
      "branch": 61,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7674,
        7722
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2981": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6CB"
    },
    "2984": {
      "branch": 61,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2985": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2987": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2994": {
      "op": "SHL"
    },
    "2995": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2996": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2997": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2999": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "ADD",
      "path": "7"
    },
    "3000": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "3003": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3004": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7653,
        7798
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1174"
    },
    "3007": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7653,
        7798
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3011": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBE4"
    },
    "3015": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3016": {
      "op": "POP"
    },
    "3017": {
      "op": "POP"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 40,
      "value": "0x40"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3023": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "4"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "3036": {
      "op": "SHL"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "4"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3043": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3050": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3051": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC0E"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 41
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBF8"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11C6"
    },
    "3063": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3066": {
      "op": "POP"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 42,
      "value": "0xC07"
    },
    "3070": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3071": {
      "op": "POP"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3074": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3075": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11F7"
    },
    "3078": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3079": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3081": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "4"
    },
    "3082": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBE8"
    },
    "3085": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3086": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3087": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3099": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3100": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "4"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3102": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC29"
    },
    "3105": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3106": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC29"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF4F"
    },
    "3112": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3113": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3114": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3116": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3117": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3118": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3119": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3121": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3122": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3124": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "3125": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3127": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "4"
    },
    "3128": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "4"
    },
    "3129": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3131": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "3132": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3133": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "3134": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3136": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3137": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3138": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3139": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC53"
    },
    "3142": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3143": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3145": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3146": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "3147": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3148": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3149": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "3150": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3151": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "4"
    },
    "3152": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "4"
    },
    "3153": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3154": {
      "op": "POP"
    },
    "3155": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3156": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "4"
    },
    "3157": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3158": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "4"
    },
    "3159": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3160": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3161": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3162": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x916"
    },
    "3165": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3166": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 43,
      "value": "0xC68"
    },
    "3169": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3171": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3172": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1145"
    },
    "3175": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3176": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3177": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3178": {
      "op": "POP"
    },
    "3179": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 44,
      "value": "0xC75"
    },
    "3182": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3184": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3185": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x120B"
    },
    "3188": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3189": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3190": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC80"
    },
    "3193": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3194": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x30"
    },
    "3196": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115C"
    },
    "3199": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3200": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3201": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF8"
    },
    "3203": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "4"
    },
    "3204": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3205": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3206": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3207": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3208": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3209": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "4"
    },
    "3210": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC95"
    },
    "3213": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3214": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC95"
    },
    "3217": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x121F"
    },
    "3220": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3221": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3222": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3224": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "3225": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "4"
    },
    "3226": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3233": {
      "op": "SHL"
    },
    "3234": {
      "op": "SUB"
    },
    "3235": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "4"
    },
    "3236": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "4"
    },
    "3237": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3238": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3239": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3241": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "4"
    },
    "3242": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3243": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "4"
    },
    "3244": {
      "op": "POP"
    },
    "3245": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 45,
      "value": "0xCB7"
    },
    "3248": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3250": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3251": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11F7"
    },
    "3254": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3255": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3256": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3257": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "4"
    },
    "3258": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC57"
    },
    "3261": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13403,
        13407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3271": {
      "op": "SHL"
    },
    "3272": {
      "op": "SUB"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13423,
        13436
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13423,
        13436
      ],
      "op": "AND",
      "path": "7"
    },
    "3275": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3276": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "2",
      "statement": 46
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13419,
        14197
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDB1"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13419,
        14197
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3284": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3291": {
      "op": "SHL"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3300": {
      "op": "SHL"
    },
    "3301": {
      "op": "SUB"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "AND",
      "path": "7"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x150B7A02"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13510
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD02"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3315": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3316": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13566,
        13570
      ],
      "op": "DUP10",
      "path": "7"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13566,
        13570
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13592,
        13599
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13592,
        13599
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13621,
        13626
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13621,
        13626
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3325": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ADD",
      "path": "7"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1235"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3338": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SUB",
      "path": "7"
    },
    "3339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3342": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3343": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "GAS",
      "path": "7"
    },
    "3344": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "CALL",
      "path": "7"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "POP",
      "path": "7"
    },
    "3347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "POP",
      "path": "7"
    },
    "3348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "POP",
      "path": "7"
    },
    "3349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3D"
    },
    "3354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3355": {
      "op": "POP"
    },
    "3356": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3359": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3363": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3364": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ADD",
      "path": "7"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3368": {
      "op": "NOT"
    },
    "3369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "AND",
      "path": "7"
    },
    "3370": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3371": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ADD",
      "path": "7"
    },
    "3372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3374": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3375": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3A"
    },
    "3378": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3379": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3380": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "ADD",
      "path": "7"
    },
    "3381": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3382": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1272"
    },
    "3385": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3387": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3389": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13474,
        13644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD97"
    },
    "3393": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3394": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3395": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3398": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD6B"
    },
    "3401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3402": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3404": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3405": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3406": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "POP",
      "path": "7"
    },
    "3407": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3409": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "NOT",
      "path": "7"
    },
    "3410": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "3412": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3413": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "ADD",
      "path": "7"
    },
    "3414": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "AND",
      "path": "7"
    },
    "3415": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3416": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "ADD",
      "path": "7"
    },
    "3417": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3419": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3420": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3421": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3422": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3423": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "3424": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3426": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3428": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3429": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "ADD",
      "path": "7"
    },
    "3430": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "3431": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD70"
    },
    "3434": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3435": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3436": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "3438": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "POP",
      "path": "7"
    },
    "3440": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3441": {
      "op": "POP"
    },
    "3442": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13823,
        13836
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3443": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13823,
        13836
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3444": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13819,
        14131
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD8F"
    },
    "3447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13819,
        14131
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3448": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 47,
      "value": "0x40"
    },
    "3450": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3457": {
      "op": "SHL"
    },
    "3458": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3459": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3460": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3462": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "ADD",
      "path": "7"
    },
    "3463": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3F6"
    },
    "3466": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13865,
        13971
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1174"
    },
    "3470": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        13865,
        13971
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3471": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13819,
        14131
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3472": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14083,
        14089
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3473": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14077,
        14090
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3474": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14068,
        14074
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3475": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14064,
        14066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3477": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14060,
        14075
      ],
      "op": "ADD",
      "path": "7"
    },
    "3478": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14053,
        14091
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3479": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13454,
        14145
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3486": {
      "op": "SHL"
    },
    "3487": {
      "op": "SUB"
    },
    "3488": {
      "op": "NOT"
    },
    "3489": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13706,
        13757
      ],
      "op": "AND",
      "path": "7",
      "statement": 48
    },
    "3490": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3497": {
      "op": "SHL"
    },
    "3498": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13706,
        13757
      ],
      "op": "EQ",
      "path": "7"
    },
    "3499": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13706,
        13757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3500": {
      "op": "POP"
    },
    "3501": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13699,
        13757
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x916"
    },
    "3504": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13699,
        13757
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3505": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13419,
        14197
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14182,
        14186
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 49,
      "value": "0x1"
    },
    "3509": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3510": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3511": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "POP",
      "path": "7"
    },
    "3512": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "POP",
      "path": "7"
    },
    "3513": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "POP",
      "path": "7"
    },
    "3514": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13253,
        14203
      ],
      "op": "POP",
      "path": "7"
    },
    "3515": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        13253,
        14203
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3516": {
      "op": "JUMPDEST"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "op": "NOT"
    },
    "3526": {
      "op": "DUP2"
    },
    "3527": {
      "op": "AND"
    },
    "3528": {
      "op": "DUP2"
    },
    "3529": {
      "op": "EQ"
    },
    "3530": {
      "op": "PUSH2",
      "value": "0xDD2"
    },
    "3533": {
      "op": "JUMPI"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3536": {
      "op": "DUP1"
    },
    "3537": {
      "op": "REVERT"
    },
    "3538": {
      "op": "JUMPDEST"
    },
    "3539": {
      "op": "POP"
    },
    "3540": {
      "jump": "o",
      "op": "JUMP"
    },
    "3541": {
      "op": "JUMPDEST"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3546": {
      "op": "DUP3"
    },
    "3547": {
      "op": "DUP5"
    },
    "3548": {
      "op": "SUB"
    },
    "3549": {
      "op": "SLT"
    },
    "3550": {
      "op": "ISZERO"
    },
    "3551": {
      "op": "PUSH2",
      "value": "0xDE7"
    },
    "3554": {
      "op": "JUMPI"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3557": {
      "op": "DUP1"
    },
    "3558": {
      "op": "REVERT"
    },
    "3559": {
      "op": "JUMPDEST"
    },
    "3560": {
      "op": "DUP2"
    },
    "3561": {
      "op": "CALLDATALOAD"
    },
    "3562": {
      "op": "PUSH2",
      "value": "0x7B2"
    },
    "3565": {
      "op": "DUP2"
    },
    "3566": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "3569": {
      "jump": "i",
      "op": "JUMP"
    },
    "3570": {
      "op": "JUMPDEST"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3573": {
      "op": "JUMPDEST"
    },
    "3574": {
      "op": "DUP4"
    },
    "3575": {
      "op": "DUP2"
    },
    "3576": {
      "op": "LT"
    },
    "3577": {
      "op": "ISZERO"
    },
    "3578": {
      "op": "PUSH2",
      "value": "0xE0D"
    },
    "3581": {
      "op": "JUMPI"
    },
    "3582": {
      "op": "DUP2"
    },
    "3583": {
      "op": "DUP2"
    },
    "3584": {
      "op": "ADD"
    },
    "3585": {
      "op": "MLOAD"
    },
    "3586": {
      "op": "DUP4"
    },
    "3587": {
      "op": "DUP3"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "op": "MSTORE"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3592": {
      "op": "ADD"
    },
    "3593": {
      "op": "PUSH2",
      "value": "0xDF5"
    },
    "3596": {
      "op": "JUMP"
    },
    "3597": {
      "op": "JUMPDEST"
    },
    "3598": {
      "op": "DUP4"
    },
    "3599": {
      "op": "DUP2"
    },
    "3600": {
      "op": "GT"
    },
    "3601": {
      "op": "ISZERO"
    },
    "3602": {
      "op": "PUSH2",
      "value": "0x6CB"
    },
    "3605": {
      "op": "JUMPI"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3610": {
      "op": "SWAP2"
    },
    "3611": {
      "op": "ADD"
    },
    "3612": {
      "op": "MSTORE"
    },
    "3613": {
      "jump": "o",
      "op": "JUMP"
    },
    "3614": {
      "op": "JUMPDEST"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3617": {
      "op": "DUP2"
    },
    "3618": {
      "op": "MLOAD"
    },
    "3619": {
      "op": "DUP1"
    },
    "3620": {
      "op": "DUP5"
    },
    "3621": {
      "op": "MSTORE"
    },
    "3622": {
      "op": "PUSH2",
      "value": "0xE36"
    },
    "3625": {
      "op": "DUP2"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3628": {
      "op": "DUP7"
    },
    "3629": {
      "op": "ADD"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3632": {
      "op": "DUP7"
    },
    "3633": {
      "op": "ADD"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0xDF2"
    },
    "3637": {
      "jump": "i",
      "op": "JUMP"
    },
    "3638": {
      "op": "JUMPDEST"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3644": {
      "op": "NOT"
    },
    "3645": {
      "op": "AND"
    },
    "3646": {
      "op": "SWAP3"
    },
    "3647": {
      "op": "SWAP1"
    },
    "3648": {
      "op": "SWAP3"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3652": {
      "op": "ADD"
    },
    "3653": {
      "op": "SWAP3"
    },
    "3654": {
      "op": "SWAP2"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "jump": "o",
      "op": "JUMP"
    },
    "3658": {
      "op": "JUMPDEST"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3661": {
      "op": "DUP2"
    },
    "3662": {
      "op": "MSTORE"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3665": {
      "op": "PUSH2",
      "value": "0x7B2"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3670": {
      "op": "DUP4"
    },
    "3671": {
      "op": "ADD"
    },
    "3672": {
      "op": "DUP5"
    },
    "3673": {
      "op": "PUSH2",
      "value": "0xE1E"
    },
    "3676": {
      "jump": "i",
      "op": "JUMP"
    },
    "3677": {
      "op": "JUMPDEST"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3682": {
      "op": "DUP3"
    },
    "3683": {
      "op": "DUP5"
    },
    "3684": {
      "op": "SUB"
    },
    "3685": {
      "op": "SLT"
    },
    "3686": {
      "op": "ISZERO"
    },
    "3687": {
      "op": "PUSH2",
      "value": "0xE6F"
    },
    "3690": {
      "op": "JUMPI"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3693": {
      "op": "DUP1"
    },
    "3694": {
      "op": "REVERT"
    },
    "3695": {
      "op": "JUMPDEST"
    },
    "3696": {
      "op": "POP"
    },
    "3697": {
      "op": "CALLDATALOAD"
    },
    "3698": {
      "op": "SWAP2"
    },
    "3699": {
      "op": "SWAP1"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "jump": "o",
      "op": "JUMP"
    },
    "3702": {
      "op": "JUMPDEST"
    },
    "3703": {
      "op": "DUP1"
    },
    "3704": {
      "op": "CALLDATALOAD"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3711": {
      "op": "SHL"
    },
    "3712": {
      "op": "SUB"
    },
    "3713": {
      "op": "DUP2"
    },
    "3714": {
      "op": "AND"
    },
    "3715": {
      "op": "DUP2"
    },
    "3716": {
      "op": "EQ"
    },
    "3717": {
      "op": "PUSH2",
      "value": "0xE8D"
    },
    "3720": {
      "op": "JUMPI"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3723": {
      "op": "DUP1"
    },
    "3724": {
      "op": "REVERT"
    },
    "3725": {
      "op": "JUMPDEST"
    },
    "3726": {
      "op": "SWAP2"
    },
    "3727": {
      "op": "SWAP1"
    },
    "3728": {
      "op": "POP"
    },
    "3729": {
      "jump": "o",
      "op": "JUMP"
    },
    "3730": {
      "op": "JUMPDEST"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3733": {
      "op": "DUP1"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3736": {
      "op": "DUP4"
    },
    "3737": {
      "op": "DUP6"
    },
    "3738": {
      "op": "SUB"
    },
    "3739": {
      "op": "SLT"
    },
    "3740": {
      "op": "ISZERO"
    },
    "3741": {
      "op": "PUSH2",
      "value": "0xEA5"
    },
    "3744": {
      "op": "JUMPI"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3747": {
      "op": "DUP1"
    },
    "3748": {
      "op": "REVERT"
    },
    "3749": {
      "op": "JUMPDEST"
    },
    "3750": {
      "op": "PUSH2",
      "value": "0xEAE"
    },
    "3753": {
      "op": "DUP4"
    },
    "3754": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3757": {
      "jump": "i",
      "op": "JUMP"
    },
    "3758": {
      "op": "JUMPDEST"
    },
    "3759": {
      "op": "SWAP5"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3762": {
      "op": "SWAP4"
    },
    "3763": {
      "op": "SWAP1"
    },
    "3764": {
      "op": "SWAP4"
    },
    "3765": {
      "op": "ADD"
    },
    "3766": {
      "op": "CALLDATALOAD"
    },
    "3767": {
      "op": "SWAP4"
    },
    "3768": {
      "op": "POP"
    },
    "3769": {
      "op": "POP"
    },
    "3770": {
      "op": "POP"
    },
    "3771": {
      "jump": "o",
      "op": "JUMP"
    },
    "3772": {
      "op": "JUMPDEST"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3775": {
      "op": "DUP1"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3780": {
      "op": "DUP5"
    },
    "3781": {
      "op": "DUP7"
    },
    "3782": {
      "op": "SUB"
    },
    "3783": {
      "op": "SLT"
    },
    "3784": {
      "op": "ISZERO"
    },
    "3785": {
      "op": "PUSH2",
      "value": "0xED1"
    },
    "3788": {
      "op": "JUMPI"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3791": {
      "op": "DUP1"
    },
    "3792": {
      "op": "REVERT"
    },
    "3793": {
      "op": "JUMPDEST"
    },
    "3794": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3797": {
      "op": "DUP5"
    },
    "3798": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3801": {
      "jump": "i",
      "op": "JUMP"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "SWAP3"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "op": "PUSH2",
      "value": "0xEE8"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3810": {
      "op": "DUP6"
    },
    "3811": {
      "op": "ADD"
    },
    "3812": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3815": {
      "jump": "i",
      "op": "JUMP"
    },
    "3816": {
      "op": "JUMPDEST"
    },
    "3817": {
      "op": "SWAP2"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3821": {
      "op": "DUP5"
    },
    "3822": {
      "op": "ADD"
    },
    "3823": {
      "op": "CALLDATALOAD"
    },
    "3824": {
      "op": "SWAP1"
    },
    "3825": {
      "op": "POP"
    },
    "3826": {
      "op": "SWAP3"
    },
    "3827": {
      "op": "POP"
    },
    "3828": {
      "op": "SWAP3"
    },
    "3829": {
      "op": "POP"
    },
    "3830": {
      "op": "SWAP3"
    },
    "3831": {
      "jump": "o",
      "op": "JUMP"
    },
    "3832": {
      "op": "JUMPDEST"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3837": {
      "op": "DUP3"
    },
    "3838": {
      "op": "DUP5"
    },
    "3839": {
      "op": "SUB"
    },
    "3840": {
      "op": "SLT"
    },
    "3841": {
      "op": "ISZERO"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xF0A"
    },
    "3845": {
      "op": "JUMPI"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3848": {
      "op": "DUP1"
    },
    "3849": {
      "op": "REVERT"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "PUSH2",
      "value": "0x7B2"
    },
    "3854": {
      "op": "DUP3"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3858": {
      "jump": "i",
      "op": "JUMP"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3862": {
      "op": "DUP1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3865": {
      "op": "DUP4"
    },
    "3866": {
      "op": "DUP6"
    },
    "3867": {
      "op": "SUB"
    },
    "3868": {
      "op": "SLT"
    },
    "3869": {
      "op": "ISZERO"
    },
    "3870": {
      "op": "PUSH2",
      "value": "0xF26"
    },
    "3873": {
      "op": "JUMPI"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3876": {
      "op": "DUP1"
    },
    "3877": {
      "op": "REVERT"
    },
    "3878": {
      "op": "JUMPDEST"
    },
    "3879": {
      "op": "PUSH2",
      "value": "0xF2F"
    },
    "3882": {
      "op": "DUP4"
    },
    "3883": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3886": {
      "jump": "i",
      "op": "JUMP"
    },
    "3887": {
      "op": "JUMPDEST"
    },
    "3888": {
      "op": "SWAP2"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3892": {
      "op": "DUP4"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "CALLDATALOAD"
    },
    "3895": {
      "op": "DUP1"
    },
    "3896": {
      "op": "ISZERO"
    },
    "3897": {
      "op": "ISZERO"
    },
    "3898": {
      "op": "DUP2"
    },
    "3899": {
      "op": "EQ"
    },
    "3900": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3903": {
      "op": "JUMPI"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3906": {
      "op": "DUP1"
    },
    "3907": {
      "op": "REVERT"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "DUP1"
    },
    "3910": {
      "op": "SWAP2"
    },
    "3911": {
      "op": "POP"
    },
    "3912": {
      "op": "POP"
    },
    "3913": {
      "op": "SWAP3"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "op": "SWAP3"
    },
    "3916": {
      "op": "SWAP1"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "jump": "o",
      "op": "JUMP"
    },
    "3919": {
      "op": "JUMPDEST"
    },
    "3920": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3927": {
      "op": "SHL"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3930": {
      "op": "MSTORE"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3935": {
      "op": "MSTORE"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3940": {
      "op": "REVERT"
    },
    "3941": {
      "op": "JUMPDEST"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3944": {
      "op": "DUP1"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3947": {
      "op": "DUP1"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3950": {
      "op": "DUP6"
    },
    "3951": {
      "op": "DUP8"
    },
    "3952": {
      "op": "SUB"
    },
    "3953": {
      "op": "SLT"
    },
    "3954": {
      "op": "ISZERO"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0xF7B"
    },
    "3958": {
      "op": "JUMPI"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3961": {
      "op": "DUP1"
    },
    "3962": {
      "op": "REVERT"
    },
    "3963": {
      "op": "JUMPDEST"
    },
    "3964": {
      "op": "PUSH2",
      "value": "0xF84"
    },
    "3967": {
      "op": "DUP6"
    },
    "3968": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3971": {
      "jump": "i",
      "op": "JUMP"
    },
    "3972": {
      "op": "JUMPDEST"
    },
    "3973": {
      "op": "SWAP4"
    },
    "3974": {
      "op": "POP"
    },
    "3975": {
      "op": "PUSH2",
      "value": "0xF92"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3980": {
      "op": "DUP7"
    },
    "3981": {
      "op": "ADD"
    },
    "3982": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "3985": {
      "jump": "i",
      "op": "JUMP"
    },
    "3986": {
      "op": "JUMPDEST"
    },
    "3987": {
      "op": "SWAP3"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3991": {
      "op": "DUP6"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "op": "CALLDATALOAD"
    },
    "3994": {
      "op": "SWAP2"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3998": {
      "op": "DUP6"
    },
    "3999": {
      "op": "ADD"
    },
    "4000": {
      "op": "CALLDATALOAD"
    },
    "4001": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4010": {
      "op": "DUP1"
    },
    "4011": {
      "op": "DUP3"
    },
    "4012": {
      "op": "GT"
    },
    "4013": {
      "op": "ISZERO"
    },
    "4014": {
      "op": "PUSH2",
      "value": "0xFB6"
    },
    "4017": {
      "op": "JUMPI"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4020": {
      "op": "DUP1"
    },
    "4021": {
      "op": "REVERT"
    },
    "4022": {
      "op": "JUMPDEST"
    },
    "4023": {
      "op": "DUP2"
    },
    "4024": {
      "op": "DUP8"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "SWAP2"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "op": "DUP8"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4031": {
      "op": "DUP4"
    },
    "4032": {
      "op": "ADD"
    },
    "4033": {
      "op": "SLT"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xFCA"
    },
    "4037": {
      "op": "JUMPI"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4040": {
      "op": "DUP1"
    },
    "4041": {
      "op": "REVERT"
    },
    "4042": {
      "op": "JUMPDEST"
    },
    "4043": {
      "op": "DUP2"
    },
    "4044": {
      "op": "CALLDATALOAD"
    },
    "4045": {
      "op": "DUP2"
    },
    "4046": {
      "op": "DUP2"
    },
    "4047": {
      "op": "GT"
    },
    "4048": {
      "op": "ISZERO"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0xFDC"
    },
    "4052": {
      "op": "JUMPI"
    },
    "4053": {
      "op": "PUSH2",
      "value": "0xFDC"
    },
    "4056": {
      "op": "PUSH2",
      "value": "0xF4F"
    },
    "4059": {
      "jump": "i",
      "op": "JUMP"
    },
    "4060": {
      "op": "JUMPDEST"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4063": {
      "op": "MLOAD"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4066": {
      "op": "DUP3"
    },
    "4067": {
      "op": "ADD"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4070": {
      "op": "NOT"
    },
    "4071": {
      "op": "SWAP1"
    },
    "4072": {
      "op": "DUP2"
    },
    "4073": {
      "op": "AND"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4076": {
      "op": "ADD"
    },
    "4077": {
      "op": "AND"
    },
    "4078": {
      "op": "DUP2"
    },
    "4079": {
      "op": "ADD"
    },
    "4080": {
      "op": "SWAP1"
    },
    "4081": {
      "op": "DUP4"
    },
    "4082": {
      "op": "DUP3"
    },
    "4083": {
      "op": "GT"
    },
    "4084": {
      "op": "DUP2"
    },
    "4085": {
      "op": "DUP4"
    },
    "4086": {
      "op": "LT"
    },
    "4087": {
      "op": "OR"
    },
    "4088": {
      "op": "ISZERO"
    },
    "4089": {
      "op": "PUSH2",
      "value": "0x1004"
    },
    "4092": {
      "op": "JUMPI"
    },
    "4093": {
      "op": "PUSH2",
      "value": "0x1004"
    },
    "4096": {
      "op": "PUSH2",
      "value": "0xF4F"
    },
    "4099": {
      "jump": "i",
      "op": "JUMP"
    },
    "4100": {
      "op": "JUMPDEST"
    },
    "4101": {
      "op": "DUP2"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4104": {
      "op": "MSTORE"
    },
    "4105": {
      "op": "DUP3"
    },
    "4106": {
      "op": "DUP2"
    },
    "4107": {
      "op": "MSTORE"
    },
    "4108": {
      "op": "DUP11"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4111": {
      "op": "DUP5"
    },
    "4112": {
      "op": "DUP8"
    },
    "4113": {
      "op": "ADD"
    },
    "4114": {
      "op": "ADD"
    },
    "4115": {
      "op": "GT"
    },
    "4116": {
      "op": "ISZERO"
    },
    "4117": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4120": {
      "op": "JUMPI"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4123": {
      "op": "DUP1"
    },
    "4124": {
      "op": "REVERT"
    },
    "4125": {
      "op": "JUMPDEST"
    },
    "4126": {
      "op": "DUP3"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4129": {
      "op": "DUP7"
    },
    "4130": {
      "op": "ADD"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4133": {
      "op": "DUP4"
    },
    "4134": {
      "op": "ADD"
    },
    "4135": {
      "op": "CALLDATACOPY"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4140": {
      "op": "DUP5"
    },
    "4141": {
      "op": "DUP4"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "op": "ADD"
    },
    "4144": {
      "op": "MSTORE"
    },
    "4145": {
      "op": "DUP1"
    },
    "4146": {
      "op": "SWAP6"
    },
    "4147": {
      "op": "POP"
    },
    "4148": {
      "op": "POP"
    },
    "4149": {
      "op": "POP"
    },
    "4150": {
      "op": "POP"
    },
    "4151": {
      "op": "POP"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "op": "SWAP3"
    },
    "4154": {
      "op": "SWAP6"
    },
    "4155": {
      "op": "SWAP2"
    },
    "4156": {
      "op": "SWAP5"
    },
    "4157": {
      "op": "POP"
    },
    "4158": {
      "op": "SWAP3"
    },
    "4159": {
      "op": "POP"
    },
    "4160": {
      "jump": "o",
      "op": "JUMP"
    },
    "4161": {
      "op": "JUMPDEST"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4164": {
      "op": "DUP1"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4167": {
      "op": "DUP4"
    },
    "4168": {
      "op": "DUP6"
    },
    "4169": {
      "op": "SUB"
    },
    "4170": {
      "op": "SLT"
    },
    "4171": {
      "op": "ISZERO"
    },
    "4172": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4175": {
      "op": "JUMPI"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4178": {
      "op": "DUP1"
    },
    "4179": {
      "op": "REVERT"
    },
    "4180": {
      "op": "JUMPDEST"
    },
    "4181": {
      "op": "PUSH2",
      "value": "0x105D"
    },
    "4184": {
      "op": "DUP4"
    },
    "4185": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "4188": {
      "jump": "i",
      "op": "JUMP"
    },
    "4189": {
      "op": "JUMPDEST"
    },
    "4190": {
      "op": "SWAP2"
    },
    "4191": {
      "op": "POP"
    },
    "4192": {
      "op": "PUSH2",
      "value": "0x106B"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4197": {
      "op": "DUP5"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "op": "PUSH2",
      "value": "0xE76"
    },
    "4202": {
      "jump": "i",
      "op": "JUMP"
    },
    "4203": {
      "op": "JUMPDEST"
    },
    "4204": {
      "op": "SWAP1"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "op": "SWAP3"
    },
    "4207": {
      "op": "POP"
    },
    "4208": {
      "op": "SWAP3"
    },
    "4209": {
      "op": "SWAP1"
    },
    "4210": {
      "op": "POP"
    },
    "4211": {
      "jump": "o",
      "op": "JUMP"
    },
    "4212": {
      "op": "JUMPDEST"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4215": {
      "op": "DUP2"
    },
    "4216": {
      "op": "DUP2"
    },
    "4217": {
      "op": "SHR"
    },
    "4218": {
      "op": "SWAP1"
    },
    "4219": {
      "op": "DUP3"
    },
    "4220": {
      "op": "AND"
    },
    "4221": {
      "op": "DUP1"
    },
    "4222": {
      "op": "PUSH2",
      "value": "0x1088"
    },
    "4225": {
      "op": "JUMPI"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4228": {
      "op": "DUP3"
    },
    "4229": {
      "op": "AND"
    },
    "4230": {
      "op": "SWAP2"
    },
    "4231": {
      "op": "POP"
    },
    "4232": {
      "op": "JUMPDEST"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4235": {
      "op": "DUP3"
    },
    "4236": {
      "op": "LT"
    },
    "4237": {
      "op": "DUP2"
    },
    "4238": {
      "op": "EQ"
    },
    "4239": {
      "op": "ISZERO"
    },
    "4240": {
      "op": "PUSH2",
      "value": "0x10A9"
    },
    "4243": {
      "op": "JUMPI"
    },
    "4244": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4254": {
      "op": "MSTORE"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4259": {
      "op": "MSTORE"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4264": {
      "op": "REVERT"
    },
    "4265": {
      "op": "JUMPDEST"
    },
    "4266": {
      "op": "POP"
    },
    "4267": {
      "op": "SWAP2"
    },
    "4268": {
      "op": "SWAP1"
    },
    "4269": {
      "op": "POP"
    },
    "4270": {
      "jump": "o",
      "op": "JUMP"
    },
    "4271": {
      "op": "JUMPDEST"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4274": {
      "op": "DUP1"
    },
    "4275": {
      "op": "DUP3"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4279": {
      "op": "SWAP1"
    },
    "4280": {
      "op": "DUP3"
    },
    "4281": {
      "op": "ADD"
    },
    "4282": {
      "op": "MSTORE"
    },
    "4283": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4318": {
      "op": "DUP3"
    },
    "4319": {
      "op": "ADD"
    },
    "4320": {
      "op": "MSTORE"
    },
    "4321": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4341": {
      "op": "SHL"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4344": {
      "op": "DUP3"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "MSTORE"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "SWAP1"
    },
    "4351": {
      "jump": "o",
      "op": "JUMP"
    },
    "4352": {
      "op": "JUMPDEST"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4355": {
      "op": "DUP4"
    },
    "4356": {
      "op": "MLOAD"
    },
    "4357": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4360": {
      "op": "DUP2"
    },
    "4361": {
      "op": "DUP5"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4364": {
      "op": "DUP9"
    },
    "4365": {
      "op": "ADD"
    },
    "4366": {
      "op": "PUSH2",
      "value": "0xDF2"
    },
    "4369": {
      "jump": "i",
      "op": "JUMP"
    },
    "4370": {
      "op": "JUMPDEST"
    },
    "4371": {
      "op": "DUP4"
    },
    "4372": {
      "op": "MLOAD"
    },
    "4373": {
      "op": "SWAP1"
    },
    "4374": {
      "op": "DUP4"
    },
    "4375": {
      "op": "ADD"
    },
    "4376": {
      "op": "SWAP1"
    },
    "4377": {
      "op": "PUSH2",
      "value": "0x1126"
    },
    "4380": {
      "op": "DUP2"
    },
    "4381": {
      "op": "DUP4"
    },
    "4382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4384": {
      "op": "DUP9"
    },
    "4385": {
      "op": "ADD"
    },
    "4386": {
      "op": "PUSH2",
      "value": "0xDF2"
    },
    "4389": {
      "jump": "i",
      "op": "JUMP"
    },
    "4390": {
      "op": "JUMPDEST"
    },
    "4391": {
      "op": "ADD"
    },
    "4392": {
      "op": "SWAP5"
    },
    "4393": {
      "op": "SWAP4"
    },
    "4394": {
      "op": "POP"
    },
    "4395": {
      "op": "POP"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "jump": "o",
      "op": "JUMP"
    },
    "4399": {
      "op": "JUMPDEST"
    },
    "4400": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4407": {
      "op": "SHL"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4410": {
      "op": "MSTORE"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4415": {
      "op": "MSTORE"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4420": {
      "op": "REVERT"
    },
    "4421": {
      "op": "JUMPDEST"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4424": {
      "op": "DUP3"
    },
    "4425": {
      "op": "DUP3"
    },
    "4426": {
      "op": "LT"
    },
    "4427": {
      "op": "ISZERO"
    },
    "4428": {
      "op": "PUSH2",
      "value": "0x1157"
    },
    "4431": {
      "op": "JUMPI"
    },
    "4432": {
      "op": "PUSH2",
      "value": "0x1157"
    },
    "4435": {
      "op": "PUSH2",
      "value": "0x112F"
    },
    "4438": {
      "jump": "i",
      "op": "JUMP"
    },
    "4439": {
      "op": "JUMPDEST"
    },
    "4440": {
      "op": "POP"
    },
    "4441": {
      "op": "SUB"
    },
    "4442": {
      "op": "SWAP1"
    },
    "4443": {
      "jump": "o",
      "op": "JUMP"
    },
    "4444": {
      "op": "JUMPDEST"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "NOT"
    },
    "4449": {
      "op": "DUP3"
    },
    "4450": {
      "op": "GT"
    },
    "4451": {
      "op": "ISZERO"
    },
    "4452": {
      "op": "PUSH2",
      "value": "0x116F"
    },
    "4455": {
      "op": "JUMPI"
    },
    "4456": {
      "op": "PUSH2",
      "value": "0x116F"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x112F"
    },
    "4462": {
      "jump": "i",
      "op": "JUMP"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "op": "POP"
    },
    "4465": {
      "op": "ADD"
    },
    "4466": {
      "op": "SWAP1"
    },
    "4467": {
      "jump": "o",
      "op": "JUMP"
    },
    "4468": {
      "op": "JUMPDEST"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4471": {
      "op": "DUP1"
    },
    "4472": {
      "op": "DUP3"
    },
    "4473": {
      "op": "MSTORE"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4476": {
      "op": "SWAP1"
    },
    "4477": {
      "op": "DUP3"
    },
    "4478": {
      "op": "ADD"
    },
    "4479": {
      "op": "MSTORE"
    },
    "4480": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "MSTORE"
    },
    "4518": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4539": {
      "op": "SHL"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4542": {
      "op": "DUP3"
    },
    "4543": {
      "op": "ADD"
    },
    "4544": {
      "op": "MSTORE"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4547": {
      "op": "ADD"
    },
    "4548": {
      "op": "SWAP1"
    },
    "4549": {
      "jump": "o",
      "op": "JUMP"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4555": {
      "op": "NOT"
    },
    "4556": {
      "op": "DUP3"
    },
    "4557": {
      "op": "EQ"
    },
    "4558": {
      "op": "ISZERO"
    },
    "4559": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4562": {
      "op": "JUMPI"
    },
    "4563": {
      "op": "PUSH2",
      "value": "0x11DA"
    },
    "4566": {
      "op": "PUSH2",
      "value": "0x112F"
    },
    "4569": {
      "jump": "i",
      "op": "JUMP"
    },
    "4570": {
      "op": "JUMPDEST"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "SWAP1"
    },
    "4576": {
      "jump": "o",
      "op": "JUMP"
    },
    "4577": {
      "op": "JUMPDEST"
    },
    "4578": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4585": {
      "op": "SHL"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4588": {
      "op": "MSTORE"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4593": {
      "op": "MSTORE"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4598": {
      "op": "REVERT"
    },
    "4599": {
      "op": "JUMPDEST"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4602": {
      "op": "DUP3"
    },
    "4603": {
      "op": "PUSH2",
      "value": "0x1206"
    },
    "4606": {
      "op": "JUMPI"
    },
    "4607": {
      "op": "PUSH2",
      "value": "0x1206"
    },
    "4610": {
      "op": "PUSH2",
      "value": "0x11E1"
    },
    "4613": {
      "jump": "i",
      "op": "JUMP"
    },
    "4614": {
      "op": "JUMPDEST"
    },
    "4615": {
      "op": "POP"
    },
    "4616": {
      "op": "DIV"
    },
    "4617": {
      "op": "SWAP1"
    },
    "4618": {
      "jump": "o",
      "op": "JUMP"
    },
    "4619": {
      "op": "JUMPDEST"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4622": {
      "op": "DUP3"
    },
    "4623": {
      "op": "PUSH2",
      "value": "0x121A"
    },
    "4626": {
      "op": "JUMPI"
    },
    "4627": {
      "op": "PUSH2",
      "value": "0x121A"
    },
    "4630": {
      "op": "PUSH2",
      "value": "0x11E1"
    },
    "4633": {
      "jump": "i",
      "op": "JUMP"
    },
    "4634": {
      "op": "JUMPDEST"
    },
    "4635": {
      "op": "POP"
    },
    "4636": {
      "op": "MOD"
    },
    "4637": {
      "op": "SWAP1"
    },
    "4638": {
      "jump": "o",
      "op": "JUMP"
    },
    "4639": {
      "op": "JUMPDEST"
    },
    "4640": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4647": {
      "op": "SHL"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4650": {
      "op": "MSTORE"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4655": {
      "op": "MSTORE"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4660": {
      "op": "REVERT"
    },
    "4661": {
      "op": "JUMPDEST"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4668": {
      "op": "SHL"
    },
    "4669": {
      "op": "SUB"
    },
    "4670": {
      "op": "DUP6"
    },
    "4671": {
      "op": "DUP2"
    },
    "4672": {
      "op": "AND"
    },
    "4673": {
      "op": "DUP3"
    },
    "4674": {
      "op": "MSTORE"
    },
    "4675": {
      "op": "DUP5"
    },
    "4676": {
      "op": "AND"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4679": {
      "op": "DUP3"
    },
    "4680": {
      "op": "ADD"
    },
    "4681": {
      "op": "MSTORE"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4684": {
      "op": "DUP2"
    },
    "4685": {
      "op": "ADD"
    },
    "4686": {
      "op": "DUP4"
    },
    "4687": {
      "op": "SWAP1"
    },
    "4688": {
      "op": "MSTORE"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4693": {
      "op": "DUP3"
    },
    "4694": {
      "op": "ADD"
    },
    "4695": {
      "op": "DUP2"
    },
    "4696": {
      "op": "SWAP1"
    },
    "4697": {
      "op": "MSTORE"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4700": {
      "op": "SWAP1"
    },
    "4701": {
      "op": "PUSH2",
      "value": "0x1268"
    },
    "4704": {
      "op": "SWAP1"
    },
    "4705": {
      "op": "DUP4"
    },
    "4706": {
      "op": "ADD"
    },
    "4707": {
      "op": "DUP5"
    },
    "4708": {
      "op": "PUSH2",
      "value": "0xE1E"
    },
    "4711": {
      "jump": "i",
      "op": "JUMP"
    },
    "4712": {
      "op": "JUMPDEST"
    },
    "4713": {
      "op": "SWAP7"
    },
    "4714": {
      "op": "SWAP6"
    },
    "4715": {
      "op": "POP"
    },
    "4716": {
      "op": "POP"
    },
    "4717": {
      "op": "POP"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "op": "POP"
    },
    "4721": {
      "jump": "o",
      "op": "JUMP"
    },
    "4722": {
      "op": "JUMPDEST"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4727": {
      "op": "DUP3"
    },
    "4728": {
      "op": "DUP5"
    },
    "4729": {
      "op": "SUB"
    },
    "4730": {
      "op": "SLT"
    },
    "4731": {
      "op": "ISZERO"
    },
    "4732": {
      "op": "PUSH2",
      "value": "0x1284"
    },
    "4735": {
      "op": "JUMPI"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4738": {
      "op": "DUP1"
    },
    "4739": {
      "op": "REVERT"
    },
    "4740": {
      "op": "JUMPDEST"
    },
    "4741": {
      "op": "DUP2"
    },
    "4742": {
      "op": "MLOAD"
    },
    "4743": {
      "op": "PUSH2",
      "value": "0x7B2"
    },
    "4746": {
      "op": "DUP2"
    },
    "4747": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "4750": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "eac012d7d210f66cf1c18e0cf99e9541172e93b5",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\n// import \"./IERC721.sol\";\n// import \"./IERC721Receiver.sol\";\n// import \"./extensions/IERC721Metadata.sol\";\n// import \"../../utils/Address.sol\";\n// import \"../../utils/Context.sol\";\n// import \"../../utils/Strings.sol\";\n// import \"../../utils/introspection/ERC165.sol\";\n\nimport \"./IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            owner != address(0),\n            \"ERC721: balance query for the zero address\"\n        );\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        address owner = _owners[tokenId];\n        require(\n            owner != address(0),\n            \"ERC721: owner query for nonexistent token\"\n        );\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n\n        string memory baseURI = _baseURI();\n        return\n            bytes(baseURI).length > 0\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\n                : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: approved query for nonexistent token\"\n        );\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        //solhint-disable-next-line max-line-length\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\n        internal\n        view\n        virtual\n        returns (bool)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: operator query for nonexistent token\"\n        );\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner ||\n            getApproved(tokenId) == spender ||\n            isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(\n            ERC721.ownerOf(tokenId) == from,\n            \"ERC721: transfer of token that is not own\"\n        );\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try\n                IERC721Receiver(to).onERC721Received(\n                    _msgSender(),\n                    from,\n                    tokenId,\n                    _data\n                )\n            returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\n                        \"ERC721: transfer to non ERC721Receiver implementer\"\n                    );\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "979:13904:7:-:0;;;1741:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1807:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1830:17:7;;;;:7;;:17;;;;;:::i;:::-;;1741:113;;979:13904;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;979:13904:7;;;-1:-1:-1;979:13904:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:14:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:14;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;979:13904:7;;;;;;",
  "sourcePath": "contracts/ERC721.sol",
  "type": "contract"
}